org.apache.tools.ant.util.DOMElementWriter	[org.apache.tools.ant.util.DOMElementWriter::org.apache.tools.ant.util.DOMElementWriter.XmlNamespacePolicy namespacePolicy, org.apache.tools.ant.util.DOMElementWriter::java.util.HashMap nsPrefixMap, org.apache.tools.ant.util.DOMElementWriter::closeElement(org.w3c.dom.Element, java.io.Writer, int, java.lang.String, boolean):void, org.apache.tools.ant.util.DOMElementWriter::removeNSDefinitions(org.w3c.dom.Element):void, org.apache.tools.ant.util.DOMElementWriter::java.util.HashMap nsURIByElement, org.apache.tools.ant.util.DOMElementWriter::addNSDefinition(org.w3c.dom.Element, java.lang.String):void, org.apache.tools.ant.util.DOMElementWriter::openElement(org.w3c.dom.Element, java.io.Writer, int, java.lang.String, boolean):void, org.apache.tools.ant.util.DOMElementWriter::write(org.w3c.dom.Element, java.io.Writer, int, java.lang.String):void, org.apache.tools.ant.util.DOMElementWriter::int nextPrefix, org.apache.tools.ant.util.DOMElementWriter::java.lang.String[] knownEntities, org.apache.tools.ant.util.DOMElementWriter::isReference(java.lang.String):boolean, org.apache.tools.ant.util.DOMElementWriter::encode(java.lang.String):java.lang.String, org.apache.tools.ant.util.DOMElementWriter::encodedata(java.lang.String):java.lang.String, org.apache.tools.ant.util.DOMElementWriter::isLegalCharacter(char):boolean]
org.apache.tools.ant.util.DOMElementWriter	[org.apache.tools.ant.util.DOMElementWriter::java.lang.String[] knownEntities, org.apache.tools.ant.util.DOMElementWriter::isReference(java.lang.String):boolean, org.apache.tools.ant.util.DOMElementWriter::encode(java.lang.String):java.lang.String, org.apache.tools.ant.util.DOMElementWriter::encodedata(java.lang.String):java.lang.String, org.apache.tools.ant.util.DOMElementWriter::isLegalCharacter(char):boolean]
org.apache.tools.ant.util.DOMElementWriter	[org.apache.tools.ant.util.DOMElementWriter::org.apache.tools.ant.util.DOMElementWriter.XmlNamespacePolicy namespacePolicy, org.apache.tools.ant.util.DOMElementWriter::java.util.HashMap nsPrefixMap, org.apache.tools.ant.util.DOMElementWriter::closeElement(org.w3c.dom.Element, java.io.Writer, int, java.lang.String, boolean):void, org.apache.tools.ant.util.DOMElementWriter::removeNSDefinitions(org.w3c.dom.Element):void]
org.apache.tools.ant.util.DOMElementWriter	[org.apache.tools.ant.util.DOMElementWriter::org.apache.tools.ant.util.DOMElementWriter.XmlNamespacePolicy namespacePolicy, org.apache.tools.ant.util.DOMElementWriter::java.util.HashMap nsPrefixMap, org.apache.tools.ant.util.DOMElementWriter::closeElement(org.w3c.dom.Element, java.io.Writer, int, java.lang.String, boolean):void, org.apache.tools.ant.util.DOMElementWriter::removeNSDefinitions(org.w3c.dom.Element):void, org.apache.tools.ant.util.DOMElementWriter::java.util.HashMap nsURIByElement, org.apache.tools.ant.util.DOMElementWriter::addNSDefinition(org.w3c.dom.Element, java.lang.String):void, org.apache.tools.ant.util.DOMElementWriter::openElement(org.w3c.dom.Element, java.io.Writer, int, java.lang.String, boolean):void, org.apache.tools.ant.util.DOMElementWriter::write(org.w3c.dom.Element, java.io.Writer, int, java.lang.String):void, org.apache.tools.ant.util.DOMElementWriter::int nextPrefix]
org.apache.tools.ant.taskdefs.AbstractCvsTask	[org.apache.tools.ant.taskdefs.AbstractCvsTask::boolean append, org.apache.tools.ant.taskdefs.AbstractCvsTask::java.io.File error, org.apache.tools.ant.taskdefs.AbstractCvsTask::getErrorStream():java.io.OutputStream, org.apache.tools.ant.taskdefs.AbstractCvsTask::java.io.OutputStream errorStream, org.apache.tools.ant.taskdefs.AbstractCvsTask::getExecuteStreamHandler():org.apache.tools.ant.taskdefs.ExecuteStreamHandler, org.apache.tools.ant.taskdefs.AbstractCvsTask::org.apache.tools.ant.taskdefs.ExecuteStreamHandler executeStreamHandler, org.apache.tools.ant.taskdefs.AbstractCvsTask::getOutputStream():java.io.OutputStream, org.apache.tools.ant.taskdefs.AbstractCvsTask::java.io.File output, org.apache.tools.ant.taskdefs.AbstractCvsTask::java.io.OutputStream outputStream]
org.apache.tools.ant.taskdefs.optional.junit.FormatterElement	[org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.lang.String classname, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::setClassname(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.lang.String extension, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::boolean useFile, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.io.File outFile, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.io.OutputStream out, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::createFormatter(java.lang.ClassLoader):org.apache.tools.ant.taskdefs.optional.junit.JUnitTaskMirror.JUnitResultFormatterMirror, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::setType(org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.TypeAttribute):void]
org.apache.tools.ant.taskdefs.optional.junit.FormatterElement	[org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.lang.String ifProperty, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::shouldUse(org.apache.tools.ant.Task):boolean, org.apache.tools.ant.taskdefs.optional.junit.FormatterElement::java.lang.String unlessProperty]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getVersionCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getTypeCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mTypeName, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mTypeValue, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getTypeValueCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getVersionCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getCommentCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getVersionCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr::getTypeCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String references, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferenceFilesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferencesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::notEmpty(java.lang.String):boolean, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String targetType, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.TargetTypes):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getTargetTypeParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String additionalModules, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getAdditionalModulesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::boolean includeDefaultReferences, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getIncludeDefaultReferencesParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String references, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferenceFilesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferencesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::notEmpty(java.lang.String):boolean, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String targetType, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.TargetTypes):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getTargetTypeParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String additionalModules, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getAdditionalModulesParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String references, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferenceFilesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferencesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::notEmpty(java.lang.String):boolean, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String targetType, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::setTargetType(org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.TargetTypes):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getTargetTypeParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String references, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferenceFilesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getReferencesParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::notEmpty(java.lang.String):boolean]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.util.Vector definitionList, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getDefinitionsParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getDefinitionsDelimiter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::java.lang.String extraOptions, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getExtraOptionsParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile::getExtraOptionsParameters():java.lang.String[]]
org.apache.tools.ant.taskdefs.optional.ejb.Ejbc	[org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDescriptors(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDest(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedManifestFile, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setManifest(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.lang.String classpath, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setClasspath(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File sourceDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setSrc(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.ejb.Ejbc	[org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDescriptors(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDest(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedManifestFile, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setManifest(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.lang.String classpath, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setClasspath(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.ejb.Ejbc	[org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDescriptors(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDest(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedManifestFile, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setManifest(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.ejb.Ejbc	[org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDescriptors(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.Ejbc::setDest(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String fromDate, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionDate():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String toDate, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::int numDays, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.text.DateFormat dateFormat, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::calcDate(java.lang.String, int):java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::boolean failOnError, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getFailOnError():boolean, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::org.apache.tools.ant.taskdefs.optional.vss.MSVSS.WritableFiles writableFiles, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getWritableFiles():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::org.apache.tools.ant.taskdefs.optional.vss.MSVSS.CurrentModUpdated timestamp, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getFileTimeStamp():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::boolean failOnError, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getFailOnError():boolean, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::org.apache.tools.ant.taskdefs.optional.vss.MSVSS.WritableFiles writableFiles, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getWritableFiles():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String ssDir, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::setSsdir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getSSCommand():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String version, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersion():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String date, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionDateLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String label, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getShortLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String fromLabel, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String toLabel]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String version, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersion():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String date, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionDateLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String label, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getShortLabel():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String fromDate, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionDate():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String toDate, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::int numDays]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String label, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getShortLabel():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String version, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersion():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String date, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionDateLabel():java.lang.String]
org.apache.tools.ant.taskdefs.optional.vss.MSVSS	[org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String fromLabel, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::getVersionLabel():java.lang.String, org.apache.tools.ant.taskdefs.optional.vss.MSVSS::java.lang.String toLabel]
org.apache.tools.ant.util.ClasspathUtils.Delegate	[org.apache.tools.ant.util.ClasspathUtils.Delegate::org.apache.tools.ant.ProjectComponent component, org.apache.tools.ant.util.ClasspathUtils.Delegate::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.util.ClasspathUtils.Delegate::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.util.ClasspathUtils.Delegate::setClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.util.ClasspathUtils.Delegate::java.lang.String classpathId, org.apache.tools.ant.util.ClasspathUtils.Delegate::getClassLoadId():java.lang.String, org.apache.tools.ant.util.ClasspathUtils.Delegate::java.lang.String loaderId, org.apache.tools.ant.util.ClasspathUtils.Delegate::setLoaderRef(org.apache.tools.ant.types.Reference):void, org.apache.tools.ant.util.ClasspathUtils.Delegate::setClasspathref(org.apache.tools.ant.types.Reference):void]
org.apache.tools.ant.util.ClasspathUtils.Delegate	[org.apache.tools.ant.util.ClasspathUtils.Delegate::org.apache.tools.ant.ProjectComponent component, org.apache.tools.ant.util.ClasspathUtils.Delegate::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.util.ClasspathUtils.Delegate::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.util.ClasspathUtils.Delegate::setClasspath(org.apache.tools.ant.types.Path):void]
org.apache.tools.ant.util.ClasspathUtils.Delegate	[org.apache.tools.ant.util.ClasspathUtils.Delegate::java.lang.String classpathId, org.apache.tools.ant.util.ClasspathUtils.Delegate::getClassLoadId():java.lang.String, org.apache.tools.ant.util.ClasspathUtils.Delegate::java.lang.String loaderId, org.apache.tools.ant.util.ClasspathUtils.Delegate::setLoaderRef(org.apache.tools.ant.types.Reference):void, org.apache.tools.ant.util.ClasspathUtils.Delegate::setClasspathref(org.apache.tools.ant.types.Reference):void]
org.apache.tools.ant.AntClassLoader	[org.apache.tools.ant.AntClassLoader::boolean parentFirst, org.apache.tools.ant.AntClassLoader::java.util.Vector systemPackages, org.apache.tools.ant.AntClassLoader::addSystemPackageRoot(java.lang.String):void, org.apache.tools.ant.AntClassLoader::isParentFirst(java.lang.String):boolean, org.apache.tools.ant.AntClassLoader::java.util.Vector loaderPackages, org.apache.tools.ant.AntClassLoader::addLoaderPackageRoot(java.lang.String):void, org.apache.tools.ant.AntClassLoader::addJavaLibraries():void]
org.apache.tools.ant.AntClassLoader	[org.apache.tools.ant.AntClassLoader::java.util.Hashtable zipFiles, org.apache.tools.ant.AntClassLoader::getResourceStream(java.io.File, java.lang.String):java.io.InputStream, org.apache.tools.ant.AntClassLoader::getResourceURL(java.io.File, java.lang.String):java.net.URL]
org.apache.tools.ant.taskdefs.MakeUrl	[org.apache.tools.ant.taskdefs.MakeUrl::java.lang.String property, org.apache.tools.ant.taskdefs.MakeUrl::java.io.File file, org.apache.tools.ant.taskdefs.MakeUrl::validate():void, org.apache.tools.ant.taskdefs.MakeUrl::java.util.List filesets, org.apache.tools.ant.taskdefs.MakeUrl::java.util.List paths]
org.apache.tools.ant.taskdefs.Sleep	[org.apache.tools.ant.taskdefs.Sleep::int seconds, org.apache.tools.ant.taskdefs.Sleep::getSleepTime():long, org.apache.tools.ant.taskdefs.Sleep::int hours, org.apache.tools.ant.taskdefs.Sleep::int minutes, org.apache.tools.ant.taskdefs.Sleep::int milliseconds]
org.apache.tools.ant.taskdefs.optional.TraXLiaison	[org.apache.tools.ant.taskdefs.optional.TraXLiaison::java.lang.String factoryName, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.URIResolver uriResolver, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.TransformerFactory tfactory, org.apache.tools.ant.taskdefs.optional.TraXLiaison::getFactory():javax.xml.transform.TransformerFactory, org.apache.tools.ant.taskdefs.optional.TraXLiaison::java.util.Vector attributes, org.apache.tools.ant.taskdefs.optional.TraXLiaison::setAttribute(java.lang.String, java.lang.Object):void]
org.apache.tools.ant.taskdefs.optional.TraXLiaison	[org.apache.tools.ant.taskdefs.optional.TraXLiaison::java.lang.String factoryName, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.URIResolver uriResolver, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.TransformerFactory tfactory, org.apache.tools.ant.taskdefs.optional.TraXLiaison::getFactory():javax.xml.transform.TransformerFactory, org.apache.tools.ant.taskdefs.optional.TraXLiaison::java.util.Vector attributes, org.apache.tools.ant.taskdefs.optional.TraXLiaison::setAttribute(java.lang.String, java.lang.Object):void, org.apache.tools.ant.taskdefs.optional.TraXLiaison::org.xml.sax.EntityResolver entityResolver, org.apache.tools.ant.taskdefs.optional.TraXLiaison::getSource(java.io.InputStream, java.io.File):javax.xml.transform.Source, org.apache.tools.ant.taskdefs.optional.TraXLiaison::getSource(java.io.InputStream, org.apache.tools.ant.types.Resource):javax.xml.transform.Source]
org.apache.tools.ant.taskdefs.optional.TraXLiaison	[org.apache.tools.ant.taskdefs.optional.TraXLiaison::java.lang.String factoryName, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.URIResolver uriResolver, org.apache.tools.ant.taskdefs.optional.TraXLiaison::javax.xml.transform.TransformerFactory tfactory, org.apache.tools.ant.taskdefs.optional.TraXLiaison::getFactory():javax.xml.transform.TransformerFactory]
org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout	[org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mOut, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getOutCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mBranch, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getBranchCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout	[org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mOut, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getOutCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mBranch, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getBranchCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getCommentCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout	[org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mOut, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getOutCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mBranch, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getBranchCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout	[org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::boolean mReserved, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::boolean mNdata, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::boolean mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::boolean mNwarn, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mOut, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getOutCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mBranch, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getBranchCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout::checkOptions(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper	[org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File sourceDirectory, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::isRegenRequired(java.io.File):boolean, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::boolean keepGenerated, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::getCommandLine(boolean, java.io.File):java.lang.String[], org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::regenerateSupportClasses(java.io.File):void]
org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper	[org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File sourceDirectory, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::isRegenRequired(java.io.File):boolean]
org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper	[org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.io.File manifestFile, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::java.lang.String[] descriptors, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::main(java.lang.String[]):void, org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper::process():void]
org.apache.tools.ant.taskdefs.optional.jlink.jlink	[org.apache.tools.ant.taskdefs.optional.jlink.jlink::boolean compression, org.apache.tools.ant.taskdefs.optional.jlink.jlink::processEntry(java.util.zip.ZipFile, java.util.zip.ZipEntry):java.util.zip.ZipEntry, org.apache.tools.ant.taskdefs.optional.jlink.jlink::byte[] buffer, org.apache.tools.ant.taskdefs.optional.jlink.jlink::addToOutputStream(java.util.zip.ZipOutputStream, java.io.InputStream, java.util.zip.ZipEntry):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::calcChecksum(java.io.InputStream):long, org.apache.tools.ant.taskdefs.optional.jlink.jlink::mergeZipJarContents(java.util.zip.ZipOutputStream, java.io.File):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::calcChecksum(java.io.File):long]
org.apache.tools.ant.taskdefs.optional.jlink.jlink	[org.apache.tools.ant.taskdefs.optional.jlink.jlink::java.lang.String outfile, org.apache.tools.ant.taskdefs.optional.jlink.jlink::setOutfile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::main(java.lang.String[]):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::java.util.Vector mergefiles, org.apache.tools.ant.taskdefs.optional.jlink.jlink::addMergeFile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::addMergeFiles(java.lang.String[]):void]
org.apache.tools.ant.taskdefs.optional.jlink.jlink	[org.apache.tools.ant.taskdefs.optional.jlink.jlink::java.lang.String outfile, org.apache.tools.ant.taskdefs.optional.jlink.jlink::setOutfile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::main(java.lang.String[]):void]
org.apache.tools.ant.taskdefs.optional.jlink.jlink	[org.apache.tools.ant.taskdefs.optional.jlink.jlink::byte[] buffer, org.apache.tools.ant.taskdefs.optional.jlink.jlink::addToOutputStream(java.util.zip.ZipOutputStream, java.io.InputStream, java.util.zip.ZipEntry):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::calcChecksum(java.io.InputStream):long, org.apache.tools.ant.taskdefs.optional.jlink.jlink::mergeZipJarContents(java.util.zip.ZipOutputStream, java.io.File):void, org.apache.tools.ant.taskdefs.optional.jlink.jlink::calcChecksum(java.io.File):long]
org.apache.tools.ant.taskdefs.optional.jsp.JspC	[org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.io.File destDir, org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.lang.String packageName, org.apache.tools.ant.taskdefs.optional.jsp.JspC::getActualDestDir():java.io.File, org.apache.tools.ant.taskdefs.optional.jsp.JspC::org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter webApp, org.apache.tools.ant.taskdefs.optional.jsp.JspC::addWebApp(org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter):void, org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.util.Vector compileList, org.apache.tools.ant.taskdefs.optional.jsp.JspC::resetFileLists():void]
org.apache.tools.ant.taskdefs.optional.jsp.JspC	[org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.io.File destDir, org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.lang.String packageName, org.apache.tools.ant.taskdefs.optional.jsp.JspC::getActualDestDir():java.io.File, org.apache.tools.ant.taskdefs.optional.jsp.JspC::org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter webApp, org.apache.tools.ant.taskdefs.optional.jsp.JspC::addWebApp(org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter):void]
org.apache.tools.ant.taskdefs.optional.jsp.JspC	[org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.io.File destDir, org.apache.tools.ant.taskdefs.optional.jsp.JspC::java.lang.String packageName, org.apache.tools.ant.taskdefs.optional.jsp.JspC::getActualDestDir():java.io.File]
org.apache.tools.ant.taskdefs.optional.jsp.JspC	[org.apache.tools.ant.taskdefs.optional.jsp.JspC::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.taskdefs.optional.jsp.JspC::setClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.optional.jsp.JspC::org.apache.tools.ant.types.Path compilerClasspath, org.apache.tools.ant.taskdefs.optional.jsp.JspC::setCompilerclasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.optional.jsp.JspC::createCompilerclasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.optional.jsp.JspC::createClasspath():org.apache.tools.ant.types.Path]
org.apache.tools.ant.DirectoryScanner	[org.apache.tools.ant.DirectoryScanner::java.util.Map fileListMap, org.apache.tools.ant.DirectoryScanner::list(java.io.File):java.lang.String[], org.apache.tools.ant.DirectoryScanner::findFile(java.io.File, java.util.Vector, boolean):java.io.File]
org.apache.tools.ant.Project	[org.apache.tools.ant.Project::java.lang.String name, org.apache.tools.ant.Project::setName(java.lang.String):void, org.apache.tools.ant.Project::tsort(java.lang.String, java.util.Hashtable, java.util.Hashtable, java.util.Stack, java.util.Vector):void, org.apache.tools.ant.Project::setUserProperty(java.lang.String, java.lang.String):void]
org.apache.tools.ant.Project	[org.apache.tools.ant.Project::initProperties():void, org.apache.tools.ant.Project::setAntLib():void, org.apache.tools.ant.Project::setSystemProperties():void, org.apache.tools.ant.Project::setPropertyInternal(java.lang.String, java.lang.String):void, org.apache.tools.ant.Project::setProperty(java.lang.String, java.lang.String):void]
org.apache.tools.ant.Project	[org.apache.tools.ant.Project::boolean loggingMessage, org.apache.tools.ant.Project::fireMessageLoggedEvent(org.apache.tools.ant.BuildEvent, java.lang.String, int):void, org.apache.tools.ant.Project::fireMessageLogged(org.apache.tools.ant.Project, java.lang.String, int):void, org.apache.tools.ant.Project::fireMessageLogged(org.apache.tools.ant.Target, java.lang.String, int):void, org.apache.tools.ant.Project::fireMessageLogged(org.apache.tools.ant.Task, java.lang.String, int):void]
org.apache.tools.ant.Project	[org.apache.tools.ant.Project::java.util.Hashtable targets, org.apache.tools.ant.Project::addTarget(java.lang.String, org.apache.tools.ant.Target):void, org.apache.tools.ant.Project::addOrReplaceTarget(java.lang.String, org.apache.tools.ant.Target):void]
org.apache.tools.ant.Project	[org.apache.tools.ant.Project::java.io.File baseDir, org.apache.tools.ant.Project::getBaseDir():java.io.File, org.apache.tools.ant.Project::setBaseDir(java.io.File):void, org.apache.tools.ant.Project::setJavaVersionProperty():void, org.apache.tools.ant.Project::initProperties():void, org.apache.tools.ant.Project::setAntLib():void, org.apache.tools.ant.Project::setSystemProperties():void, org.apache.tools.ant.Project::setPropertyInternal(java.lang.String, java.lang.String):void, org.apache.tools.ant.Project::setProperty(java.lang.String, java.lang.String):void]
org.apache.tools.ant.helper.AntXMLContext	[org.apache.tools.ant.helper.AntXMLContext::java.io.File buildFile, org.apache.tools.ant.helper.AntXMLContext::java.io.File buildFileParent, org.apache.tools.ant.helper.AntXMLContext::org.apache.tools.ant.Target implicitTarget, org.apache.tools.ant.helper.AntXMLContext::setBuildFile(java.io.File):void]
org.apache.tools.ant.helper.AntXMLContext	[org.apache.tools.ant.helper.AntXMLContext::java.util.Vector targetVector, org.apache.tools.ant.helper.AntXMLContext::addTarget(org.apache.tools.ant.Target):void, org.apache.tools.ant.helper.AntXMLContext::org.apache.tools.ant.Target currentTarget]
org.apache.tools.ant.helper.AntXMLContext	[org.apache.tools.ant.helper.AntXMLContext::java.util.Vector wStack, org.apache.tools.ant.helper.AntXMLContext::currentWrapper():org.apache.tools.ant.RuntimeConfigurable, org.apache.tools.ant.helper.AntXMLContext::parentWrapper():org.apache.tools.ant.RuntimeConfigurable, org.apache.tools.ant.helper.AntXMLContext::popWrapper():void]
org.apache.tools.ant.helper.AntXMLContext	[org.apache.tools.ant.helper.AntXMLContext::java.util.Map prefixMapping, org.apache.tools.ant.helper.AntXMLContext::startPrefixMapping(java.lang.String, java.lang.String):void, org.apache.tools.ant.helper.AntXMLContext::endPrefixMapping(java.lang.String):void, org.apache.tools.ant.helper.AntXMLContext::getPrefixMapping(java.lang.String):java.lang.String]
org.apache.tools.ant.taskdefs.Copydir	[org.apache.tools.ant.taskdefs.Copydir::boolean flatten, org.apache.tools.ant.taskdefs.Copydir::scanDir(java.io.File, java.io.File, java.lang.String[]):void, org.apache.tools.ant.taskdefs.Copydir::boolean forceOverwrite, org.apache.tools.ant.taskdefs.Copydir::java.util.Hashtable filecopyList]
org.apache.tools.ant.taskdefs.MacroDef	[org.apache.tools.ant.taskdefs.MacroDef::java.util.List attributes, org.apache.tools.ant.taskdefs.MacroDef::java.lang.String textName, org.apache.tools.ant.taskdefs.MacroDef::org.apache.tools.ant.taskdefs.MacroDef.Text text, org.apache.tools.ant.taskdefs.MacroDef::addConfiguredText(org.apache.tools.ant.taskdefs.MacroDef.Text):void, org.apache.tools.ant.taskdefs.MacroDef::addConfiguredAttribute(org.apache.tools.ant.taskdefs.MacroDef.Attribute):void, org.apache.tools.ant.taskdefs.MacroDef::addConfiguredDefine(org.apache.tools.ant.taskdefs.MacroDef.DefineAttribute):void]
org.apache.tools.ant.taskdefs.MacroDef	[org.apache.tools.ant.taskdefs.MacroDef::java.util.Map elements, org.apache.tools.ant.taskdefs.MacroDef::boolean hasImplicitElement, org.apache.tools.ant.taskdefs.MacroDef::addConfiguredElement(org.apache.tools.ant.taskdefs.MacroDef.TemplateElement):void]
org.apache.tools.ant.taskdefs.XSLTProcess.Param	[org.apache.tools.ant.taskdefs.XSLTProcess.Param::java.lang.String ifProperty, org.apache.tools.ant.taskdefs.XSLTProcess.Param::shouldUse():boolean, org.apache.tools.ant.taskdefs.XSLTProcess.Param::java.lang.String unlessProperty, org.apache.tools.ant.taskdefs.XSLTProcess.Param::org.apache.tools.ant.Project project]
org.apache.tools.ant.taskdefs.XSLTProcess.Param	[org.apache.tools.ant.taskdefs.XSLTProcess.Param::java.lang.String name, org.apache.tools.ant.taskdefs.XSLTProcess.Param::getName():java.lang.String, org.apache.tools.ant.taskdefs.XSLTProcess.Param::java.lang.String expression, org.apache.tools.ant.taskdefs.XSLTProcess.Param::getExpression():java.lang.String]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::java.lang.String mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::getVersionCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::java.lang.String mVersion, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::getVersionCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel::getCommentCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm	[org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::boolean verbose, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::getVerboseParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::boolean listing, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::boolean isMono, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::getListingParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm	[org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::java.lang.String targetType, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::setTargetType(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::getTargetTypeParameter():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::notEmpty(java.lang.String):boolean, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::setTargetType(org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.TargetTypes):void]
org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm	[org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::boolean listing, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::boolean isMono, org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm::getListingParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer	[org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::java.io.File fileFail, org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::int loopsFail, org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::java.lang.Long durationFail, org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::addBuildFailedSound(java.io.File, int, java.lang.Long):void]
org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer	[org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::play(org.apache.tools.ant.Project, java.io.File, int, java.lang.Long):void, org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::playClip(javax.sound.sampled.Clip, int):void, org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer::playClip(javax.sound.sampled.Clip, long):void]
org.apache.tools.ant.util.facade.FacadeTaskHelper	[org.apache.tools.ant.util.facade.FacadeTaskHelper::java.lang.String userChoice, org.apache.tools.ant.util.facade.FacadeTaskHelper::java.lang.String magicValue, org.apache.tools.ant.util.facade.FacadeTaskHelper::java.lang.String defaultValue, org.apache.tools.ant.util.facade.FacadeTaskHelper::getImplementation():java.lang.String, org.apache.tools.ant.util.facade.FacadeTaskHelper::hasBeenSet():boolean]
org.apache.tools.ant.ComponentHelper	[org.apache.tools.ant.ComponentHelper::java.util.Stack antLibStack, org.apache.tools.ant.ComponentHelper::enterAntLib(java.lang.String):void, org.apache.tools.ant.ComponentHelper::exitAntLib():void, org.apache.tools.ant.ComponentHelper::java.lang.String antLibCurrentUri]
org.apache.tools.ant.ComponentHelper	[org.apache.tools.ant.ComponentHelper::java.util.Hashtable taskClassDefinitions, org.apache.tools.ant.ComponentHelper::getTaskDefinitions():java.util.Hashtable, org.apache.tools.ant.ComponentHelper::getDataTypeDefinitions():java.util.Hashtable, org.apache.tools.ant.ComponentHelper::java.util.Hashtable typeClassDefinitions, org.apache.tools.ant.ComponentHelper::boolean rebuildTaskClassDefinitions, org.apache.tools.ant.ComponentHelper::boolean rebuildTypeClassDefinitions]
org.apache.tools.ant.Main	[org.apache.tools.ant.Main::int msgOutputLevel, org.apache.tools.ant.Main::getParentFile(java.io.File):java.io.File, org.apache.tools.ant.Main::findBuildFile(java.lang.String, java.lang.String):java.io.File]
org.apache.tools.ant.PathTokenizer	[org.apache.tools.ant.PathTokenizer::java.util.StringTokenizer tokenizer, org.apache.tools.ant.PathTokenizer::java.lang.String lookahead, org.apache.tools.ant.PathTokenizer::hasMoreTokens():boolean]
org.apache.tools.ant.listener.CommonsLoggingListener	[org.apache.tools.ant.listener.CommonsLoggingListener::java.io.PrintStream out, org.apache.tools.ant.listener.CommonsLoggingListener::java.io.PrintStream err, org.apache.tools.ant.listener.CommonsLoggingListener::realLog(org.apache.commons.logging.Log, java.lang.String, int, java.lang.Throwable):void]
org.apache.tools.ant.taskdefs.Ant	[org.apache.tools.ant.taskdefs.Ant::java.util.Vector targets, org.apache.tools.ant.taskdefs.Ant::boolean targetAttributeSet, org.apache.tools.ant.taskdefs.Ant::setTarget(java.lang.String):void, org.apache.tools.ant.taskdefs.Ant::addConfiguredTarget(org.apache.tools.ant.taskdefs.Ant.TargetElement):void]
org.apache.tools.ant.taskdefs.Concat.TextElement	[org.apache.tools.ant.taskdefs.Concat.TextElement::java.lang.String value, org.apache.tools.ant.taskdefs.Concat.TextElement::java.lang.String encoding, org.apache.tools.ant.taskdefs.Concat.TextElement::setFile(java.io.File):void]
org.apache.tools.ant.taskdefs.Concat.TextElement	[org.apache.tools.ant.taskdefs.Concat.TextElement::boolean trimLeading, org.apache.tools.ant.taskdefs.Concat.TextElement::getValue():java.lang.String, org.apache.tools.ant.taskdefs.Concat.TextElement::boolean trim]
org.apache.tools.ant.taskdefs.Expand	[org.apache.tools.ant.taskdefs.Expand::org.apache.tools.ant.types.resources.Union resources, org.apache.tools.ant.taskdefs.Expand::boolean resourcesSpecified, org.apache.tools.ant.taskdefs.Expand::add(org.apache.tools.ant.types.ResourceCollection):void]
org.apache.tools.ant.taskdefs.GenerateKey	[org.apache.tools.ant.taskdefs.GenerateKey::java.lang.String dname, org.apache.tools.ant.taskdefs.GenerateKey::org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName expandedDname, org.apache.tools.ant.taskdefs.GenerateKey::createDname():org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName, org.apache.tools.ant.taskdefs.GenerateKey::setDname(java.lang.String):void]
org.apache.tools.ant.taskdefs.Jar	[org.apache.tools.ant.taskdefs.Jar::org.apache.tools.ant.taskdefs.Manifest configuredManifest, org.apache.tools.ant.taskdefs.Jar::org.apache.tools.ant.taskdefs.Manifest savedConfiguredManifest, org.apache.tools.ant.taskdefs.Jar::addConfiguredManifest(org.apache.tools.ant.taskdefs.Manifest):void]
org.apache.tools.ant.taskdefs.Jar	[org.apache.tools.ant.taskdefs.Jar::java.lang.String manifestEncoding, org.apache.tools.ant.taskdefs.Jar::getManifest(java.io.File):org.apache.tools.ant.taskdefs.Manifest, org.apache.tools.ant.taskdefs.Jar::getManifestFromJar(java.io.File):org.apache.tools.ant.taskdefs.Manifest, org.apache.tools.ant.taskdefs.Jar::getManifest(java.io.Reader):org.apache.tools.ant.taskdefs.Manifest]
org.apache.tools.ant.taskdefs.JikesOutputParser	[org.apache.tools.ant.taskdefs.JikesOutputParser::boolean errorFlag, org.apache.tools.ant.taskdefs.JikesOutputParser::setError(boolean):void, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean error]
org.apache.tools.ant.taskdefs.JikesOutputParser	[org.apache.tools.ant.taskdefs.JikesOutputParser::org.apache.tools.ant.Task task, org.apache.tools.ant.taskdefs.JikesOutputParser::log(java.lang.String):void, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean errorFlag, org.apache.tools.ant.taskdefs.JikesOutputParser::setError(boolean):void, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean error, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean emacsMode, org.apache.tools.ant.taskdefs.JikesOutputParser::parseOutput(java.io.BufferedReader):void, org.apache.tools.ant.taskdefs.JikesOutputParser::parseStandardOutput(java.io.BufferedReader):void]
org.apache.tools.ant.taskdefs.JikesOutputParser	[org.apache.tools.ant.taskdefs.JikesOutputParser::boolean errorFlag, org.apache.tools.ant.taskdefs.JikesOutputParser::setError(boolean):void, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean error, org.apache.tools.ant.taskdefs.JikesOutputParser::boolean emacsMode, org.apache.tools.ant.taskdefs.JikesOutputParser::parseOutput(java.io.BufferedReader):void, org.apache.tools.ant.taskdefs.JikesOutputParser::parseStandardOutput(java.io.BufferedReader):void]
org.apache.tools.ant.taskdefs.KeySubst	[org.apache.tools.ant.taskdefs.KeySubst::java.lang.String sep, org.apache.tools.ant.taskdefs.KeySubst::setKeys(java.lang.String):void, org.apache.tools.ant.taskdefs.KeySubst::java.util.Hashtable replacements]
org.apache.tools.ant.taskdefs.Manifest.Attribute	[org.apache.tools.ant.taskdefs.Manifest.Attribute::java.util.Vector values, org.apache.tools.ant.taskdefs.Manifest.Attribute::getValue():java.lang.String, org.apache.tools.ant.taskdefs.Manifest.Attribute::getValues():java.util.Enumeration]
org.apache.tools.ant.taskdefs.Manifest.Attribute	[org.apache.tools.ant.taskdefs.Manifest.Attribute::java.lang.String name, org.apache.tools.ant.taskdefs.Manifest.Attribute::getKey():java.lang.String, org.apache.tools.ant.taskdefs.Manifest.Attribute::writeValue(java.io.PrintWriter, java.lang.String):void]
org.apache.tools.ant.taskdefs.Manifest.Attribute	[org.apache.tools.ant.taskdefs.Manifest.Attribute::int currentIndex, org.apache.tools.ant.taskdefs.Manifest.Attribute::addValue(java.lang.String):void, org.apache.tools.ant.taskdefs.Manifest.Attribute::setValue(java.lang.String):void, org.apache.tools.ant.taskdefs.Manifest.Attribute::addContinuation(java.lang.String):void]
org.apache.tools.ant.taskdefs.PathConvert	[org.apache.tools.ant.taskdefs.PathConvert::java.lang.String targetOS, org.apache.tools.ant.taskdefs.PathConvert::boolean targetWindows, org.apache.tools.ant.taskdefs.PathConvert::setTargetos(org.apache.tools.ant.taskdefs.PathConvert.TargetOs):void]
org.apache.tools.ant.taskdefs.PathConvert	[org.apache.tools.ant.taskdefs.PathConvert::java.util.Vector prefixMap, org.apache.tools.ant.taskdefs.PathConvert::createMap():org.apache.tools.ant.taskdefs.PathConvert.MapEntry, org.apache.tools.ant.taskdefs.PathConvert::mapElement(java.lang.String):java.lang.String]
org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask	[org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::java.util.Date startDate, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::setDaysinpast(int):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::java.util.Date endDate, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::filterEntrySet(org.apache.tools.ant.taskdefs.cvslib.CVSEntry[]):org.apache.tools.ant.taskdefs.cvslib.CVSEntry[]]
org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask	[org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::java.io.File usersFile, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::loadUserlist(java.util.Properties):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::validate():void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::java.io.File inputDir, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::java.io.File destFile, org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask::writeChangeLog(org.apache.tools.ant.taskdefs.cvslib.CVSEntry[]):void]
org.apache.tools.ant.taskdefs.optional.Javah	[org.apache.tools.ant.taskdefs.optional.Javah::java.util.Vector classes, org.apache.tools.ant.taskdefs.optional.Javah::createClass():org.apache.tools.ant.taskdefs.optional.Javah.ClassArgument, org.apache.tools.ant.taskdefs.optional.Javah::java.lang.String cls, org.apache.tools.ant.taskdefs.optional.Javah::getClasses():java.lang.String[]]
org.apache.tools.ant.taskdefs.optional.Javah	[org.apache.tools.ant.taskdefs.optional.Javah::org.apache.tools.ant.util.facade.FacadeTaskHelper facade, org.apache.tools.ant.taskdefs.optional.Javah::setImplementation(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.Javah::createArg():org.apache.tools.ant.util.facade.ImplementationSpecificArgument]
org.apache.tools.ant.taskdefs.optional.SchemaValidate	[org.apache.tools.ant.taskdefs.optional.SchemaValidate::org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation anonymousSchema, org.apache.tools.ant.taskdefs.optional.SchemaValidate::setNoNamespaceURL(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.SchemaValidate::setNoNamespaceFile(java.io.File):void, org.apache.tools.ant.taskdefs.optional.SchemaValidate::createAnonymousSchema():void, org.apache.tools.ant.taskdefs.optional.SchemaValidate::getNoNamespaceSchemaURL():java.lang.String]
org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler	[org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler::java.io.File currentFile, org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler::init(java.io.File):void, org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler::boolean failed]
org.apache.tools.ant.taskdefs.optional.clearcase.CCLock	[org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mPname, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mObjselect, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getOpType():java.lang.String]
org.apache.tools.ant.taskdefs.optional.clearcase.CCLock	[org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mNusers, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getNusersCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCLock	[org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mNusers, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getNusersCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::checkOptions(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getPnameCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mPname, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::java.lang.String mObjselect, org.apache.tools.ant.taskdefs.optional.clearcase.CCLock::getOpType():java.lang.String]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine::java.lang.String ifCond, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine::isSet(org.apache.tools.ant.Task):boolean, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine::java.lang.String unlessCond]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::boolean embed, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::getParameter(java.lang.String, java.lang.String, boolean):java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::java.lang.Boolean isPublic]
org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource	[org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::java.io.File file, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::java.lang.String name, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::java.lang.String namespace, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::setNamespace(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::checkParameters():void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::getParameters(org.apache.tools.ant.Project, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand, boolean):void, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::java.util.ArrayList fileSets, org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource::hasFilesets():boolean]
org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet	[org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet::java.io.File destFile, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet::org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema wsdl, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet::validate():void]
org.apache.tools.ant.taskdefs.optional.ejb.DDCreator	[org.apache.tools.ant.taskdefs.optional.ejb.DDCreator::java.io.File descriptorDirectory, org.apache.tools.ant.taskdefs.optional.ejb.DDCreator::setDescriptors(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ejb.DDCreator::java.io.File generatedFilesDirectory, org.apache.tools.ant.taskdefs.optional.ejb.DDCreator::setDest(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.javacc.JJDoc	[org.apache.tools.ant.taskdefs.optional.javacc.JJDoc::java.util.Hashtable optionalAttrs, org.apache.tools.ant.taskdefs.optional.javacc.JJDoc::setOnetable(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJDoc::boolean plainText, org.apache.tools.ant.taskdefs.optional.javacc.JJDoc::setText(boolean):void]
org.apache.tools.ant.taskdefs.optional.junit.JUnitTask	[org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::org.apache.tools.ant.types.CommandlineJava commandline, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::getCommandline():org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setMaxmemory(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setJvm(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::createJvmarg():org.apache.tools.ant.types.Commandline.Argument]
org.apache.tools.ant.taskdefs.optional.junit.JUnitTask	[org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::org.apache.tools.ant.types.CommandlineJava commandline, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::getCommandline():org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setMaxmemory(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setJvm(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::createJvmarg():org.apache.tools.ant.types.Commandline.Argument, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addSysproperty(org.apache.tools.ant.types.Environment.Variable):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addConfiguredSysproperty(org.apache.tools.ant.types.Environment.Variable):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addSyspropertyset(org.apache.tools.ant.types.PropertySet):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addAssertions(org.apache.tools.ant.types.Assertions):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setCloneVm(boolean):void]
org.apache.tools.ant.taskdefs.optional.junit.JUnitTask	[org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::org.apache.tools.ant.types.CommandlineJava commandline, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::getCommandline():org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setMaxmemory(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setJvm(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::createJvmarg():org.apache.tools.ant.types.Commandline.Argument, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addSysproperty(org.apache.tools.ant.types.Environment.Variable):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addConfiguredSysproperty(org.apache.tools.ant.types.Environment.Variable):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addSyspropertyset(org.apache.tools.ant.types.PropertySet):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::addAssertions(org.apache.tools.ant.types.Assertions):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::setCloneVm(boolean):void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.optional.junit.JUnitTask::createBootclasspath():org.apache.tools.ant.types.Path]
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner	[org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner::java.util.Vector formatters, org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner::org.apache.tools.ant.taskdefs.optional.junit.JUnitTest junitTest, org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner::fireStartTestSuite():void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner::fireEndTestSuite():void, org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner::sendOutAndErr(java.lang.String, java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner	[org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::java.util.Map fileListMap, org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::clearCaches():void, org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::java.util.Set scannedDirs]
org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner	[org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::org.apache.commons.net.ftp.FTPClient ftp, org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::boolean remoteSensitivityChecked, org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner::forceRemoteSensitivityCheck():void]
org.apache.tools.ant.taskdefs.optional.perforce.P4Counter	[org.apache.tools.ant.taskdefs.optional.perforce.P4Counter::boolean shouldSetValue, org.apache.tools.ant.taskdefs.optional.perforce.P4Counter::int value, org.apache.tools.ant.taskdefs.optional.perforce.P4Counter::setValue(int):void]
org.apache.tools.ant.types.ArchiveFileSet	[org.apache.tools.ant.types.ArchiveFileSet::int dirMode, org.apache.tools.ant.types.ArchiveFileSet::integerSetDirMode(int):void, org.apache.tools.ant.types.ArchiveFileSet::boolean dirModeHasBeenSet]
org.apache.tools.ant.types.Commandline	[org.apache.tools.ant.types.Commandline::java.util.Vector arguments, org.apache.tools.ant.types.Commandline::getArguments():java.lang.String[], org.apache.tools.ant.types.Commandline::addArgumentsToList(java.util.ListIterator):void]
org.apache.tools.ant.types.Permissions.Permission	[org.apache.tools.ant.types.Permissions.Permission::java.lang.String className, org.apache.tools.ant.types.Permissions.Permission::java.lang.String name, org.apache.tools.ant.types.Permissions.Permission::setClass(java.lang.String):void, org.apache.tools.ant.types.Permissions.Permission::setName(java.lang.String):void]
org.apache.tools.ant.types.Permissions.Permission	[org.apache.tools.ant.types.Permissions.Permission::java.lang.String actionString, org.apache.tools.ant.types.Permissions.Permission::setActions(java.lang.String):void, org.apache.tools.ant.types.Permissions.Permission::java.util.Set actions]
org.apache.tools.ant.types.optional.image.Scale	[org.apache.tools.ant.types.optional.image.Scale::java.lang.String heightStr, org.apache.tools.ant.types.optional.image.Scale::getHeight():float, org.apache.tools.ant.types.optional.image.Scale::boolean yPercent]
org.apache.tools.ant.types.optional.image.Scale	[org.apache.tools.ant.types.optional.image.Scale::java.lang.String widthStr, org.apache.tools.ant.types.optional.image.Scale::getWidth():float, org.apache.tools.ant.types.optional.image.Scale::boolean xPercent, org.apache.tools.ant.types.optional.image.Scale::performScale(javax.media.jai.PlanarImage):javax.media.jai.PlanarImage, org.apache.tools.ant.types.optional.image.Scale::java.lang.String heightStr, org.apache.tools.ant.types.optional.image.Scale::getHeight():float, org.apache.tools.ant.types.optional.image.Scale::boolean yPercent]
org.apache.tools.ant.util.GlobPatternMapper	[org.apache.tools.ant.util.GlobPatternMapper::boolean handleDirSep, org.apache.tools.ant.util.GlobPatternMapper::modifyName(java.lang.String):java.lang.String, org.apache.tools.ant.util.GlobPatternMapper::boolean caseSensitive]
org.apache.tools.zip.ZipOutputStream	[org.apache.tools.zip.ZipOutputStream::int level, org.apache.tools.zip.ZipOutputStream::boolean hasCompressionLevelChanged, org.apache.tools.zip.ZipOutputStream::setLevel(int):void]
org.apache.tools.ant.IntrospectionHelper	[org.apache.tools.ant.IntrospectionHelper::java.util.List addTypeMethods, org.apache.tools.ant.IntrospectionHelper::getExtensionPoints():java.util.List, org.apache.tools.ant.IntrospectionHelper::insertAddTypeMethod(java.lang.reflect.Method):void]
org.apache.tools.ant.IntrospectionHelper	[org.apache.tools.ant.IntrospectionHelper::java.lang.reflect.Method addText, org.apache.tools.ant.IntrospectionHelper::getAddTextMethod():java.lang.reflect.Method, org.apache.tools.ant.IntrospectionHelper::supportsCharacters():boolean, org.apache.tools.ant.IntrospectionHelper::addText(org.apache.tools.ant.Project, java.lang.Object, java.lang.String):void, org.apache.tools.ant.IntrospectionHelper::throwNotSupported(org.apache.tools.ant.Project, java.lang.Object, java.lang.String):void]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.util.List children, org.apache.tools.ant.Target::getTasks():org.apache.tools.ant.Task[], org.apache.tools.ant.Target::replaceChild(org.apache.tools.ant.Task, org.apache.tools.ant.RuntimeConfigurable):void, org.apache.tools.ant.Target::replaceChild(org.apache.tools.ant.Task, org.apache.tools.ant.Task):void]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.lang.String ifCondition, org.apache.tools.ant.Target::setIf(java.lang.String):void, org.apache.tools.ant.Target::getIf():java.lang.String]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.lang.String unlessCondition, org.apache.tools.ant.Target::setUnless(java.lang.String):void, org.apache.tools.ant.Target::getUnless():java.lang.String]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.lang.String ifCondition, org.apache.tools.ant.Target::setIf(java.lang.String):void, org.apache.tools.ant.Target::getIf():java.lang.String, org.apache.tools.ant.Target::execute():void, org.apache.tools.ant.Target::testIfCondition():boolean, org.apache.tools.ant.Target::testUnlessCondition():boolean, org.apache.tools.ant.Target::java.lang.String unlessCondition, org.apache.tools.ant.Target::setUnless(java.lang.String):void, org.apache.tools.ant.Target::getUnless():java.lang.String, org.apache.tools.ant.Target::org.apache.tools.ant.Project project, org.apache.tools.ant.Target::performTasks():void]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.util.List dependencies, org.apache.tools.ant.Target::addDependency(java.lang.String):void, org.apache.tools.ant.Target::getDependencies():java.util.Enumeration, org.apache.tools.ant.Target::setDepends(java.lang.String):void]
org.apache.tools.ant.Target	[org.apache.tools.ant.Target::java.lang.String ifCondition, org.apache.tools.ant.Target::setIf(java.lang.String):void, org.apache.tools.ant.Target::getIf():java.lang.String, org.apache.tools.ant.Target::execute():void, org.apache.tools.ant.Target::testIfCondition():boolean, org.apache.tools.ant.Target::testUnlessCondition():boolean, org.apache.tools.ant.Target::java.lang.String unlessCondition, org.apache.tools.ant.Target::setUnless(java.lang.String):void, org.apache.tools.ant.Target::getUnless():java.lang.String]
org.apache.tools.ant.filters.TokenFilter.StringTokenizer	[org.apache.tools.ant.filters.TokenFilter.StringTokenizer::char[] delims, org.apache.tools.ant.filters.TokenFilter.StringTokenizer::setDelims(java.lang.String):void, org.apache.tools.ant.filters.TokenFilter.StringTokenizer::isDelim(char):boolean]
org.apache.tools.ant.taskdefs.Checksum	[org.apache.tools.ant.taskdefs.Checksum::java.text.MessageFormat format, org.apache.tools.ant.taskdefs.Checksum::setPattern(java.lang.String):void, org.apache.tools.ant.taskdefs.Checksum::readChecksum(java.io.File):java.lang.String, org.apache.tools.ant.taskdefs.Checksum::setFormat(org.apache.tools.ant.taskdefs.Checksum.FormatElement):void]
org.apache.tools.ant.taskdefs.Concat	[org.apache.tools.ant.taskdefs.Concat::java.lang.StringBuffer textBuffer, org.apache.tools.ant.taskdefs.Concat::addText(java.lang.String):void, org.apache.tools.ant.taskdefs.Concat::sanitizeText():void]
org.apache.tools.ant.taskdefs.Execute	[org.apache.tools.ant.taskdefs.Execute::java.io.File workingDirectory, org.apache.tools.ant.taskdefs.Execute::setWorkingDirectory(java.io.File):void, org.apache.tools.ant.taskdefs.Execute::getWorkingDirectory():java.io.File]
org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine	[org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine::java.lang.String line, org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine::getChar(int):char, org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine::length():int, org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine::substring(int):java.lang.String, org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine::substring(int, int):java.lang.String]
org.apache.tools.ant.taskdefs.Java	[org.apache.tools.ant.taskdefs.Java::org.apache.tools.ant.types.CommandlineJava cmdl, org.apache.tools.ant.taskdefs.Java::addAssertions(org.apache.tools.ant.types.Assertions):void, org.apache.tools.ant.taskdefs.Java::setJar(java.io.File):void, org.apache.tools.ant.taskdefs.Java::setClassname(java.lang.String):void]
org.apache.tools.ant.taskdefs.Java	[org.apache.tools.ant.taskdefs.Java::java.lang.String inputString, org.apache.tools.ant.taskdefs.Java::java.io.File input, org.apache.tools.ant.taskdefs.Java::setInput(java.io.File):void, org.apache.tools.ant.taskdefs.Java::setInputString(java.lang.String):void]
org.apache.tools.ant.taskdefs.Javadoc.GroupArgument	[org.apache.tools.ant.taskdefs.Javadoc.GroupArgument::org.apache.tools.ant.taskdefs.Javadoc.Html title, org.apache.tools.ant.taskdefs.Javadoc.GroupArgument::setTitle(java.lang.String):void, org.apache.tools.ant.taskdefs.Javadoc.GroupArgument::getTitle():java.lang.String]
org.apache.tools.ant.taskdefs.Recorder	[org.apache.tools.ant.taskdefs.Recorder::java.lang.Boolean append, org.apache.tools.ant.taskdefs.Recorder::setAppend(boolean):void, org.apache.tools.ant.taskdefs.Recorder::getRecorder(java.lang.String, org.apache.tools.ant.Project):org.apache.tools.ant.taskdefs.RecorderEntry]
org.apache.tools.ant.taskdefs.Replace.FileInput	[org.apache.tools.ant.taskdefs.Replace.FileInput::java.io.Reader reader, org.apache.tools.ant.taskdefs.Replace.FileInput::close():void, org.apache.tools.ant.taskdefs.Replace.FileInput::closeQuietly():void]
org.apache.tools.ant.taskdefs.Replace.FileInput	[org.apache.tools.ant.taskdefs.Replace.FileInput::java.lang.StringBuffer outputBuffer, org.apache.tools.ant.taskdefs.Replace.FileInput::char[] buffer, org.apache.tools.ant.taskdefs.Replace.FileInput::readChunk():boolean]
org.apache.tools.ant.taskdefs.XSLTProcess	[org.apache.tools.ant.taskdefs.XSLTProcess::java.util.Vector outputProperties, org.apache.tools.ant.taskdefs.XSLTProcess::getOutputProperties():java.util.Enumeration, org.apache.tools.ant.taskdefs.XSLTProcess::createOutputProperty():org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty]
org.apache.tools.ant.taskdefs.XSLTProcess	[org.apache.tools.ant.taskdefs.XSLTProcess::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.taskdefs.XSLTProcess::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.XSLTProcess::org.apache.tools.ant.AntClassLoader loader, org.apache.tools.ant.taskdefs.XSLTProcess::loadClass(java.lang.String):java.lang.Class]
org.apache.tools.ant.taskdefs.email.EmailTask	[org.apache.tools.ant.taskdefs.email.EmailTask::org.apache.tools.ant.taskdefs.email.EmailAddress from, org.apache.tools.ant.taskdefs.email.EmailTask::addFrom(org.apache.tools.ant.taskdefs.email.EmailAddress):void, org.apache.tools.ant.taskdefs.email.EmailTask::setFrom(java.lang.String):void]
org.apache.tools.ant.taskdefs.email.EmailTask	[org.apache.tools.ant.taskdefs.email.EmailTask::org.apache.tools.ant.types.Path attachments, org.apache.tools.ant.taskdefs.email.EmailTask::createAttachments():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.email.EmailTask::setFiles(java.lang.String):void, org.apache.tools.ant.taskdefs.email.EmailTask::addFileset(org.apache.tools.ant.types.FileSet):void]
org.apache.tools.ant.taskdefs.optional.Native2Ascii	[org.apache.tools.ant.taskdefs.optional.Native2Ascii::org.apache.tools.ant.util.facade.FacadeTaskHelper facade, org.apache.tools.ant.taskdefs.optional.Native2Ascii::setImplementation(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.Native2Ascii::createArg():org.apache.tools.ant.util.facade.ImplementationSpecificArgument]
org.apache.tools.ant.taskdefs.optional.ccm.Continuus	[org.apache.tools.ant.taskdefs.optional.ccm.Continuus::java.lang.String ccmDir, org.apache.tools.ant.taskdefs.optional.ccm.Continuus::setCcmDir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ccm.Continuus::getCcmCommand():java.lang.String]
org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase	[org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase::java.lang.String mClearToolDir, org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase::setClearToolDir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase::getClearToolCommand():java.lang.String]
org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile	[org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile::java.lang.String optionCompare, org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile::setOptionCompare(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile::getOptionCompareParameter():java.lang.String]
org.apache.tools.ant.taskdefs.optional.extension.Specification	[org.apache.tools.ant.taskdefs.optional.extension.Specification::java.lang.String[] sections, org.apache.tools.ant.taskdefs.optional.extension.Specification::getSections():java.lang.String[], org.apache.tools.ant.taskdefs.optional.extension.Specification::removeDuplicates(java.util.ArrayList):java.util.ArrayList]
org.apache.tools.ant.taskdefs.optional.javacc.JJTree	[org.apache.tools.ant.taskdefs.optional.javacc.JJTree::java.util.Hashtable optionalAttrs, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setBuildnodefiles(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setMulti(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodedefaultvoid(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodefactory(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodescopehook(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodeusesparser(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setStatic(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setVisitor(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodepackage(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setVisitorException(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.javacc.JJTree::setNodeprefix(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.javacc.JavaCC	[org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::java.util.Hashtable optionalAttrs, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setLookahead(int):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setChoiceambiguitycheck(int):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setOtherambiguityCheck(int):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setStatic(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setDebugparser(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setDebuglookahead(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setDebugtokenmanager(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setOptimizetokenmanager(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setErrorreporting(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setJavaunicodeescape(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setUnicodeinput(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setIgnorecase(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setCommontokenaction(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setUsertokenmanager(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setUsercharstream(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setBuildparser(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setBuildtokenmanager(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setSanitycheck(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setForcelacheck(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setCachetokens(boolean):void, org.apache.tools.ant.taskdefs.optional.javacc.JavaCC::setKeeplinecolumn(boolean):void]
org.apache.tools.ant.taskdefs.optional.net.RExecTask	[org.apache.tools.ant.taskdefs.optional.net.RExecTask::java.util.Vector rexecTasks, org.apache.tools.ant.taskdefs.optional.net.RExecTask::createRead():org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecSubTask, org.apache.tools.ant.taskdefs.optional.net.RExecTask::createWrite():org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecSubTask]
org.apache.tools.ant.taskdefs.optional.net.TelnetTask	[org.apache.tools.ant.taskdefs.optional.net.TelnetTask::java.util.Vector telnetTasks, org.apache.tools.ant.taskdefs.optional.net.TelnetTask::createRead():org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetSubTask, org.apache.tools.ant.taskdefs.optional.net.TelnetTask::createWrite():org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetSubTask]
org.apache.tools.ant.taskdefs.optional.sos.SOS	[org.apache.tools.ant.taskdefs.optional.sos.SOS::java.lang.String sosCmdDir, org.apache.tools.ant.taskdefs.optional.sos.SOS::setSosCmd(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.sos.SOS::getSosCommand():java.lang.String]
org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage	[org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage::com.jcraft.jsch.Session session, org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage::openExecChannel(java.lang.String):com.jcraft.jsch.Channel, org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage::openSftpChannel():com.jcraft.jsch.ChannelSftp]
org.apache.tools.ant.taskdefs.optional.ssh.Directory	[org.apache.tools.ant.taskdefs.optional.ssh.Directory::java.util.ArrayList files, org.apache.tools.ant.taskdefs.optional.ssh.Directory::filesIterator():java.util.Iterator, org.apache.tools.ant.taskdefs.optional.ssh.Directory::fileSize():int]
org.apache.tools.ant.taskdefs.optional.ssh.Directory	[org.apache.tools.ant.taskdefs.optional.ssh.Directory::java.util.ArrayList childDirectories, org.apache.tools.ant.taskdefs.optional.ssh.Directory::addDirectory(org.apache.tools.ant.taskdefs.optional.ssh.Directory):void, org.apache.tools.ant.taskdefs.optional.ssh.Directory::directoryIterator():java.util.Iterator, org.apache.tools.ant.taskdefs.optional.ssh.Directory::getChild(java.io.File):org.apache.tools.ant.taskdefs.optional.ssh.Directory]
org.apache.tools.ant.util.Watchdog	[org.apache.tools.ant.util.Watchdog::java.util.Vector observers, org.apache.tools.ant.util.Watchdog::removeTimeoutObserver(org.apache.tools.ant.util.TimeoutObserver):void, org.apache.tools.ant.util.Watchdog::fireTimeoutOccured():void]
org.apache.tools.tar.TarEntry	[org.apache.tools.tar.TarEntry::java.lang.StringBuffer userName, org.apache.tools.tar.TarEntry::getUserName():java.lang.String, org.apache.tools.tar.TarEntry::setUserName(java.lang.String):void]
org.apache.tools.tar.TarEntry	[org.apache.tools.tar.TarEntry::java.lang.StringBuffer groupName, org.apache.tools.tar.TarEntry::getGroupName():java.lang.String, org.apache.tools.tar.TarEntry::setGroupName(java.lang.String):void]
org.apache.tools.tar.TarEntry	[org.apache.tools.tar.TarEntry::long modTime, org.apache.tools.tar.TarEntry::setModTime(long):void, org.apache.tools.tar.TarEntry::setModTime(java.util.Date):void, org.apache.tools.tar.TarEntry::getModTime():java.util.Date]
org.apache.tools.zip.ZipFile	[org.apache.tools.zip.ZipFile::java.io.RandomAccessFile archive, org.apache.tools.zip.ZipFile::close():void, org.apache.tools.zip.ZipFile::closeQuietly(org.apache.tools.zip.ZipFile):void, org.apache.tools.zip.ZipFile::positionAtCentralDirectory():void]
org.apache.tools.zip.ZipFile	[org.apache.tools.zip.ZipFile::java.util.Hashtable entries, org.apache.tools.zip.ZipFile::getEntries():java.util.Enumeration, org.apache.tools.zip.ZipFile::resolveLocalFileHeaderData():void, org.apache.tools.zip.ZipFile::getInputStream(org.apache.tools.zip.ZipEntry):java.io.InputStream, org.apache.tools.zip.ZipFile::java.io.RandomAccessFile archive, org.apache.tools.zip.ZipFile::close():void, org.apache.tools.zip.ZipFile::closeQuietly(org.apache.tools.zip.ZipFile):void, org.apache.tools.zip.ZipFile::positionAtCentralDirectory():void, org.apache.tools.zip.ZipFile::populateFromCentralDirectory():void, org.apache.tools.zip.ZipFile::java.util.Hashtable nameMap, org.apache.tools.zip.ZipFile::getEntry(java.lang.String):org.apache.tools.zip.ZipEntry]
org.apache.tools.zip.ZipFile	[org.apache.tools.zip.ZipFile::java.util.Hashtable entries, org.apache.tools.zip.ZipFile::getEntries():java.util.Enumeration, org.apache.tools.zip.ZipFile::resolveLocalFileHeaderData():void, org.apache.tools.zip.ZipFile::getInputStream(org.apache.tools.zip.ZipEntry):java.io.InputStream]
org.apache.tools.zip.ZipFile	[org.apache.tools.zip.ZipFile::java.util.Hashtable entries, org.apache.tools.zip.ZipFile::getEntries():java.util.Enumeration, org.apache.tools.zip.ZipFile::resolveLocalFileHeaderData():void, org.apache.tools.zip.ZipFile::getInputStream(org.apache.tools.zip.ZipEntry):java.io.InputStream, org.apache.tools.zip.ZipFile::java.io.RandomAccessFile archive, org.apache.tools.zip.ZipFile::close():void, org.apache.tools.zip.ZipFile::closeQuietly(org.apache.tools.zip.ZipFile):void, org.apache.tools.zip.ZipFile::positionAtCentralDirectory():void, org.apache.tools.zip.ZipFile::populateFromCentralDirectory():void]
org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry	[org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::java.lang.String key, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::int type, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::setType(org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.Type):void, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::int operation, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::java.lang.String value, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::java.lang.String pattern, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::java.lang.String newValue, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::executeOn(java.util.Properties):void, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::java.lang.String defaultValue, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::executeDate(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::executeInteger(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::executeString(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::getCurrentValue(java.lang.String):java.lang.String, org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry::checkParameters():void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype	[org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::checkOptions(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::boolean mReplace, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::boolean mGlobal, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::boolean mOrdinary, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::boolean mPbranch, org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype::boolean mShared]
org.apache.tools.ant.types.DataType	[org.apache.tools.ant.types.DataType::org.apache.tools.ant.types.Reference ref, org.apache.tools.ant.types.DataType::isReference():boolean, org.apache.tools.ant.types.DataType::dieOnCircularReference(org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::dieOnCircularReference(java.util.Stack, org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::setRefid(org.apache.tools.ant.types.Reference):void, org.apache.tools.ant.types.DataType::tooManyAttributes():org.apache.tools.ant.BuildException, org.apache.tools.ant.types.DataType::checkAttributesAllowed():void, org.apache.tools.ant.types.DataType::noChildrenAllowed():org.apache.tools.ant.BuildException, org.apache.tools.ant.types.DataType::checkChildrenAllowed():void, org.apache.tools.ant.types.DataType::getCheckedRef(java.lang.Class, java.lang.String, org.apache.tools.ant.Project):java.lang.Object, org.apache.tools.ant.types.DataType::circularReference():org.apache.tools.ant.BuildException, org.apache.tools.ant.types.DataType::boolean checked]
org.apache.tools.ant.types.DataType	[org.apache.tools.ant.types.DataType::org.apache.tools.ant.types.Reference ref, org.apache.tools.ant.types.DataType::isReference():boolean, org.apache.tools.ant.types.DataType::dieOnCircularReference(org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::dieOnCircularReference(java.util.Stack, org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::setRefid(org.apache.tools.ant.types.Reference):void, org.apache.tools.ant.types.DataType::tooManyAttributes():org.apache.tools.ant.BuildException, org.apache.tools.ant.types.DataType::checkAttributesAllowed():void]
org.apache.tools.ant.types.DataType	[org.apache.tools.ant.types.DataType::org.apache.tools.ant.types.Reference ref, org.apache.tools.ant.types.DataType::isReference():boolean, org.apache.tools.ant.types.DataType::dieOnCircularReference(org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::dieOnCircularReference(java.util.Stack, org.apache.tools.ant.Project):void, org.apache.tools.ant.types.DataType::setRefid(org.apache.tools.ant.types.Reference):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype	[org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::checkOptions(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::getCommentFileCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::java.lang.String mCfile, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::boolean mRmall, org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype::boolean mIgnore]
org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter	[org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String extensionName, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setExtensionName(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal specificationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVersion(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String specificationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVendor(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String implementationVendorID, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVendorId(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String implementationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVendor(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal implementationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVersion(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter	[org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String extensionName, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setExtensionName(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal specificationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVersion(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String specificationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVendor(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String implementationVendorID, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVendorId(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String implementationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVendor(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter	[org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String extensionName, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setExtensionName(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal specificationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVersion(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String specificationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVendor(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String implementationVendorID, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setImplementationVendorId(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter	[org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String extensionName, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setExtensionName(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal specificationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVersion(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String specificationVendor, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVendor(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter	[org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::java.lang.String extensionName, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setExtensionName(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal specificationVersion, org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter::setSpecificationVersion(java.lang.String):void]
org.apache.tools.ant.taskdefs.Replace.Replacefilter	[org.apache.tools.ant.taskdefs.Replace.Replacefilter::java.lang.String token, org.apache.tools.ant.taskdefs.Replace.Replacefilter::java.lang.StringBuffer inputBuffer, org.apache.tools.ant.taskdefs.Replace.Replacefilter::java.lang.StringBuffer outputBuffer, org.apache.tools.ant.taskdefs.Replace.Replacefilter::flush():void, org.apache.tools.ant.taskdefs.Replace.Replacefilter::process():boolean, org.apache.tools.ant.taskdefs.Replace.Replacefilter::replace():int, org.apache.tools.ant.taskdefs.Replace.Replacefilter::java.lang.String replaceValue]
org.apache.tools.mail.MailMessage	[org.apache.tools.mail.MailMessage::java.lang.String host, org.apache.tools.mail.MailMessage::int port, org.apache.tools.mail.MailMessage::org.apache.tools.mail.MailPrintStream out, org.apache.tools.mail.MailMessage::org.apache.tools.mail.SmtpResponseReader in, org.apache.tools.mail.MailMessage::java.net.Socket socket, org.apache.tools.mail.MailMessage::connect():void, org.apache.tools.mail.MailMessage::disconnect():void]
org.apache.tools.mail.MailMessage	[org.apache.tools.mail.MailMessage::java.util.Vector headersKeys, org.apache.tools.mail.MailMessage::java.util.Vector headersValues, org.apache.tools.mail.MailMessage::setHeader(java.lang.String, java.lang.String):void, org.apache.tools.mail.MailMessage::flushHeaders():void]
org.apache.tools.mail.MailMessage	[org.apache.tools.mail.MailMessage::java.lang.String from, org.apache.tools.mail.MailMessage::from(java.lang.String):void, org.apache.tools.mail.MailMessage::sendHelo():void, org.apache.tools.mail.MailMessage::sendFrom(java.lang.String):void, org.apache.tools.mail.MailMessage::sendRcpt(java.lang.String):void, org.apache.tools.mail.MailMessage::sendData():void, org.apache.tools.mail.MailMessage::sendDot():void, org.apache.tools.mail.MailMessage::sendQuit():void]
org.apache.tools.mail.MailMessage	[org.apache.tools.mail.MailMessage::java.lang.String from, org.apache.tools.mail.MailMessage::from(java.lang.String):void, org.apache.tools.mail.MailMessage::sendHelo():void, org.apache.tools.mail.MailMessage::sendFrom(java.lang.String):void, org.apache.tools.mail.MailMessage::sendRcpt(java.lang.String):void, org.apache.tools.mail.MailMessage::sendData():void, org.apache.tools.mail.MailMessage::sendDot():void, org.apache.tools.mail.MailMessage::sendQuit():void, org.apache.tools.mail.MailMessage::java.util.Vector replyto, org.apache.tools.mail.MailMessage::setReplyToHeader():void, org.apache.tools.mail.MailMessage::java.util.Vector to, org.apache.tools.mail.MailMessage::to(java.lang.String):void, org.apache.tools.mail.MailMessage::setToHeader():void, org.apache.tools.mail.MailMessage::java.util.Vector cc, org.apache.tools.mail.MailMessage::cc(java.lang.String):void, org.apache.tools.mail.MailMessage::setCcHeader():void, org.apache.tools.mail.MailMessage::vectorToList(java.util.Vector):java.lang.String, org.apache.tools.mail.MailMessage::sendAndClose():void]
org.apache.tools.mail.MailMessage	[org.apache.tools.mail.MailMessage::java.util.Vector replyto, org.apache.tools.mail.MailMessage::setReplyToHeader():void, org.apache.tools.mail.MailMessage::java.util.Vector to, org.apache.tools.mail.MailMessage::to(java.lang.String):void, org.apache.tools.mail.MailMessage::setToHeader():void, org.apache.tools.mail.MailMessage::java.util.Vector cc, org.apache.tools.mail.MailMessage::cc(java.lang.String):void, org.apache.tools.mail.MailMessage::setCcHeader():void, org.apache.tools.mail.MailMessage::vectorToList(java.util.Vector):java.lang.String]
org.apache.tools.ant.types.CommandlineJava	[org.apache.tools.ant.types.CommandlineJava::org.apache.tools.ant.types.Commandline vmCommand, org.apache.tools.ant.types.CommandlineJava::getActualVMCommand():org.apache.tools.ant.types.Commandline, org.apache.tools.ant.types.CommandlineJava::java.lang.String vmVersion, org.apache.tools.ant.types.CommandlineJava::calculateBootclasspath(boolean):org.apache.tools.ant.types.Path, org.apache.tools.ant.types.CommandlineJava::java.lang.String maxMemory, org.apache.tools.ant.types.CommandlineJava::org.apache.tools.ant.types.Path bootclasspath, org.apache.tools.ant.types.CommandlineJava::createBootclasspath(org.apache.tools.ant.Project):org.apache.tools.ant.types.Path]
org.apache.tools.ant.types.CommandlineJava	[org.apache.tools.ant.types.CommandlineJava::org.apache.tools.ant.types.Commandline vmCommand, org.apache.tools.ant.types.CommandlineJava::getActualVMCommand():org.apache.tools.ant.types.Commandline, org.apache.tools.ant.types.CommandlineJava::java.lang.String vmVersion, org.apache.tools.ant.types.CommandlineJava::calculateBootclasspath(boolean):org.apache.tools.ant.types.Path, org.apache.tools.ant.types.CommandlineJava::java.lang.String maxMemory]
org.apache.tools.ant.taskdefs.AbstractJarSignerTask	[org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String keystore, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String storetype, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::bindToKeystore(org.apache.tools.ant.taskdefs.ExecTask):void, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::addValue(org.apache.tools.ant.taskdefs.ExecTask, java.lang.String):void]
org.apache.tools.ant.taskdefs.AbstractJarSignerTask	[org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String keystore, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String storetype, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::bindToKeystore(org.apache.tools.ant.taskdefs.ExecTask):void, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::addValue(org.apache.tools.ant.taskdefs.ExecTask, java.lang.String):void, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::boolean verbose, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String maxMemory, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::org.apache.tools.ant.types.Environment sysProperties, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::setCommonOptions(org.apache.tools.ant.taskdefs.ExecTask):void]
org.apache.tools.ant.taskdefs.AbstractJarSignerTask	[org.apache.tools.ant.taskdefs.AbstractJarSignerTask::boolean verbose, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::java.lang.String maxMemory, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::org.apache.tools.ant.types.Environment sysProperties, org.apache.tools.ant.taskdefs.AbstractJarSignerTask::setCommonOptions(org.apache.tools.ant.taskdefs.ExecTask):void]
org.apache.tools.ant.taskdefs.Javadoc	[org.apache.tools.ant.taskdefs.Javadoc::org.apache.tools.ant.types.Path sourcePath, org.apache.tools.ant.taskdefs.Javadoc::setSourcepath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.Javadoc::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.taskdefs.Javadoc::setClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.Javadoc::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Javadoc::createSourcepath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Javadoc::createBootclasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Javadoc::org.apache.tools.ant.types.Path bootclasspath, org.apache.tools.ant.taskdefs.Javadoc::setBootclasspath(org.apache.tools.ant.types.Path):void]
org.apache.tools.ant.taskdefs.Tstamp.CustomFormat	[org.apache.tools.ant.taskdefs.Tstamp.CustomFormat::java.lang.String language, org.apache.tools.ant.taskdefs.Tstamp.CustomFormat::java.lang.String country, org.apache.tools.ant.taskdefs.Tstamp.CustomFormat::java.lang.String variant, org.apache.tools.ant.taskdefs.Tstamp.CustomFormat::setLocale(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm	[org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm::java.io.File sourceFile, org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm::java.io.File destFile, org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm::java.io.File resourceDir, org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm::validate():void, org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm::isDisassemblyNeeded():boolean]
org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler	[org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::java.lang.String[] compilerExecutables, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::getCommand():java.lang.String, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::java.lang.String[][] extraCompilerArgs, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::getExtraArgs():java.lang.String[], org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::applyExtraArgs(org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand):void]
org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler	[org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::java.lang.String[][] extraCompilerArgs, org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::getExtraArgs():java.lang.String[], org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler::applyExtraArgs(org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand):void]
org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator	[org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.util.Vector filesets, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::getFiles():java.io.File[], org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.lang.String toFile, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::getDestinationFile():java.io.File, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.io.File toDir]
org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator	[org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.lang.String toFile, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::getDestinationFile():java.io.File, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.io.File toDir]
org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator	[org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.util.Vector filesets, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::getFiles():java.io.File[], org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.lang.String toFile, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::getDestinationFile():java.io.File, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::java.io.File toDir, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::int generatedId, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::addTestSuite(org.w3c.dom.Element, org.w3c.dom.Element):void, org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator::createDocument():org.w3c.dom.Element]
org.apache.tools.ant.DemuxOutputStream	[org.apache.tools.ant.DemuxOutputStream::org.apache.tools.ant.Project project, org.apache.tools.ant.DemuxOutputStream::boolean isErrorStream, org.apache.tools.ant.DemuxOutputStream::processBuffer(java.io.ByteArrayOutputStream):void, org.apache.tools.ant.DemuxOutputStream::processFlush(java.io.ByteArrayOutputStream):void]
org.apache.tools.ant.UnknownElement	[org.apache.tools.ant.UnknownElement::java.util.List children, org.apache.tools.ant.UnknownElement::addChild(org.apache.tools.ant.UnknownElement):void, org.apache.tools.ant.UnknownElement::boolean presetDefed, org.apache.tools.ant.UnknownElement::applyPreSet(org.apache.tools.ant.UnknownElement):void]
org.apache.tools.ant.filters.ReplaceTokens	[org.apache.tools.ant.filters.ReplaceTokens::java.lang.String queuedData, org.apache.tools.ant.filters.ReplaceTokens::int queueIndex, org.apache.tools.ant.filters.ReplaceTokens::getNextChar():int]
org.apache.tools.ant.taskdefs.Copy	[org.apache.tools.ant.taskdefs.Copy::boolean enableMultipleMappings, org.apache.tools.ant.taskdefs.Copy::long granularity, org.apache.tools.ant.taskdefs.Copy::buildMap(java.io.File, java.io.File, java.lang.String[], org.apache.tools.ant.util.FileNameMapper, java.util.Hashtable):void, org.apache.tools.ant.taskdefs.Copy::buildMap(org.apache.tools.ant.types.Resource[], java.io.File, org.apache.tools.ant.util.FileNameMapper):java.util.Map]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::java.lang.String inputString, org.apache.tools.ant.taskdefs.ExecTask::java.io.File input, org.apache.tools.ant.taskdefs.ExecTask::setInput(java.io.File):void, org.apache.tools.ant.taskdefs.ExecTask::setInputString(java.lang.String):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::boolean failOnError, org.apache.tools.ant.taskdefs.ExecTask::setFailonerror(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.Long timeout, org.apache.tools.ant.taskdefs.ExecTask::createWatchdog():org.apache.tools.ant.taskdefs.ExecuteWatchdog, org.apache.tools.ant.taskdefs.ExecTask::setTimeout(java.lang.Long):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::java.lang.String os, org.apache.tools.ant.taskdefs.ExecTask::isValidOs():boolean, org.apache.tools.ant.taskdefs.ExecTask::java.lang.String osFamily, org.apache.tools.ant.taskdefs.ExecTask::setOsFamily(java.lang.String):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::boolean failOnError, org.apache.tools.ant.taskdefs.ExecTask::setFailonerror(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.Long timeout, org.apache.tools.ant.taskdefs.ExecTask::createWatchdog():org.apache.tools.ant.taskdefs.ExecuteWatchdog, org.apache.tools.ant.taskdefs.ExecTask::setTimeout(java.lang.Long):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.String resultProperty, org.apache.tools.ant.taskdefs.ExecTask::setResultProperty(java.lang.String):void, org.apache.tools.ant.taskdefs.ExecTask::maybeSetResultPropertyValue(int):void, org.apache.tools.ant.taskdefs.ExecTask::boolean failIfExecFails, org.apache.tools.ant.taskdefs.ExecTask::setFailIfExecutionFails(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.io.File output, org.apache.tools.ant.taskdefs.ExecTask::setOutput(java.io.File):void, org.apache.tools.ant.taskdefs.ExecTask::java.io.File error, org.apache.tools.ant.taskdefs.ExecTask::setError(java.io.File):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::boolean failOnError, org.apache.tools.ant.taskdefs.ExecTask::setFailonerror(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.Long timeout, org.apache.tools.ant.taskdefs.ExecTask::createWatchdog():org.apache.tools.ant.taskdefs.ExecuteWatchdog, org.apache.tools.ant.taskdefs.ExecTask::setTimeout(java.lang.Long):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.String resultProperty, org.apache.tools.ant.taskdefs.ExecTask::setResultProperty(java.lang.String):void, org.apache.tools.ant.taskdefs.ExecTask::maybeSetResultPropertyValue(int):void, org.apache.tools.ant.taskdefs.ExecTask::boolean failIfExecFails, org.apache.tools.ant.taskdefs.ExecTask::setFailIfExecutionFails(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.io.File output, org.apache.tools.ant.taskdefs.ExecTask::setOutput(java.io.File):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::boolean failOnError, org.apache.tools.ant.taskdefs.ExecTask::setFailonerror(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.Long timeout, org.apache.tools.ant.taskdefs.ExecTask::createWatchdog():org.apache.tools.ant.taskdefs.ExecuteWatchdog, org.apache.tools.ant.taskdefs.ExecTask::setTimeout(java.lang.Long):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.String resultProperty, org.apache.tools.ant.taskdefs.ExecTask::setResultProperty(java.lang.String):void, org.apache.tools.ant.taskdefs.ExecTask::maybeSetResultPropertyValue(int):void, org.apache.tools.ant.taskdefs.ExecTask::boolean failIfExecFails, org.apache.tools.ant.taskdefs.ExecTask::setFailIfExecutionFails(boolean):void]
org.apache.tools.ant.taskdefs.ExecTask	[org.apache.tools.ant.taskdefs.ExecTask::boolean failOnError, org.apache.tools.ant.taskdefs.ExecTask::setFailonerror(boolean):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.Long timeout, org.apache.tools.ant.taskdefs.ExecTask::createWatchdog():org.apache.tools.ant.taskdefs.ExecuteWatchdog, org.apache.tools.ant.taskdefs.ExecTask::setTimeout(java.lang.Long):void, org.apache.tools.ant.taskdefs.ExecTask::java.lang.String resultProperty, org.apache.tools.ant.taskdefs.ExecTask::setResultProperty(java.lang.String):void, org.apache.tools.ant.taskdefs.ExecTask::maybeSetResultPropertyValue(int):void]
org.apache.tools.ant.taskdefs.Exit	[org.apache.tools.ant.taskdefs.Exit::java.lang.String message, org.apache.tools.ant.taskdefs.Exit::addText(java.lang.String):void, org.apache.tools.ant.taskdefs.Exit::java.lang.Integer status, org.apache.tools.ant.taskdefs.Exit::setStatus(int):void]
org.apache.tools.ant.taskdefs.Input	[org.apache.tools.ant.taskdefs.Input::java.lang.String message, org.apache.tools.ant.taskdefs.Input::boolean messageAttribute, org.apache.tools.ant.taskdefs.Input::setMessage(java.lang.String):void, org.apache.tools.ant.taskdefs.Input::addText(java.lang.String):void]
org.apache.tools.ant.taskdefs.JDBCTask	[org.apache.tools.ant.taskdefs.JDBCTask::java.lang.String rdbms, org.apache.tools.ant.taskdefs.JDBCTask::isValidRdbms(java.sql.Connection):boolean, org.apache.tools.ant.taskdefs.JDBCTask::java.lang.String version]
org.apache.tools.ant.taskdefs.Javac	[org.apache.tools.ant.taskdefs.Javac::java.lang.String forkedExecutable, org.apache.tools.ant.taskdefs.Javac::getJavacExecutable():java.lang.String, org.apache.tools.ant.taskdefs.Javac::getSystemJavac():java.lang.String]
org.apache.tools.ant.taskdefs.Javac	[org.apache.tools.ant.taskdefs.Javac::boolean fork, org.apache.tools.ant.taskdefs.Javac::isForkedJavac():boolean, org.apache.tools.ant.taskdefs.Javac::getCompiler():java.lang.String, org.apache.tools.ant.taskdefs.Javac::isJdkCompiler(java.lang.String):boolean, org.apache.tools.ant.taskdefs.Javac::java.lang.String forkedExecutable, org.apache.tools.ant.taskdefs.Javac::getJavacExecutable():java.lang.String, org.apache.tools.ant.taskdefs.Javac::getSystemJavac():java.lang.String]
org.apache.tools.ant.taskdefs.Javac	[org.apache.tools.ant.taskdefs.Javac::boolean fork, org.apache.tools.ant.taskdefs.Javac::isForkedJavac():boolean, org.apache.tools.ant.taskdefs.Javac::getCompiler():java.lang.String, org.apache.tools.ant.taskdefs.Javac::isJdkCompiler(java.lang.String):boolean]
org.apache.tools.ant.taskdefs.LoadProperties	[org.apache.tools.ant.taskdefs.LoadProperties::org.apache.tools.ant.types.Resource src, org.apache.tools.ant.taskdefs.LoadProperties::setResource(java.lang.String):void, org.apache.tools.ant.taskdefs.LoadProperties::assertSrcIsJavaResource():void, org.apache.tools.ant.taskdefs.LoadProperties::setClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.LoadProperties::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.LoadProperties::setClasspathRef(org.apache.tools.ant.types.Reference):void, org.apache.tools.ant.taskdefs.LoadProperties::getClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.LoadProperties::addConfigured(org.apache.tools.ant.types.ResourceCollection):void]
org.apache.tools.ant.taskdefs.RecorderEntry	[org.apache.tools.ant.taskdefs.RecorderEntry::boolean record, org.apache.tools.ant.taskdefs.RecorderEntry::setRecordState(java.lang.Boolean):void, org.apache.tools.ant.taskdefs.RecorderEntry::flush():void]
org.apache.tools.ant.taskdefs.Rmic	[org.apache.tools.ant.taskdefs.Rmic::org.apache.tools.ant.types.Path compileClasspath, org.apache.tools.ant.taskdefs.Rmic::setClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.Rmic::org.apache.tools.ant.types.Path extDirs, org.apache.tools.ant.taskdefs.Rmic::setExtdirs(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.Rmic::createExtdirs():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Rmic::createClasspath():org.apache.tools.ant.types.Path]
org.apache.tools.ant.taskdefs.Rmic	[org.apache.tools.ant.taskdefs.Rmic::org.apache.tools.ant.util.facade.FacadeTaskHelper facade, org.apache.tools.ant.taskdefs.Rmic::getCurrentCompilerArgs():java.lang.String[], org.apache.tools.ant.taskdefs.Rmic::setCompiler(java.lang.String):void, org.apache.tools.ant.taskdefs.Rmic::createCompilerArg():org.apache.tools.ant.taskdefs.Rmic.ImplementationSpecificArgument, org.apache.tools.ant.taskdefs.Rmic::getCompiler():java.lang.String]
org.apache.tools.ant.taskdefs.SignJar	[org.apache.tools.ant.taskdefs.SignJar::java.lang.String tsaurl, org.apache.tools.ant.taskdefs.SignJar::addTimestampAuthorityCommands(org.apache.tools.ant.taskdefs.ExecTask):void, org.apache.tools.ant.taskdefs.SignJar::java.lang.String tsacert]
org.apache.tools.ant.taskdefs.SignJar	[org.apache.tools.ant.taskdefs.SignJar::boolean lazy, org.apache.tools.ant.taskdefs.SignJar::isUpToDate(java.io.File, java.io.File):boolean, org.apache.tools.ant.taskdefs.SignJar::isSigned(java.io.File):boolean]
org.apache.tools.ant.taskdefs.TaskOutputStream	[org.apache.tools.ant.taskdefs.TaskOutputStream::org.apache.tools.ant.Task task, org.apache.tools.ant.taskdefs.TaskOutputStream::processLine():void, org.apache.tools.ant.taskdefs.TaskOutputStream::int msgOutputLevel]
org.apache.tools.ant.taskdefs.Touch	[org.apache.tools.ant.taskdefs.Touch::boolean mkdirs, org.apache.tools.ant.taskdefs.Touch::boolean verbose, org.apache.tools.ant.taskdefs.Touch::touch(java.io.File, long):void]
org.apache.tools.ant.taskdefs.XmlProperty	[org.apache.tools.ant.taskdefs.XmlProperty::boolean collapseAttributes, org.apache.tools.ant.taskdefs.XmlProperty::getAttributeName(org.w3c.dom.Node):java.lang.String, org.apache.tools.ant.taskdefs.XmlProperty::boolean includeSemanticAttribute]
org.apache.tools.ant.taskdefs.XmlProperty	[org.apache.tools.ant.taskdefs.XmlProperty::boolean collapseAttributes, org.apache.tools.ant.taskdefs.XmlProperty::getAttributeName(org.w3c.dom.Node):java.lang.String, org.apache.tools.ant.taskdefs.XmlProperty::boolean includeSemanticAttribute, org.apache.tools.ant.taskdefs.XmlProperty::boolean semanticAttributes, org.apache.tools.ant.taskdefs.XmlProperty::processNode(org.w3c.dom.Node, java.lang.String, java.lang.Object):java.lang.Object, org.apache.tools.ant.taskdefs.XmlProperty::getAttributeValue(org.w3c.dom.Node):java.lang.String, org.apache.tools.ant.taskdefs.XmlProperty::java.io.File rootDirectory, org.apache.tools.ant.taskdefs.XmlProperty::resolveFile(java.lang.String):java.io.File]
org.apache.tools.ant.taskdefs.optional.ANTLR	[org.apache.tools.ant.taskdefs.optional.ANTLR::java.io.File workingdir, org.apache.tools.ant.taskdefs.optional.ANTLR::java.io.ByteArrayOutputStream bos, org.apache.tools.ant.taskdefs.optional.ANTLR::run(java.lang.String[]):int]
org.apache.tools.ant.taskdefs.optional.ANTLR	[org.apache.tools.ant.taskdefs.optional.ANTLR::org.apache.tools.ant.types.CommandlineJava commandline, org.apache.tools.ant.taskdefs.optional.ANTLR::java.io.File superGrammar, org.apache.tools.ant.taskdefs.optional.ANTLR::setGlib(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ANTLR::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.optional.ANTLR::is272():boolean]
org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool	[org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool::java.util.Hashtable utf8Indexes, org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool::getUTF8Entry(java.lang.String):int, org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool::addEntry(org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry):int, org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool::read(java.io.DataInputStream):void]
org.apache.tools.ant.taskdefs.optional.ejb.EjbJar	[org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::java.util.ArrayList deploymentTools, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::addDeploymentTool(org.apache.tools.ant.taskdefs.optional.ejb.EJBDeploymentTool):void, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createBorland():org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createWeblogic():org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createWebsphere():org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createJboss():org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createIplanet():org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createJonas():org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createWeblogictoplink():org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool]
org.apache.tools.ant.taskdefs.optional.ejb.EjbJar	[org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::java.util.ArrayList deploymentTools, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::addDeploymentTool(org.apache.tools.ant.taskdefs.optional.ejb.EJBDeploymentTool):void, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createBorland():org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createWeblogic():org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createWebsphere():org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool, org.apache.tools.ant.taskdefs.optional.ejb.EjbJar::createJboss():org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool]
org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask	[org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask::java.lang.String propertyName, org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask::validate():void, org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask::org.apache.tools.ant.taskdefs.optional.extension.Extension requiredExtension, org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask::addConfiguredExtension(org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter):void, org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask::setLibraryProperty(java.io.File):void]
org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver	[org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver::java.io.File destfile, org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver::java.io.File destdir, org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver::getDest():java.io.File, org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver::validate():void]
org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask	[org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::org.apache.tools.ant.types.Path mergefiles, org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::setMergefiles(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::createMergefiles():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::createAddfiles():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::org.apache.tools.ant.types.Path addfiles, org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask::setAddfiles(org.apache.tools.ant.types.Path):void]
org.apache.tools.ant.taskdefs.optional.junit.BatchTest	[org.apache.tools.ant.taskdefs.optional.junit.BatchTest::org.apache.tools.ant.types.resources.Resources resources, org.apache.tools.ant.taskdefs.optional.junit.BatchTest::getFilenames():java.lang.String[], org.apache.tools.ant.taskdefs.optional.junit.BatchTest::createAllJUnitTest():org.apache.tools.ant.taskdefs.optional.junit.JUnitTest[]]
org.apache.tools.ant.taskdefs.optional.ssh.Scp	[org.apache.tools.ant.taskdefs.optional.ssh.Scp::java.lang.String toUri, org.apache.tools.ant.taskdefs.optional.ssh.Scp::boolean isToRemote, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setTodir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setLocalTodir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setRemoteTodir(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setLocalTofile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setRemoteTofile(java.lang.String):void]
org.apache.tools.ant.taskdefs.optional.ssh.Scp	[org.apache.tools.ant.taskdefs.optional.ssh.Scp::java.lang.String fromUri, org.apache.tools.ant.taskdefs.optional.ssh.Scp::boolean isFromRemote, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setFile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setLocalFile(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.ssh.Scp::setRemoteFile(java.lang.String):void]
org.apache.tools.ant.types.PropertySet.PropertyRef	[org.apache.tools.ant.types.PropertySet.PropertyRef::java.lang.String name, org.apache.tools.ant.types.PropertySet.PropertyRef::setName(java.lang.String):void, org.apache.tools.ant.types.PropertySet.PropertyRef::java.lang.String regex, org.apache.tools.ant.types.PropertySet.PropertyRef::setRegex(java.lang.String):void]
org.apache.tools.ant.types.RegularExpression	[org.apache.tools.ant.types.RegularExpression::java.lang.String myPattern, org.apache.tools.ant.types.RegularExpression::boolean setPatternPending, org.apache.tools.ant.types.RegularExpression::setPattern():void, org.apache.tools.ant.types.RegularExpression::setPattern(java.lang.String):void]
org.apache.tools.ant.util.regexp.JakartaOroMatcher	[org.apache.tools.ant.util.regexp.JakartaOroMatcher::java.lang.String pattern, org.apache.tools.ant.util.regexp.JakartaOroMatcher::getCompiledPattern(int):org.apache.oro.text.regex.Pattern, org.apache.tools.ant.util.regexp.JakartaOroMatcher::org.apache.oro.text.regex.Perl5Compiler compiler]
org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser	[org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String file, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::processFile(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String date, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String author, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String comment, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::processComment(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String revision, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::java.lang.String previousRevision, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::processGetPreviousRevision(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::processRevision(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::int status, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::stdout(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::processDate(java.lang.String):void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::saveEntry():void, org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser::reset():void]
org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand	[org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::org.apache.tools.ant.Task owner, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::org.apache.tools.ant.taskdefs.Execute executable, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::runCommand():void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::org.apache.tools.ant.types.Commandline commandLine, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::addArgument(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::addArgument(java.lang.String, java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::setExecutableCommandLine():void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::logVerbose(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::logError(java.lang.String):void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::java.lang.String title, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::boolean traceCommandLine, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::boolean useResponseFile, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::int automaticResponseFileThreshold, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::java.io.File temporaryCommandFile, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::addArguments(java.lang.String[]):void, org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand::prepareExecutor():void]
org.apache.tools.ant.types.RedirectorElement	[org.apache.tools.ant.types.RedirectorElement::java.lang.Boolean logError, org.apache.tools.ant.types.RedirectorElement::java.lang.String outputProperty, org.apache.tools.ant.types.RedirectorElement::java.lang.String errorProperty, org.apache.tools.ant.types.RedirectorElement::java.lang.Boolean append, org.apache.tools.ant.types.RedirectorElement::java.lang.Boolean createEmptyFiles, org.apache.tools.ant.types.RedirectorElement::java.lang.String outputEncoding, org.apache.tools.ant.types.RedirectorElement::java.lang.String errorEncoding, org.apache.tools.ant.types.RedirectorElement::java.lang.String inputEncoding, org.apache.tools.ant.types.RedirectorElement::java.lang.Boolean logInputString, org.apache.tools.ant.types.RedirectorElement::setLogInputString(boolean):void, org.apache.tools.ant.types.RedirectorElement::java.lang.Boolean alwaysLog, org.apache.tools.ant.types.RedirectorElement::setAlwaysLog(boolean):void, org.apache.tools.ant.types.RedirectorElement::setOutputEncoding(java.lang.String):void, org.apache.tools.ant.types.RedirectorElement::setErrorEncoding(java.lang.String):void, org.apache.tools.ant.types.RedirectorElement::setInputEncoding(java.lang.String):void, org.apache.tools.ant.types.RedirectorElement::setLogError(boolean):void, org.apache.tools.ant.types.RedirectorElement::setOutputProperty(java.lang.String):void, org.apache.tools.ant.types.RedirectorElement::setAppend(boolean):void, org.apache.tools.ant.types.RedirectorElement::setCreateEmptyFiles(boolean):void, org.apache.tools.ant.types.RedirectorElement::setErrorProperty(java.lang.String):void]
org.apache.tools.zip.AsiExtraField	[org.apache.tools.zip.AsiExtraField::int mode, org.apache.tools.zip.AsiExtraField::boolean dirFlag, org.apache.tools.zip.AsiExtraField::isDirectory():boolean, org.apache.tools.zip.AsiExtraField::getMode(int):int, org.apache.tools.zip.AsiExtraField::setDirectory(boolean):void, org.apache.tools.zip.AsiExtraField::setLinkedFile(java.lang.String):void, org.apache.tools.zip.AsiExtraField::setMode(int):void]
org.apache.tools.zip.AsiExtraField	[org.apache.tools.zip.AsiExtraField::boolean dirFlag, org.apache.tools.zip.AsiExtraField::isDirectory():boolean, org.apache.tools.zip.AsiExtraField::getMode(int):int, org.apache.tools.zip.AsiExtraField::setDirectory(boolean):void]
org.apache.tools.ant.Task	[org.apache.tools.ant.Task::org.apache.tools.ant.RuntimeConfigurable wrapper, org.apache.tools.ant.Task::boolean invalid, org.apache.tools.ant.Task::markInvalid():void, org.apache.tools.ant.Task::maybeConfigure():void, org.apache.tools.ant.Task::perform():void, org.apache.tools.ant.Task::reconfigure():void]
org.apache.tools.ant.taskdefs.Available	[org.apache.tools.ant.taskdefs.Available::org.apache.tools.ant.types.Path filepath, org.apache.tools.ant.taskdefs.Available::createFilepath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Available::createClasspath():org.apache.tools.ant.types.Path, org.apache.tools.ant.taskdefs.Available::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.taskdefs.Available::org.apache.tools.ant.AntClassLoader loader, org.apache.tools.ant.taskdefs.Available::checkResource(java.lang.String):boolean]
org.apache.tools.ant.taskdefs.SQLExec	[org.apache.tools.ant.taskdefs.SQLExec::java.lang.String delimiter, org.apache.tools.ant.taskdefs.SQLExec::boolean keepformat, org.apache.tools.ant.taskdefs.SQLExec::runStatements(java.io.Reader, java.io.PrintStream):void, org.apache.tools.ant.taskdefs.SQLExec::java.lang.String delimiterType, org.apache.tools.ant.taskdefs.SQLExec::setDelimiterType(org.apache.tools.ant.taskdefs.SQLExec.DelimiterType):void]
org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock	[org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock::java.lang.String mComment, org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock::getCommentCommand(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock::checkOptions(org.apache.tools.ant.types.Commandline):void, org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock::getPnameCommand(org.apache.tools.ant.types.Commandline):void]
org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector	[org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::java.lang.ClassLoader myClassLoader, org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::getClassLoader():java.lang.ClassLoader, org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::org.apache.tools.ant.types.Path classpath, org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::addClasspath(org.apache.tools.ant.types.Path):void, org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::loadClass(java.lang.String, java.lang.String, java.lang.Class):java.lang.Object, org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector::tryToSetAParameter(java.lang.Object, java.lang.String, java.lang.String):void]
