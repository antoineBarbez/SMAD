com.hp.hpl.jena.graph.query.PatternStageBase	[com.hp.hpl.jena.graph.query.PatternStageBase::com.hp.hpl.jena.graph.query.ValuatorSet[] guards, com.hp.hpl.jena.graph.query.PatternStageBase::makeNextStageElement(com.hp.hpl.jena.graph.query.Pipe, int):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::makeIntermediateStageElement(com.hp.hpl.jena.graph.query.Pipe, int):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::com.hp.hpl.jena.graph.query.QueryTriple[] classified, com.hp.hpl.jena.graph.query.PatternStageBase::makeStageElementChain(com.hp.hpl.jena.graph.query.Pipe, int):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::com.hp.hpl.jena.graph.Graph graph, com.hp.hpl.jena.graph.query.PatternStageBase::makeFindStageElement(int, com.hp.hpl.jena.graph.query.StageElement):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::makeFinalStageElement(com.hp.hpl.jena.graph.query.Pipe):com.hp.hpl.jena.graph.query.StageElement.PutBindings]
com.hp.hpl.jena.graph.query.PatternStageBase	[com.hp.hpl.jena.graph.query.PatternStageBase::com.hp.hpl.jena.graph.query.QueryTriple[] classified, com.hp.hpl.jena.graph.query.PatternStageBase::makeStageElementChain(com.hp.hpl.jena.graph.query.Pipe, int):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::com.hp.hpl.jena.graph.Graph graph, com.hp.hpl.jena.graph.query.PatternStageBase::makeFindStageElement(int, com.hp.hpl.jena.graph.query.StageElement):com.hp.hpl.jena.graph.query.StageElement, com.hp.hpl.jena.graph.query.PatternStageBase::makeFinalStageElement(com.hp.hpl.jena.graph.query.Pipe):com.hp.hpl.jena.graph.query.StageElement.PutBindings]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::java.util.List<com.hp.hpl.jena.util.Locator> handlers, com.hp.hpl.jena.util.FileManager::locators():java.util.Iterator<com.hp.hpl.jena.util.Locator>, com.hp.hpl.jena.util.FileManager::remove(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::addLocator(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::openNoMapOrNull(java.lang.String):com.hp.hpl.jena.util.TypedStream, com.hp.hpl.jena.util.FileManager::addLocatorFile(java.lang.String):void, com.hp.hpl.jena.util.FileManager::addLocatorClassLoader(java.lang.ClassLoader):void, com.hp.hpl.jena.util.FileManager::addLocatorURL():void, com.hp.hpl.jena.util.FileManager::addLocatorZip(java.lang.String):void, com.hp.hpl.jena.util.FileManager::setStdLocators(com.hp.hpl.jena.util.FileManager):void, com.hp.hpl.jena.util.FileManager::com.hp.hpl.jena.util.LocationMapper mapper, com.hp.hpl.jena.util.FileManager::mapURI(java.lang.String):java.lang.String, com.hp.hpl.jena.util.FileManager::open(java.lang.String):java.io.InputStream, com.hp.hpl.jena.util.FileManager::readModelWorker(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::openNoMap(java.lang.String):java.io.InputStream, com.hp.hpl.jena.util.FileManager::readWholeFileAsUTF8(java.io.InputStream):java.lang.String, com.hp.hpl.jena.util.FileManager::readWholeFileAsUTF8(java.lang.String):java.lang.String]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::java.util.List<com.hp.hpl.jena.util.Locator> handlers, com.hp.hpl.jena.util.FileManager::locators():java.util.Iterator<com.hp.hpl.jena.util.Locator>, com.hp.hpl.jena.util.FileManager::remove(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::addLocator(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::openNoMapOrNull(java.lang.String):com.hp.hpl.jena.util.TypedStream, com.hp.hpl.jena.util.FileManager::addLocatorFile(java.lang.String):void, com.hp.hpl.jena.util.FileManager::addLocatorClassLoader(java.lang.ClassLoader):void, com.hp.hpl.jena.util.FileManager::addLocatorURL():void, com.hp.hpl.jena.util.FileManager::addLocatorZip(java.lang.String):void, com.hp.hpl.jena.util.FileManager::setStdLocators(com.hp.hpl.jena.util.FileManager):void]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::java.util.List<com.hp.hpl.jena.util.Locator> handlers, com.hp.hpl.jena.util.FileManager::locators():java.util.Iterator<com.hp.hpl.jena.util.Locator>, com.hp.hpl.jena.util.FileManager::remove(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::addLocator(com.hp.hpl.jena.util.Locator):void, com.hp.hpl.jena.util.FileManager::openNoMapOrNull(java.lang.String):com.hp.hpl.jena.util.TypedStream]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::java.util.List<com.hp.hpl.jena.util.Locator> handlers, com.hp.hpl.jena.util.FileManager::locators():java.util.Iterator<com.hp.hpl.jena.util.Locator>, com.hp.hpl.jena.util.FileManager::remove(com.hp.hpl.jena.util.Locator):void]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::com.hp.hpl.jena.util.LocationMapper mapper, com.hp.hpl.jena.util.FileManager::mapURI(java.lang.String):java.lang.String, com.hp.hpl.jena.util.FileManager::open(java.lang.String):java.io.InputStream, com.hp.hpl.jena.util.FileManager::readModelWorker(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::openNoMap(java.lang.String):java.io.InputStream, com.hp.hpl.jena.util.FileManager::readWholeFileAsUTF8(java.io.InputStream):java.lang.String, com.hp.hpl.jena.util.FileManager::readWholeFileAsUTF8(java.lang.String):java.lang.String]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::boolean cacheModelLoads, com.hp.hpl.jena.util.FileManager::java.util.Map<java.lang.String,com.hp.hpl.jena.rdf.model.Model> modelCache, com.hp.hpl.jena.util.FileManager::resetCache():void, com.hp.hpl.jena.util.FileManager::setModelCaching(boolean):void, com.hp.hpl.jena.util.FileManager::getFromCache(java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::hasCachedModel(java.lang.String):boolean, com.hp.hpl.jena.util.FileManager::addCacheModel(java.lang.String, com.hp.hpl.jena.rdf.model.Model):void, com.hp.hpl.jena.util.FileManager::removeCacheModel(java.lang.String):void, com.hp.hpl.jena.util.FileManager::loadModelWorker(java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::readModel(com.hp.hpl.jena.rdf.model.Model, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::readModel(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::readModel(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::boolean cacheModelLoads, com.hp.hpl.jena.util.FileManager::java.util.Map<java.lang.String,com.hp.hpl.jena.rdf.model.Model> modelCache, com.hp.hpl.jena.util.FileManager::resetCache():void, com.hp.hpl.jena.util.FileManager::setModelCaching(boolean):void, com.hp.hpl.jena.util.FileManager::getFromCache(java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::hasCachedModel(java.lang.String):boolean, com.hp.hpl.jena.util.FileManager::addCacheModel(java.lang.String, com.hp.hpl.jena.rdf.model.Model):void, com.hp.hpl.jena.util.FileManager::removeCacheModel(java.lang.String):void, com.hp.hpl.jena.util.FileManager::loadModelWorker(java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::loadModel(java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::com.hp.hpl.jena.util.LocationMapper mapper, com.hp.hpl.jena.util.FileManager::mapURI(java.lang.String):java.lang.String, com.hp.hpl.jena.util.FileManager::open(java.lang.String):java.io.InputStream, com.hp.hpl.jena.util.FileManager::readModelWorker(com.hp.hpl.jena.rdf.model.Model, java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::openNoMap(java.lang.String):java.io.InputStream]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::boolean cacheModelLoads, com.hp.hpl.jena.util.FileManager::java.util.Map<java.lang.String,com.hp.hpl.jena.rdf.model.Model> modelCache, com.hp.hpl.jena.util.FileManager::resetCache():void, com.hp.hpl.jena.util.FileManager::setModelCaching(boolean):void, com.hp.hpl.jena.util.FileManager::getFromCache(java.lang.String):com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.util.FileManager::hasCachedModel(java.lang.String):boolean, com.hp.hpl.jena.util.FileManager::addCacheModel(java.lang.String, com.hp.hpl.jena.rdf.model.Model):void, com.hp.hpl.jena.util.FileManager::removeCacheModel(java.lang.String):void, com.hp.hpl.jena.util.FileManager::loadModelWorker(java.lang.String, java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.model.Model]
com.hp.hpl.jena.util.FileManager	[com.hp.hpl.jena.util.FileManager::com.hp.hpl.jena.util.LocationMapper mapper, com.hp.hpl.jena.util.FileManager::mapURI(java.lang.String):java.lang.String, com.hp.hpl.jena.util.FileManager::open(java.lang.String):java.io.InputStream]
com.hp.hpl.jena.n3.turtle.ParserBase	[com.hp.hpl.jena.n3.turtle.ParserBase::boolean skolomizedBNodes, com.hp.hpl.jena.n3.turtle.ParserBase::isBNodeIRI(java.lang.String):boolean, com.hp.hpl.jena.n3.turtle.ParserBase::createNode(java.lang.String):com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.n3.turtle.ParserBase::com.hp.hpl.jena.n3.IRIResolver resolver, com.hp.hpl.jena.n3.turtle.ParserBase::resolveIRI(java.lang.String, int, int):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::setBaseURI(java.lang.String):void, com.hp.hpl.jena.n3.turtle.ParserBase::_resolveIRI(java.lang.String, int, int):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::stripQuotes(java.lang.String):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::resolveQuotedIRI(java.lang.String, int, int):java.lang.String]
com.hp.hpl.jena.n3.turtle.ParserBase	[com.hp.hpl.jena.n3.turtle.ParserBase::boolean skolomizedBNodes, com.hp.hpl.jena.n3.turtle.ParserBase::isBNodeIRI(java.lang.String):boolean, com.hp.hpl.jena.n3.turtle.ParserBase::createNode(java.lang.String):com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.n3.turtle.ParserBase::com.hp.hpl.jena.n3.IRIResolver resolver, com.hp.hpl.jena.n3.turtle.ParserBase::resolveIRI(java.lang.String, int, int):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::setBaseURI(java.lang.String):void, com.hp.hpl.jena.n3.turtle.ParserBase::_resolveIRI(java.lang.String, int, int):java.lang.String]
com.hp.hpl.jena.n3.turtle.ParserBase	[com.hp.hpl.jena.n3.turtle.ParserBase::com.hp.hpl.jena.shared.PrefixMapping prefixMapping, com.hp.hpl.jena.n3.turtle.ParserBase::resolvePName(java.lang.String, int, int):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::setPrefix(int, int, java.lang.String, java.lang.String):void, com.hp.hpl.jena.n3.turtle.ParserBase::throwParseException(java.lang.String, int, int):void, com.hp.hpl.jena.n3.turtle.ParserBase::com.hp.hpl.jena.n3.turtle.TurtleEventHandler handler]
com.hp.hpl.jena.n3.turtle.ParserBase	[com.hp.hpl.jena.n3.turtle.ParserBase::boolean skolomizedBNodes, com.hp.hpl.jena.n3.turtle.ParserBase::isBNodeIRI(java.lang.String):boolean, com.hp.hpl.jena.n3.turtle.ParserBase::createNode(java.lang.String):com.hp.hpl.jena.graph.Node]
com.hp.hpl.jena.n3.turtle.ParserBase	[com.hp.hpl.jena.n3.turtle.ParserBase::com.hp.hpl.jena.n3.IRIResolver resolver, com.hp.hpl.jena.n3.turtle.ParserBase::resolveIRI(java.lang.String, int, int):java.lang.String, com.hp.hpl.jena.n3.turtle.ParserBase::setBaseURI(java.lang.String):void, com.hp.hpl.jena.n3.turtle.ParserBase::_resolveIRI(java.lang.String, int, int):java.lang.String]
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap	[com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap::com.hp.hpl.jena.graph.impl.ReifierFragmentHandler TYPES, com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap::makeSelectors():java.util.Map<com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.impl.ReifierFragmentHandler>, com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap::com.hp.hpl.jena.graph.impl.ReifierFragmentHandler SUBJECTS, com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap::com.hp.hpl.jena.graph.impl.ReifierFragmentHandler PREDICATES, com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap::com.hp.hpl.jena.graph.impl.ReifierFragmentHandler OBJECTS]
com.hp.hpl.jena.rdf.model.impl.ModelReifier	[com.hp.hpl.jena.rdf.model.impl.ModelReifier::com.hp.hpl.jena.graph.Reifier reifier, com.hp.hpl.jena.rdf.model.impl.ModelReifier::com.hp.hpl.jena.util.iterator.Map1<com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.ReifiedStatement> mapToRS, com.hp.hpl.jena.rdf.model.impl.ModelReifier::findReifiedStatements():com.hp.hpl.jena.util.iterator.ExtendedIterator<com.hp.hpl.jena.rdf.model.ReifiedStatement>, com.hp.hpl.jena.rdf.model.impl.ModelReifier::findReifiedStatements(com.hp.hpl.jena.graph.Triple):com.hp.hpl.jena.util.iterator.ExtendedIterator<com.hp.hpl.jena.rdf.model.ReifiedStatement>, com.hp.hpl.jena.rdf.model.impl.ModelReifier::listReifiedStatements():com.hp.hpl.jena.rdf.model.RSIterator, com.hp.hpl.jena.rdf.model.impl.ModelReifier::listReifiedStatements(com.hp.hpl.jena.graph.FrontsTriple):com.hp.hpl.jena.rdf.model.RSIterator]
com.hp.hpl.jena.graph.query.GraphQuery	[com.hp.hpl.jena.graph.query.GraphQuery::com.hp.hpl.jena.graph.query.NamedTripleBunches triples, com.hp.hpl.jena.graph.query.GraphQuery::addMatch(com.hp.hpl.jena.graph.Triple):com.hp.hpl.jena.graph.query.GraphQuery, com.hp.hpl.jena.graph.query.GraphQuery::addNamedMatch(java.lang.String, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node):com.hp.hpl.jena.graph.query.GraphQuery, com.hp.hpl.jena.graph.query.GraphQuery::java.util.List<com.hp.hpl.jena.graph.Triple> triplePattern, com.hp.hpl.jena.graph.query.GraphQuery::getPattern():java.util.List<com.hp.hpl.jena.graph.Triple>, com.hp.hpl.jena.graph.query.GraphQuery::addMatches(com.hp.hpl.jena.graph.Graph):void]
com.hp.hpl.jena.graph.query.GraphQuery	[com.hp.hpl.jena.graph.query.GraphQuery::com.hp.hpl.jena.graph.query.ExpressionSet constraint, com.hp.hpl.jena.graph.query.GraphQuery::com.hp.hpl.jena.graph.query.TripleSorter sortMethod, com.hp.hpl.jena.graph.query.GraphQuery::setTripleSorter(com.hp.hpl.jena.graph.query.TripleSorter):void, com.hp.hpl.jena.graph.query.GraphQuery::com.hp.hpl.jena.graph.query.SimpleQueryEngine lastQueryEngine, com.hp.hpl.jena.graph.query.GraphQuery::executeBindings(java.util.List<com.hp.hpl.jena.graph.query.Stage>, com.hp.hpl.jena.graph.query.NamedGraphMap, com.hp.hpl.jena.graph.Node[]):com.hp.hpl.jena.util.iterator.ExtendedIterator<com.hp.hpl.jena.graph.query.Domain>]
com.hp.hpl.jena.graph.query.GuardArranger	[com.hp.hpl.jena.graph.query.GuardArranger::java.util.Set<java.lang.String>[] boundVariables, com.hp.hpl.jena.graph.query.GuardArranger::canEval(com.hp.hpl.jena.graph.query.Expression, int):boolean, com.hp.hpl.jena.graph.query.GuardArranger::plantWhereFullyBound(com.hp.hpl.jena.graph.query.Expression, java.util.Iterator<com.hp.hpl.jena.graph.query.Expression>, com.hp.hpl.jena.graph.query.Mapping, com.hp.hpl.jena.graph.query.ValuatorSet[]):void, com.hp.hpl.jena.graph.query.GuardArranger::makeGuards(com.hp.hpl.jena.graph.query.Mapping, com.hp.hpl.jena.graph.query.ExpressionSet, int):com.hp.hpl.jena.graph.query.ValuatorSet[]]
com.hp.hpl.jena.ontology.OntTools.DisjointSet	[com.hp.hpl.jena.ontology.OntTools.DisjointSet::com.hp.hpl.jena.ontology.OntTools.DisjointSet m_parent, com.hp.hpl.jena.ontology.OntTools.DisjointSet::int m_rank, com.hp.hpl.jena.ontology.OntTools.DisjointSet::incrementRank():void, com.hp.hpl.jena.ontology.OntTools.DisjointSet::union(com.hp.hpl.jena.ontology.OntTools.DisjointSet):void, com.hp.hpl.jena.ontology.OntTools.DisjointSet::find():com.hp.hpl.jena.ontology.OntTools.DisjointSet]
com.hp.hpl.jena.rdf.arp.ARPHandlers	[com.hp.hpl.jena.rdf.arp.ARPHandlers::org.xml.sax.ErrorHandler errorHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::setErrorHandler(org.xml.sax.ErrorHandler):org.xml.sax.ErrorHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::com.hp.hpl.jena.rdf.arp.StatementHandler statementHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::setStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler):com.hp.hpl.jena.rdf.arp.StatementHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::com.hp.hpl.jena.rdf.arp.NamespaceHandler nameHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::setNamespaceHandler(com.hp.hpl.jena.rdf.arp.NamespaceHandler):com.hp.hpl.jena.rdf.arp.NamespaceHandler]
com.hp.hpl.jena.rdf.arp.ARPHandlers	[com.hp.hpl.jena.rdf.arp.ARPHandlers::org.xml.sax.ErrorHandler errorHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::setErrorHandler(org.xml.sax.ErrorHandler):org.xml.sax.ErrorHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::com.hp.hpl.jena.rdf.arp.StatementHandler statementHandler, com.hp.hpl.jena.rdf.arp.ARPHandlers::setStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler):com.hp.hpl.jena.rdf.arp.StatementHandler]
com.hp.hpl.jena.xmloutput.impl.Unparser	[com.hp.hpl.jena.xmloutput.impl.Unparser::java.lang.String localName, com.hp.hpl.jena.xmloutput.impl.Unparser::setLocalName(java.lang.String):void, com.hp.hpl.jena.xmloutput.impl.Unparser::getNameSpace(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, com.hp.hpl.jena.xmloutput.impl.Unparser::getLocalName(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, com.hp.hpl.jena.xmloutput.impl.Unparser::isOKType(com.hp.hpl.jena.rdf.model.RDFNode):int, com.hp.hpl.jena.xmloutput.impl.Unparser::isLocalReference(com.hp.hpl.jena.rdf.model.Resource):boolean]
com.hp.hpl.jena.xmloutput.impl.Unparser	[com.hp.hpl.jena.xmloutput.impl.Unparser::int indentLevel, com.hp.hpl.jena.xmloutput.impl.Unparser::indentPlus():void, com.hp.hpl.jena.xmloutput.impl.Unparser::indentMinus():void]
com.hp.hpl.jena.xmloutput.impl.Unparser	[com.hp.hpl.jena.xmloutput.impl.Unparser::getNameSpace(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, com.hp.hpl.jena.xmloutput.impl.Unparser::getLocalName(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, com.hp.hpl.jena.xmloutput.impl.Unparser::isOKType(com.hp.hpl.jena.rdf.model.RDFNode):int, com.hp.hpl.jena.xmloutput.impl.Unparser::isLocalReference(com.hp.hpl.jena.rdf.model.Resource):boolean]
jena.cmdline.CommandLine	[jena.cmdline.CommandLine::java.util.Map<java.lang.String,jena.cmdline.Arg> args, jena.cmdline.CommandLine::hasArgs():boolean, jena.cmdline.CommandLine::args():java.util.Iterator<jena.cmdline.Arg>, jena.cmdline.CommandLine::numArgs():int, jena.cmdline.CommandLine::getArg(java.lang.String):jena.cmdline.Arg, jena.cmdline.CommandLine::contains(java.lang.String):boolean, jena.cmdline.CommandLine::hasArg(java.lang.String):boolean, jena.cmdline.CommandLine::getArg(jena.cmdline.ArgDecl):jena.cmdline.Arg, jena.cmdline.CommandLine::contains(jena.cmdline.ArgDecl):boolean, jena.cmdline.CommandLine::hasArg(jena.cmdline.ArgDecl):boolean, jena.cmdline.CommandLine::getValue(java.lang.String):java.lang.String, jena.cmdline.CommandLine::getValues(jena.cmdline.ArgDecl):java.util.List<java.lang.String>, jena.cmdline.CommandLine::getValues(java.lang.String):java.util.List<java.lang.String>, jena.cmdline.CommandLine::getValue(jena.cmdline.ArgDecl):java.lang.String]
jena.cmdline.CommandLine	[jena.cmdline.CommandLine::java.util.Map<java.lang.String,jena.cmdline.Arg> args, jena.cmdline.CommandLine::hasArgs():boolean, jena.cmdline.CommandLine::args():java.util.Iterator<jena.cmdline.Arg>, jena.cmdline.CommandLine::numArgs():int, jena.cmdline.CommandLine::getArg(java.lang.String):jena.cmdline.Arg, jena.cmdline.CommandLine::contains(java.lang.String):boolean, jena.cmdline.CommandLine::hasArg(java.lang.String):boolean, jena.cmdline.CommandLine::getArg(jena.cmdline.ArgDecl):jena.cmdline.Arg]
jena.cmdline.CommandLine	[jena.cmdline.CommandLine::java.lang.String indirectionMarker, jena.cmdline.CommandLine::getItem(int, boolean):java.lang.String, jena.cmdline.CommandLine::boolean allowItemIndirect, jena.cmdline.CommandLine::isIndirectItem(int):boolean]
com.hp.hpl.jena.datatypes.xsd.XSDDatatype	[com.hp.hpl.jena.datatypes.xsd.XSDDatatype::convertValidatedDataValue(org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object, com.hp.hpl.jena.datatypes.xsd.XSDDatatype::suitableInteger(java.lang.String):java.lang.Number, com.hp.hpl.jena.datatypes.xsd.XSDDatatype::parseValidated(java.lang.String):java.lang.Object]
com.hp.hpl.jena.graph.impl.FileGraph	[com.hp.hpl.jena.graph.impl.FileGraph::updateFrom(java.io.File, java.io.File):void, com.hp.hpl.jena.graph.impl.FileGraph::mustDelete(java.io.File):void, com.hp.hpl.jena.graph.impl.FileGraph::mustRename(java.io.File, java.io.File):void]
com.hp.hpl.jena.ontology.OntModelSpec	[com.hp.hpl.jena.ontology.OntModelSpec::com.hp.hpl.jena.rdf.model.ModelMaker m_importsMaker, com.hp.hpl.jena.ontology.OntModelSpec::com.hp.hpl.jena.rdf.model.ModelGetter importModelGetter, com.hp.hpl.jena.ontology.OntModelSpec::getImportModelGetter():com.hp.hpl.jena.rdf.model.ModelGetter]
com.hp.hpl.jena.ontology.OntModelSpec	[com.hp.hpl.jena.ontology.OntModelSpec::java.lang.String m_baseModelName, com.hp.hpl.jena.ontology.OntModelSpec::doCreateModel():com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.ontology.OntModelSpec::com.hp.hpl.jena.rdf.model.ModelMaker maker, com.hp.hpl.jena.ontology.OntModelSpec::implementCreateModelOver(java.lang.String):com.hp.hpl.jena.rdf.model.Model]
com.hp.hpl.jena.ontology.OntModelSpec	[com.hp.hpl.jena.ontology.OntModelSpec::com.hp.hpl.jena.reasoner.Reasoner m_reasoner, com.hp.hpl.jena.ontology.OntModelSpec::getReasoner():com.hp.hpl.jena.reasoner.Reasoner, com.hp.hpl.jena.ontology.OntModelSpec::com.hp.hpl.jena.reasoner.ReasonerFactory m_rFactory, com.hp.hpl.jena.ontology.OntModelSpec::sameReasonerFactory(com.hp.hpl.jena.ontology.OntModelSpec):boolean]
com.hp.hpl.jena.rdf.arp.ARPOptions	[com.hp.hpl.jena.rdf.arp.ARPOptions::boolean embedding, com.hp.hpl.jena.rdf.arp.ARPOptions::setEmbedding(boolean):boolean, com.hp.hpl.jena.rdf.arp.ARPOptions::copy():com.hp.hpl.jena.rdf.arp.ARPOptions, com.hp.hpl.jena.rdf.arp.ARPOptions::int[] errorMode, com.hp.hpl.jena.rdf.arp.ARPOptions::setErrorMode(int, int):int, com.hp.hpl.jena.rdf.arp.ARPOptions::setDefaultErrorMode():void, com.hp.hpl.jena.rdf.arp.ARPOptions::getErrorMode(int):int]
com.hp.hpl.jena.rdf.arp.ARPOptions	[com.hp.hpl.jena.rdf.arp.ARPOptions::int[] errorMode, com.hp.hpl.jena.rdf.arp.ARPOptions::setErrorMode(int, int):int, com.hp.hpl.jena.rdf.arp.ARPOptions::setDefaultErrorMode():void, com.hp.hpl.jena.rdf.arp.ARPOptions::getErrorMode(int):int]
com.hp.hpl.jena.rdf.arp.impl.XMLHandler	[com.hp.hpl.jena.rdf.arp.impl.XMLHandler::com.hp.hpl.jena.rdf.arp.ARPHandlers handlers, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::com.hp.hpl.jena.rdf.arp.StatementHandler badStatementHandler, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::triple(com.hp.hpl.jena.rdf.arp.impl.ANode, com.hp.hpl.jena.rdf.arp.impl.ANode, com.hp.hpl.jena.rdf.arp.impl.ANode):void]
com.hp.hpl.jena.rdf.arp.impl.XMLHandler	[com.hp.hpl.jena.rdf.arp.impl.XMLHandler::java.util.Map<java.lang.String,java.lang.Object> nodeIdUserData, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::setUserData(java.lang.String, java.lang.Object):void, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::getUserData(java.lang.String):java.lang.Object]
com.hp.hpl.jena.rdf.arp.impl.XMLHandler	[com.hp.hpl.jena.rdf.arp.impl.XMLHandler::org.apache.jena.iri.IRIFactory factory, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::iriFactory():org.apache.jena.iri.IRIFactory, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::org.apache.jena.iri.IRI sameDocRef, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::sameDocRef():org.apache.jena.iri.IRI]
com.hp.hpl.jena.rdf.arp.impl.XMLHandler	[com.hp.hpl.jena.rdf.arp.impl.XMLHandler::boolean allowRelativeReferences, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::initialContextWithBase(java.lang.String):com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::initialContext(java.lang.String, java.lang.String):com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext]
com.hp.hpl.jena.rdf.arp.impl.XMLHandler	[com.hp.hpl.jena.rdf.arp.impl.XMLHandler::com.hp.hpl.jena.rdf.arp.ARPOptions options, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, java.lang.String):void, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, com.hp.hpl.jena.rdf.arp.impl.ARPLocation, java.lang.String):void, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::ignoring(int):boolean, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::isError(int):boolean, com.hp.hpl.jena.rdf.arp.impl.XMLHandler::warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, org.xml.sax.SAXParseException):void]
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement	[com.hp.hpl.jena.rdf.arp.states.WantPropertyElement::mustBeEmpty(com.hp.hpl.jena.rdf.arp.impl.AttributeLexer, org.xml.sax.Attributes, int):boolean, com.hp.hpl.jena.rdf.arp.states.WantPropertyElement::descriptionOfCases(com.hp.hpl.jena.rdf.arp.impl.AttributeLexer, int, java.lang.String):java.lang.String, com.hp.hpl.jena.rdf.arp.states.WantPropertyElement::pairwiseIncompatibleErrorMessage(int, com.hp.hpl.jena.rdf.arp.impl.AttributeLexer, java.lang.String):java.lang.String, com.hp.hpl.jena.rdf.arp.states.WantPropertyElement::complicatedErrorMessage(int, com.hp.hpl.jena.rdf.arp.impl.AttributeLexer, java.lang.String):java.lang.String]
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable	[com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::com.hp.hpl.jena.graph.Node value, com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::boolean isRef, com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::simpleBind(com.hp.hpl.jena.graph.Node):void, com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::deref():com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::unbind():void, com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable::isUnbound():boolean]
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame	[com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::java.util.Iterator<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode> clauseIterator, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::hasNext():boolean, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::nextClause():com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::boolean isSingleton, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::noteSuccess():void]
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame	[com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::java.util.Iterator<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode> clauseIterator, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::hasNext():boolean, com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame::nextClause():com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode]
com.hp.hpl.jena.reasoner.rulesys.impl.Generator	[com.hp.hpl.jena.reasoner.rulesys.impl.Generator::java.util.Set<com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame> consumingCPs, com.hp.hpl.jena.reasoner.rulesys.impl.Generator::com.hp.hpl.jena.reasoner.rulesys.impl.Generator.LFlag completionState, com.hp.hpl.jena.reasoner.rulesys.impl.Generator::postCompletionCheckScan(java.util.Set<com.hp.hpl.jena.reasoner.rulesys.impl.Generator>):void, com.hp.hpl.jena.reasoner.rulesys.impl.Generator::propagateLive(java.util.Set<com.hp.hpl.jena.reasoner.rulesys.impl.Generator>):void, com.hp.hpl.jena.reasoner.rulesys.impl.Generator::removeConsumer(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame):void]
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator	[com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator::com.hp.hpl.jena.reasoner.rulesys.BackwardRuleInfGraphI infgraph, com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator::checkCME():void, com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator::int initialVersion]
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode	[com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode::byte[] code, com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode::java.lang.Object[] args, com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode::print(java.io.PrintStream):void]
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen	[com.hp.hpl.jena.shared.uuid.UUID_V1_Gen::int clockSeq, com.hp.hpl.jena.shared.uuid.UUID_V1_Gen::setInitialState():void, com.hp.hpl.jena.shared.uuid.UUID_V1_Gen::long node]
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter	[com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::java.util.HashMap<com.hp.hpl.jena.rdf.model.AnonId,java.lang.String> anonMap, com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::shortAnonId(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::int anonCount]
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter	[com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::java.lang.String attributeQuoteChar, com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::attributeQuoted(java.lang.String):java.lang.String, com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter::setAttributeQuoteChar(java.lang.Object):java.lang.String]
com.hp.hpl.jena.datatypes.TypeMapper	[com.hp.hpl.jena.datatypes.TypeMapper::java.util.HashMap<java.lang.Class<?>,com.hp.hpl.jena.datatypes.RDFDatatype> classToDT, com.hp.hpl.jena.datatypes.TypeMapper::getTypeByValue(java.lang.Object):com.hp.hpl.jena.datatypes.RDFDatatype, com.hp.hpl.jena.datatypes.TypeMapper::getTypeByClass(java.lang.Class<?>):com.hp.hpl.jena.datatypes.RDFDatatype]
com.hp.hpl.jena.graph.impl.GraphAddList	[com.hp.hpl.jena.graph.impl.GraphAddList::java.util.ArrayList<com.hp.hpl.jena.graph.Triple> triples, com.hp.hpl.jena.graph.impl.GraphAddList::size():int, com.hp.hpl.jena.graph.impl.GraphAddList::removeLast():com.hp.hpl.jena.graph.Triple, com.hp.hpl.jena.graph.impl.GraphAddList::iterator():java.util.Iterator<com.hp.hpl.jena.graph.Triple>]
com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket	[com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket::java.util.Set<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource> anonRes, com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket::aMember():com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource, com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket::members():java.util.Iterator<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource>, com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket::size():int]
com.hp.hpl.jena.graph.query.BufferPipe	[com.hp.hpl.jena.graph.query.BufferPipe::java.util.concurrent.BlockingQueue<java.lang.Object> buffer, com.hp.hpl.jena.graph.query.BufferPipe::fetch():java.lang.Object, com.hp.hpl.jena.graph.query.BufferPipe::putAny(java.lang.Object):void]
com.hp.hpl.jena.graph.query.SimpleTripleSorter	[com.hp.hpl.jena.graph.query.SimpleTripleSorter::java.util.Set<com.hp.hpl.jena.graph.Node> bound, com.hp.hpl.jena.graph.query.SimpleTripleSorter::bind(com.hp.hpl.jena.graph.Node):void, com.hp.hpl.jena.graph.query.SimpleTripleSorter::weight(com.hp.hpl.jena.graph.Node):int, com.hp.hpl.jena.graph.query.SimpleTripleSorter::bc(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node):int]
com.hp.hpl.jena.ontology.OntTools.LCAIndex	[com.hp.hpl.jena.ontology.OntTools.LCAIndex::java.util.Map<com.hp.hpl.jena.rdf.model.Resource,java.util.Map<com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource>> m_lcaIndex, com.hp.hpl.jena.ontology.OntTools.LCAIndex::getLCA(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource):com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.ontology.OntTools.LCAIndex::setLCA(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Resource):void]
com.hp.hpl.jena.rdf.arp.impl.ParserSupport	[com.hp.hpl.jena.rdf.arp.impl.ParserSupport::isWhite(char[], int, int):boolean, com.hp.hpl.jena.rdf.arp.impl.ParserSupport::isWhite(char):boolean, com.hp.hpl.jena.rdf.arp.impl.ParserSupport::isWhite(java.lang.StringBuffer):boolean]
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation	[com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation::com.hp.hpl.jena.graph.Node[] argVars, com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation::getResult():com.hp.hpl.jena.graph.Triple, com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation::initDerivationRecord(com.hp.hpl.jena.graph.Node[]):void]
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine	[com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine::java.util.HashMap<java.lang.String,com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.Count> profile, com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine::resetProfile(boolean):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine::printProfile():void, com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine::incrementProfile(com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode):void]
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter	[com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject cpFrame, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setupTripleMatchCall(int, int):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setupClauseCall(int, int, java.util.List<com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode>, boolean):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setupTabledCall(int, int):void]
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter	[com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setState(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterState):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame topTMFrame, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setTopInterpreter(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext):void]
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter	[com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterContext iContext, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::setState(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreterState):void, com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter::restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame):void]
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode	[com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.Siblings siblings, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::becomeSubordinateOf(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode):void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::becomeLeaderOf(java.util.Set<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode>):void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::addSiblings(java.util.Set<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode>, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode):void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::concatenateSiblings(java.util.Iterator<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode>):java.util.Iterator<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode>]
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode	[com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::java.util.List<com.hp.hpl.jena.graph.Triple> succClosedTriples, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::clearTripleCache():void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::assertIndirectLinkTo(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode):void]
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode	[com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::java.util.List<com.hp.hpl.jena.graph.Triple> succClosedTriples, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::clearTripleCache():void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::assertIndirectLinkTo(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode):void, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::pathTo(com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode):boolean, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode::iteratorOverSuccessors():java.util.Iterator<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode>]
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache	[com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::java.util.HashMap<com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode> nodeMap, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::listAllSubjects():com.hp.hpl.jena.util.iterator.ExtendedIterator<com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::isSubject(com.hp.hpl.jena.graph.Node):boolean, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::clear():void, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::dump():java.lang.String, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache::getLead(com.hp.hpl.jena.graph.Node):com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode]
com.hp.hpl.jena.shared.uuid.UUID_V1	[com.hp.hpl.jena.shared.uuid.UUID_V1::long bitsLeastSignificant, com.hp.hpl.jena.shared.uuid.UUID_V1::getClockSequence():long, com.hp.hpl.jena.shared.uuid.UUID_V1::getNode():long]
jena.cmdline.ArgDecl	[jena.cmdline.ArgDecl::java.util.Set<java.lang.String> names, jena.cmdline.ArgDecl::addName(java.lang.String):void, jena.cmdline.ArgDecl::names():java.util.Iterator<java.lang.String>, jena.cmdline.ArgDecl::matches(java.lang.String):boolean, jena.cmdline.ArgDecl::matches(jena.cmdline.Arg):boolean]
com.hp.hpl.jena.graph.impl.GraphMatcher	[com.hp.hpl.jena.graph.impl.GraphMatcher::com.hp.hpl.jena.graph.Graph m, com.hp.hpl.jena.graph.impl.GraphMatcher::match(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Graph):com.hp.hpl.jena.graph.Node[][], com.hp.hpl.jena.graph.impl.GraphMatcher::com.hp.hpl.jena.graph.impl.GraphMatcher other, com.hp.hpl.jena.graph.impl.GraphMatcher::int state, com.hp.hpl.jena.graph.impl.GraphMatcher::check(int):void, com.hp.hpl.jena.graph.impl.GraphMatcher::in(int):void, com.hp.hpl.jena.graph.impl.GraphMatcher::match(com.hp.hpl.jena.graph.impl.GraphMatcher):com.hp.hpl.jena.graph.Node[][], com.hp.hpl.jena.graph.impl.GraphMatcher::java.util.Map<java.lang.Integer,com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket> table, com.hp.hpl.jena.graph.impl.GraphMatcher::scanBuckets():java.util.Iterator<com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket>, com.hp.hpl.jena.graph.impl.GraphMatcher::smallestBucket():com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket, com.hp.hpl.jena.graph.impl.GraphMatcher::matchBucket(com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket):com.hp.hpl.jena.graph.impl.GraphMatcher.Bucket, com.hp.hpl.jena.graph.impl.GraphMatcher::boolean refinableHash, com.hp.hpl.jena.graph.impl.GraphMatcher::bind():boolean, com.hp.hpl.jena.graph.impl.GraphMatcher::obligBindings():java.util.Set<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource>, com.hp.hpl.jena.graph.impl.GraphMatcher::int myHashLevel, com.hp.hpl.jena.graph.impl.GraphMatcher::rehash0(int):int, com.hp.hpl.jena.graph.impl.GraphMatcher::java.util.Set<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource> unboundAnonResources, com.hp.hpl.jena.graph.impl.GraphMatcher::java.util.Set<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource> boundAnonResources, com.hp.hpl.jena.graph.impl.GraphMatcher::unbindAll(java.util.Set<com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource>):void, com.hp.hpl.jena.graph.impl.GraphMatcher::prepare(com.hp.hpl.jena.graph.Graph):int, com.hp.hpl.jena.graph.impl.GraphMatcher::hashCode(com.hp.hpl.jena.graph.Graph):int]
com.hp.hpl.jena.util.Tokenizer	[com.hp.hpl.jena.util.Tokenizer::java.lang.String source, com.hp.hpl.jena.util.Tokenizer::int p, com.hp.hpl.jena.util.Tokenizer::is(java.lang.String):boolean, com.hp.hpl.jena.util.Tokenizer::getNextToken():java.lang.String, com.hp.hpl.jena.util.Tokenizer::java.lang.String delim, com.hp.hpl.jena.util.Tokenizer::java.lang.String literalDelim, com.hp.hpl.jena.util.Tokenizer::nextToken():java.lang.String, com.hp.hpl.jena.util.Tokenizer::boolean returnDelims, com.hp.hpl.jena.util.Tokenizer::int state]
com.hp.hpl.jena.util.Tokenizer	[com.hp.hpl.jena.util.Tokenizer::java.lang.String delim, com.hp.hpl.jena.util.Tokenizer::java.lang.String literalDelim, com.hp.hpl.jena.util.Tokenizer::nextToken():java.lang.String, com.hp.hpl.jena.util.Tokenizer::boolean returnDelims]
com.hp.hpl.jena.n3.N3IndentedWriter	[com.hp.hpl.jena.n3.N3IndentedWriter::java.lang.String lineSeparator, com.hp.hpl.jena.n3.N3IndentedWriter::java.io.Writer writer, com.hp.hpl.jena.n3.N3IndentedWriter::println(java.lang.String):void, com.hp.hpl.jena.n3.N3IndentedWriter::int column, com.hp.hpl.jena.n3.N3IndentedWriter::println():void, com.hp.hpl.jena.n3.N3IndentedWriter::padTo():void, com.hp.hpl.jena.n3.N3IndentedWriter::print(java.lang.String):void, com.hp.hpl.jena.n3.N3IndentedWriter::int row]
com.hp.hpl.jena.shared.wg.TestInputStreamFactory	[com.hp.hpl.jena.shared.wg.TestInputStreamFactory::org.apache.jena.iri.IRIFactory iriFactory, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::openOutput(java.lang.String):java.io.OutputStream, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::fullyOpen(java.lang.String):java.io.InputStream, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::org.apache.jena.iri.IRI base, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::java.util.zip.ZipFile zip, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::java.lang.String property, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::open(org.apache.jena.iri.IRI):java.io.InputStream, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::open(org.apache.jena.iri.IRI, boolean):java.lang.Object]
com.hp.hpl.jena.shared.wg.TestInputStreamFactory	[com.hp.hpl.jena.shared.wg.TestInputStreamFactory::org.apache.jena.iri.IRI base, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::java.util.zip.ZipFile zip, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::java.lang.String property, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::open(org.apache.jena.iri.IRI):java.io.InputStream, com.hp.hpl.jena.shared.wg.TestInputStreamFactory::open(org.apache.jena.iri.IRI, boolean):java.lang.Object]
com.hp.hpl.jena.reasoner.rulesys.Rule	[com.hp.hpl.jena.reasoner.rulesys.Rule::allMonotonic(com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[]):boolean, com.hp.hpl.jena.reasoner.rulesys.Rule::cloneFunctor(com.hp.hpl.jena.reasoner.rulesys.Functor, java.util.Map<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable,com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment):com.hp.hpl.jena.reasoner.rulesys.Functor, com.hp.hpl.jena.reasoner.rulesys.Rule::cloneNode(com.hp.hpl.jena.graph.Node, java.util.Map<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable,com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment):com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.reasoner.rulesys.Rule::findVars(java.lang.Object[], int):int, com.hp.hpl.jena.reasoner.rulesys.Rule::findVars(com.hp.hpl.jena.reasoner.TriplePattern, int):int, com.hp.hpl.jena.reasoner.rulesys.Rule::cloneClause(com.hp.hpl.jena.reasoner.rulesys.ClauseEntry, java.util.Map<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable,com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment):com.hp.hpl.jena.reasoner.rulesys.ClauseEntry, com.hp.hpl.jena.reasoner.rulesys.Rule::findVars(com.hp.hpl.jena.reasoner.rulesys.Functor, int):int, com.hp.hpl.jena.reasoner.rulesys.Rule::maxVarIndex(com.hp.hpl.jena.graph.Node, int):int]
com.hp.hpl.jena.reasoner.rulesys.Rule	[com.hp.hpl.jena.reasoner.rulesys.Rule::allMonotonic(com.hp.hpl.jena.reasoner.rulesys.ClauseEntry[]):boolean, com.hp.hpl.jena.reasoner.rulesys.Rule::cloneFunctor(com.hp.hpl.jena.reasoner.rulesys.Functor, java.util.Map<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable,com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment):com.hp.hpl.jena.reasoner.rulesys.Functor, com.hp.hpl.jena.reasoner.rulesys.Rule::cloneNode(com.hp.hpl.jena.graph.Node, java.util.Map<com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable,com.hp.hpl.jena.graph.Node>, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment):com.hp.hpl.jena.graph.Node]
com.hp.hpl.jena.rdf.arp.StAX2SAX	[com.hp.hpl.jena.rdf.arp.StAX2SAX::emitSE(javax.xml.stream.events.StartElement):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitNS(javax.xml.stream.events.Namespace):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::convertAttrs(java.util.Iterator<javax.xml.stream.events.Attribute>):org.xml.sax.Attributes, com.hp.hpl.jena.rdf.arp.StAX2SAX::qnameToS(javax.xml.namespace.QName):java.lang.String, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitEE(javax.xml.stream.events.EndElement):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitNSGone(javax.xml.stream.events.Namespace):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitPi(javax.xml.stream.events.ProcessingInstruction):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitChars(javax.xml.stream.events.Characters):void]
com.hp.hpl.jena.rdf.arp.StAX2SAX	[com.hp.hpl.jena.rdf.arp.StAX2SAX::emitSE(javax.xml.stream.events.StartElement):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::emitNS(javax.xml.stream.events.Namespace):void, com.hp.hpl.jena.rdf.arp.StAX2SAX::convertAttrs(java.util.Iterator<javax.xml.stream.events.Attribute>):org.xml.sax.Attributes, com.hp.hpl.jena.rdf.arp.StAX2SAX::qnameToS(javax.xml.namespace.QName):java.lang.String]
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame	[com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::com.hp.hpl.jena.graph.Node[] pVars, com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable[] trailVars, com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::com.hp.hpl.jena.graph.Node[] trailValues, com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::int trailLength, com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::preserveState(java.util.List<com.hp.hpl.jena.graph.Node>):void, com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame::restoreState(com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter):void]
com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement	[com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement::com.hp.hpl.jena.graph.impl.GraphMatcher.SomeResource subj, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement::com.hp.hpl.jena.graph.impl.GraphMatcher.SomeResource pred, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement::com.hp.hpl.jena.graph.impl.GraphMatcher.SomeResource obj, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement::myHashCode(com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource):int, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement::contextualEquals(com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonStatement, com.hp.hpl.jena.graph.impl.GraphMatcher.AnonResource):boolean]
jena.schemagen	[jena.schemagen::java.io.PrintStream m_output, jena.schemagen::writeln(int, java.lang.String):void, jena.schemagen::int m_indentStep, jena.schemagen::indentTo(int, java.lang.StringBuffer):int, jena.schemagen::write(int, java.lang.String):void, jena.schemagen::closeOutput():void]
jena.schemagen	[jena.schemagen::java.io.PrintStream m_output, jena.schemagen::writeln(int, java.lang.String):void, jena.schemagen::int m_indentStep, jena.schemagen::indentTo(int, java.lang.StringBuffer):int, jena.schemagen::write(int, java.lang.String):void, jena.schemagen::closeOutput():void, jena.schemagen::java.lang.String m_nl, jena.schemagen::formatComment(java.lang.String):java.lang.String, jena.schemagen::getImports():java.lang.String]
jena.schemagen	[jena.schemagen::java.util.Set<java.lang.String> m_usedNames, jena.schemagen::getValueName(com.hp.hpl.jena.rdf.model.Resource, java.lang.String):java.lang.String, jena.schemagen::getUCValueName(com.hp.hpl.jena.rdf.model.Resource):java.lang.String, jena.schemagen::java.util.Map<com.hp.hpl.jena.rdf.model.Resource,java.lang.String> m_resourcesToNames]
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer	[com.hp.hpl.jena.rdf.arp.impl.AttributeLexer::java.lang.String lang, com.hp.hpl.jena.rdf.arp.impl.AttributeLexer::java.lang.String base, com.hp.hpl.jena.rdf.arp.impl.AttributeLexer::computeXml(com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext):com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext]
com.hp.hpl.jena.reasoner.rulesys.Rule.Parser	[com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::com.hp.hpl.jena.util.Tokenizer stream, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::int literalState, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::nextToken():java.lang.String, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::java.lang.String lookahead, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::peekToken():java.lang.String, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::parseClause():com.hp.hpl.jena.reasoner.rulesys.ClauseEntry, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::doParseRule(boolean):com.hp.hpl.jena.reasoner.rulesys.Rule, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::java.util.List<java.lang.String> priorTokens, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::recentTokens():java.lang.String, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::java.util.Map<java.lang.String,com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable> varMap, com.hp.hpl.jena.reasoner.rulesys.Rule.Parser::getNodeVar(java.lang.String):com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable]
