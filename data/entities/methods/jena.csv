jena.RuleMap.loadRules(map, string)
jena.RuleMap.loadRules(bufferedreader, map)
jena.RuleMap.getName()
jena.RuleMap.getArgLength()
jena.RuleMap.headAction(int, node, rulecontext)
jena.RuleMap.main(string)
jena.rdfcompare.main(string)
jena.rdfcompare.usage()
jena.rdfcompare.read(model, string, string)
jena.turtle.main(string)
jena.turtle.parse(string, string)
jena.turtle.parse(inputstream, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.action(string, string)
jena.rdfcat.main(string)
jena.rdfcat.go(string)
jena.rdfcat.expectInput(string)
jena.rdfcat.getExpectedInput()
jena.rdfcat.setOutput(string)
jena.rdfcat.getCheckedLanguage(string)
jena.rdfcat.makeUnabbreviateMap()
jena.rdfcat.setInclude(boolean)
jena.rdfcat.setRemoveIncludeStatements(boolean)
jena.rdfcat.readInput(string)
jena.rdfcat.getOutputStream()
jena.rdfcat.addIncludes(list, model)
jena.rdfcat.usage()
jena.rdfcat.getURL(rdfnode)
jena.rdfcat.enableRIOTParser()
jena.rdfcat.xendProcessing(string)
jena.rdfcat.handleUnrecognizedArg(string)
jena.rdfcat.ignoreArgument(string)
jena.rdfcat.getItems()
jena.rdfcat.run(rdfcat)
jena.rdfcat.run(rdfcat)
jena.rdfcopy.main(string)
jena.rdfcopy.usage()
jena.rdfcopy.read(model, string, string)
jena.rdfparse.main(string)
jena.rdfparse.runTests(boolean)
jena.rset.main(string)
jena.query.main(string)
jena.query.invokeCmd(string, string)
jena.schemagen.main(string)
jena.schemagen.go(string)
jena.schemagen.go(schemagenoptions)
jena.schemagen.processInput()
jena.schemagen.addIncludes()
jena.schemagen.determineLanguage()
jena.schemagen.selectInput()
jena.schemagen.selectOutput()
jena.schemagen.processHeader()
jena.schemagen.processFooter()
jena.schemagen.setGlobalReplacements()
jena.schemagen.addReplacementPattern(string, string)
jena.schemagen.pop(int)
jena.schemagen.closeOutput()
jena.schemagen.abort(exception, string)
jena.schemagen.usage()
jena.schemagen.substitute(string)
jena.schemagen.indentTo(int, stringbuffer)
jena.schemagen.writeln(int)
jena.schemagen.writeln(int, string)
jena.schemagen.write(int, string)
jena.schemagen.getImports()
jena.schemagen.getClassName()
jena.schemagen.useOntology()
jena.schemagen.noComments()
jena.schemagen.includeSource()
jena.schemagen.asLegalJavaID(boolean, string)
jena.schemagen.writeClassDeclaration()
jena.schemagen.writeClassClose()
jena.schemagen.writeInitialDeclarations()
jena.schemagen.writeModelDeclaration()
jena.schemagen.writeSource()
jena.schemagen.protectQuotes(string)
jena.schemagen.writeOntologyVersionInfo()
jena.schemagen.writeNamespace()
jena.schemagen.determineNamespaceURI()
jena.schemagen.getOptionNamespace()
jena.schemagen.getDefaultPrefixNamespace()
jena.schemagen.getOntologyElementVersionInfo()
jena.schemagen.getOntologyElementNamespace()
jena.schemagen.guessNamespace()
jena.schemagen.countNamespace(map, resource)
jena.schemagen.writeProperties()
jena.schemagen.writeObjectProperties()
jena.schemagen.writeDatatypeProperties()
jena.schemagen.writeAnnotationProperties()
jena.schemagen.writeRDFProperties(boolean)
jena.schemagen.writeClasses()
jena.schemagen.writeOntClasses()
jena.schemagen.writeRDFClasses(statement)
jena.schemagen.writeIndividuals()
jena.schemagen.writeOntIndividuals()
jena.schemagen.writeRDFIndividuals()
jena.schemagen.selectIndividuals()
jena.schemagen.isIncluded(resource)
jena.schemagen.writeValue(resource, string, string, string, string)
jena.schemagen.hasComment(resource)
jena.schemagen.getComment(resource)
jena.schemagen.formatComment(string)
jena.schemagen.filter(resource)
jena.schemagen.getValueName(resource, string)
jena.schemagen.getUCValueName(resource)
jena.schemagen.sorted(extendediterator)
jena.schemagen.sorted(list, rdfnode, rdfnode)
jena.schemagen.hasConfigFileOption()
jena.schemagen.getConfigFileOption()
jena.schemagen.hasRootOption()
jena.schemagen.getRootOption()
jena.schemagen.hasNoCommentsOption()
jena.schemagen.getNoCommentsOption()
jena.schemagen.hasInputOption()
jena.schemagen.getInputOption()
jena.schemagen.hasLangDamlOption()
jena.schemagen.getLangDamlOption()
jena.schemagen.hasLangOwlOption()
jena.schemagen.getLangOwlOption()
jena.schemagen.hasLangRdfsOption()
jena.schemagen.getLangRdfsOption()
jena.schemagen.hasOutputOption()
jena.schemagen.getOutputOption()
jena.schemagen.hasHeaderOption()
jena.schemagen.getHeaderOption()
jena.schemagen.hasFooterOption()
jena.schemagen.getFooterOption()
jena.schemagen.hasMarkerOption()
jena.schemagen.getMarkerOption()
jena.schemagen.hasPackagenameOption()
jena.schemagen.getPackagenameOption()
jena.schemagen.hasOntologyOption()
jena.schemagen.getOntologyOption()
jena.schemagen.hasClassnameOption()
jena.schemagen.getClassnameOption()
jena.schemagen.hasClassdecOption()
jena.schemagen.getClassdecOption()
jena.schemagen.hasNamespaceOption()
jena.schemagen.getNamespaceOption()
jena.schemagen.hasDeclarationsOption()
jena.schemagen.getDeclarationsOption()
jena.schemagen.hasPropertySectionOption()
jena.schemagen.getPropertySectionOption()
jena.schemagen.hasClassSectionOption()
jena.schemagen.getClassSectionOption()
jena.schemagen.hasIndividualsSectionOption()
jena.schemagen.getIndividualsSectionOption()
jena.schemagen.hasNopropertiesOption()
jena.schemagen.hasNoclassesOption()
jena.schemagen.hasNoindividualsOption()
jena.schemagen.hasPropTemplateOption()
jena.schemagen.getPropTemplateOption()
jena.schemagen.hasClassTemplateOption()
jena.schemagen.getClassTemplateOption()
jena.schemagen.hasIndividualTemplateOption()
jena.schemagen.getIndividualTemplateOption()
jena.schemagen.hasUcNamesOption()
jena.schemagen.hasIncludeOption()
jena.schemagen.getIncludeOption()
jena.schemagen.hasClassnameSuffixOption()
jena.schemagen.getClassnameSuffixOption()
jena.schemagen.hasNoheaderOption()
jena.schemagen.hasEncodingOption()
jena.schemagen.getEncodingOption()
jena.schemagen.hasHelpOption()
jena.schemagen.getHelpOption()
jena.schemagen.hasDosOption()
jena.schemagen.hasUseInfOption()
jena.schemagen.hasStrictIndividualsOption()
jena.schemagen.hasIncludeSourceOption()
jena.schemagen.hasNoStrictOption()
jena.schemagen.getConfigModel()
jena.schemagen.getConfigRoot()
jena.schemagen.determineConfigRoot()
jena.schemagen.isTrue(opt)
jena.schemagen.hasValue(opt)
jena.schemagen.getValue(opt)
jena.schemagen.getStringValue(opt)
jena.schemagen.hasResourceValue(opt)
jena.schemagen.getResource(opt)
jena.schemagen.getAllValues(opt)
jena.schemagen.getOpt(opt)
jena.schemagen.hasConfigFileOption()
jena.schemagen.getConfigFileOption()
jena.schemagen.hasRootOption()
jena.schemagen.getRootOption()
jena.schemagen.hasNoCommentsOption()
jena.schemagen.getNoCommentsOption()
jena.schemagen.hasInputOption()
jena.schemagen.getInputOption()
jena.schemagen.hasLangDamlOption()
jena.schemagen.getLangDamlOption()
jena.schemagen.hasLangOwlOption()
jena.schemagen.getLangOwlOption()
jena.schemagen.hasLangRdfsOption()
jena.schemagen.getLangRdfsOption()
jena.schemagen.hasOutputOption()
jena.schemagen.getOutputOption()
jena.schemagen.hasHeaderOption()
jena.schemagen.getHeaderOption()
jena.schemagen.hasFooterOption()
jena.schemagen.getFooterOption()
jena.schemagen.hasMarkerOption()
jena.schemagen.getMarkerOption()
jena.schemagen.hasPackagenameOption()
jena.schemagen.getPackagenameOption()
jena.schemagen.hasOntologyOption()
jena.schemagen.getOntologyOption()
jena.schemagen.hasClassnameOption()
jena.schemagen.getClassnameOption()
jena.schemagen.hasClassdecOption()
jena.schemagen.getClassdecOption()
jena.schemagen.hasNamespaceOption()
jena.schemagen.getNamespaceOption()
jena.schemagen.hasDeclarationsOption()
jena.schemagen.getDeclarationsOption()
jena.schemagen.hasPropertySectionOption()
jena.schemagen.getPropertySectionOption()
jena.schemagen.hasClassSectionOption()
jena.schemagen.getClassSectionOption()
jena.schemagen.hasIndividualsSectionOption()
jena.schemagen.getIndividualsSectionOption()
jena.schemagen.hasNopropertiesOption()
jena.schemagen.hasNoclassesOption()
jena.schemagen.hasNoindividualsOption()
jena.schemagen.hasPropTemplateOption()
jena.schemagen.getPropTemplateOption()
jena.schemagen.hasClassTemplateOption()
jena.schemagen.getClassTemplateOption()
jena.schemagen.hasIndividualTemplateOption()
jena.schemagen.getIndividualTemplateOption()
jena.schemagen.hasUcNamesOption()
jena.schemagen.hasIncludeOption()
jena.schemagen.getIncludeOption()
jena.schemagen.hasClassnameSuffixOption()
jena.schemagen.getClassnameSuffixOption()
jena.schemagen.hasNoheaderOption()
jena.schemagen.hasEncodingOption()
jena.schemagen.getEncodingOption()
jena.schemagen.hasHelpOption()
jena.schemagen.getHelpOption()
jena.schemagen.hasDosOption()
jena.schemagen.hasUseInfOption()
jena.schemagen.hasStrictIndividualsOption()
jena.schemagen.hasIncludeSourceOption()
jena.schemagen.hasNoStrictOption()
jena.schemagen.getDeclarationProperty()
jena.schemagen.getCommandLineForm()
jena.schemagen.isTrue(list, resource)
jena.schemagen.getStringValue(list, resource)
jena.schemagen.getValue(list, resource)
jena.schemagen.hasValue(list, resource)
jena.schemagen.getResource(list, resource)
jena.schemagen.hasResourceValue(list, resource)
jena.schemagen.urlCheck(string)
jena.sparql.main(string)
jena.qtest.main(string)
jena.version.main(string)
jena.cmdline.Arg.setName(string)
jena.cmdline.Arg.setValue(string)
jena.cmdline.Arg.addValue(string)
jena.cmdline.Arg.getName()
jena.cmdline.Arg.getValue()
jena.cmdline.Arg.getValues()
jena.cmdline.Arg.hasValue()
jena.cmdline.Arg.matches(argdecl)
jena.cmdline.CmdLineUtils.readWholeFileAsUTF8(string)
jena.cmdline.CmdLineUtils.setLog4jConfiguration()
jena.cmdline.CmdLineUtils.setLog4jConfiguration(string)
jena.cmdline.CommandLine.setHook(arghandler)
jena.cmdline.CommandLine.setUsage(string)
jena.cmdline.CommandLine.hasArgs()
jena.cmdline.CommandLine.hasItems()
jena.cmdline.CommandLine.args()
jena.cmdline.CommandLine.numArgs()
jena.cmdline.CommandLine.numItems()
jena.cmdline.CommandLine.pushItem(string)
jena.cmdline.CommandLine.isIndirectItem(int)
jena.cmdline.CommandLine.getItem(int)
jena.cmdline.CommandLine.getItem(boolean, int)
jena.cmdline.CommandLine.process(string)
jena.cmdline.CommandLine.ignoreArgument(string)
jena.cmdline.CommandLine.endProcessing(string)
jena.cmdline.CommandLine.handleUnrecognizedArg(string)
jena.cmdline.CommandLine.contains(argdecl)
jena.cmdline.CommandLine.contains(string)
jena.cmdline.CommandLine.hasArg(string)
jena.cmdline.CommandLine.hasArg(argdecl)
jena.cmdline.CommandLine.getArg(argdecl)
jena.cmdline.CommandLine.getArg(string)
jena.cmdline.CommandLine.getValue(argdecl)
jena.cmdline.CommandLine.getValue(string)
jena.cmdline.CommandLine.getValues(argdecl)
jena.cmdline.CommandLine.getValues(string)
jena.cmdline.CommandLine.add(boolean, string)
jena.cmdline.CommandLine.add(boolean, string)
jena.cmdline.CommandLine.add(argdecl)
jena.cmdline.CommandLine.allowItemIndirect()
jena.cmdline.CommandLine.setAllowItemIndirect(boolean)
jena.cmdline.CommandLine.isIgnoreIndirectionMarker()
jena.cmdline.CommandLine.getIndirectionMarker()
jena.cmdline.CommandLine.setIndirectionMarker(string)
jena.cmdline.CommandLine.setIgnoreIndirectionMarker(boolean)
jena.cmdline.CommandLine.trace(string, string)
jena.cmdline.ArgDecl.addName(string)
jena.cmdline.ArgDecl.getNames()
jena.cmdline.ArgDecl.names()
jena.cmdline.ArgDecl.addHook(arghandler)
jena.cmdline.ArgDecl.trigger(arg)
jena.cmdline.ArgDecl.takesValue()
jena.cmdline.ArgDecl.matches(arg)
jena.cmdline.ArgDecl.matches(string)
jena.cmdline.ArgDecl.canonicalForm(string)
com.hp.hpl.jena.JenaRuntime.getMetadata(string, string)
com.hp.hpl.jena.JenaRuntime.setFeature(string)
com.hp.hpl.jena.JenaRuntime.runUnder(string)
com.hp.hpl.jena.JenaRuntime.runNotUnder(string)
com.hp.hpl.jena.JenaRuntime.getLineSeparator()
com.hp.hpl.jena.JenaRuntime.getSystemProperty(string)
com.hp.hpl.jena.JenaRuntime.getSystemProperty(string, string)
com.hp.hpl.jena.assembler.ModelExpansion.withSchema(model, model)
com.hp.hpl.jena.assembler.ModelExpansion.addSubclassesFrom(model, model)
com.hp.hpl.jena.assembler.ModelExpansion.addSubClassClosure(model)
com.hp.hpl.jena.assembler.ModelExpansion.addSuperClasses(model, resource)
com.hp.hpl.jena.assembler.ModelExpansion.addSuperClasses(linkedseq, model)
com.hp.hpl.jena.assembler.ModelExpansion.addSuperClasses(linkedseq, model, model)
com.hp.hpl.jena.assembler.ModelExpansion.selectRootClasses(model, set)
com.hp.hpl.jena.assembler.ModelExpansion.findClassesBySubClassOf(model)
com.hp.hpl.jena.assembler.ModelExpansion.addClasses(set, statement)
com.hp.hpl.jena.assembler.ModelExpansion.addDomainTypes(model, model)
com.hp.hpl.jena.assembler.ModelExpansion.addRangeTypes(model, model)
com.hp.hpl.jena.assembler.ModelExpansion.addSupertypes(model)
com.hp.hpl.jena.assembler.ModelExpansion.addIntersections(model, model)
com.hp.hpl.jena.assembler.ModelExpansion.addIntersections(model, model, statement)
com.hp.hpl.jena.assembler.ModelExpansion.addTypeToAll(resource, set)
com.hp.hpl.jena.assembler.ModelExpansion.equivalentTypes(resource)
com.hp.hpl.jena.assembler.ModelExpansion.removeElementsWithoutType(resource, set)
com.hp.hpl.jena.assembler.ModelExpansion.subjectSet(model, property, rdfnode, resource)
com.hp.hpl.jena.assembler.ModelExpansion.asJavaList(resource)
com.hp.hpl.jena.assembler.ModelExpansion.push(resource)
com.hp.hpl.jena.assembler.ModelExpansion.toString()
com.hp.hpl.jena.assembler.AssemblerHelp.withFullModel(resource)
com.hp.hpl.jena.assembler.AssemblerHelp.fullModel(model)
com.hp.hpl.jena.assembler.AssemblerHelp.fullModel(importmanager, model)
com.hp.hpl.jena.assembler.AssemblerHelp.loadArbitraryClasses(assemblergroup, model)
com.hp.hpl.jena.assembler.AssemblerHelp.loadAssemblerClasses(assemblergroup, model)
com.hp.hpl.jena.assembler.AssemblerHelp.loadAssemblerClass(assemblergroup, statement)
com.hp.hpl.jena.assembler.AssemblerHelp.loadArbitraryClass(assemblergroup, statement)
com.hp.hpl.jena.assembler.AssemblerHelp.loadClassNamedBy(statement)
com.hp.hpl.jena.assembler.AssemblerHelp.runAnyAssemblerConstructor(assemblergroup, class, statement)
com.hp.hpl.jena.assembler.AssemblerHelp.establish(assemblergroup, object, resource)
com.hp.hpl.jena.assembler.AssemblerHelp.getResourcedConstructor(class)
com.hp.hpl.jena.assembler.AssemblerHelp.findSpecificType(resource)
com.hp.hpl.jena.assembler.AssemblerHelp.findSpecificType(resource, resource)
com.hp.hpl.jena.assembler.AssemblerHelp.findSpecificTypes(resource, resource)
com.hp.hpl.jena.assembler.AssemblerHelp.hasNoCompetingSubclass(list, resource)
com.hp.hpl.jena.assembler.AssemblerHelp.getResource(statement)
com.hp.hpl.jena.assembler.AssemblerHelp.getString(statement)
com.hp.hpl.jena.assembler.AssemblerHelp.getString(literal, statement)
com.hp.hpl.jena.assembler.AssemblerHelp.findAssemblerRoots(model)
com.hp.hpl.jena.assembler.AssemblerHelp.findAssemblerRoots(model, resource)
com.hp.hpl.jena.assembler.AssemblerHelp.singleModelRoot(model)
com.hp.hpl.jena.assembler.AssemblerHelp.singleRoot(model, resource)
com.hp.hpl.jena.assembler.BadObjectException.makeMessage(statement)
com.hp.hpl.jena.assembler.BadObjectException.typeOf(rdfnode)
com.hp.hpl.jena.assembler.BadObjectException.getObject()
com.hp.hpl.jena.assembler.Mode.permitCreateNew(resource, string)
com.hp.hpl.jena.assembler.Mode.permitUseExisting(resource, string)
com.hp.hpl.jena.assembler.ImportManager.clear()
com.hp.hpl.jena.assembler.ImportManager.withImports(model)
com.hp.hpl.jena.assembler.ImportManager.withImports(filemanager, model)
com.hp.hpl.jena.assembler.ImportManager.withImports(filemanager, model, set)
com.hp.hpl.jena.assembler.ImportManager.addImportedGraphs(filemanager, multiunion, set, stmtiterator)
com.hp.hpl.jena.assembler.ImportManager.getObjectURI(statement)
com.hp.hpl.jena.assembler.ImportManager.graphFor(filemanager, set, string)
com.hp.hpl.jena.assembler.JA.getURI()
com.hp.hpl.jena.assembler.JA.resource(string)
com.hp.hpl.jena.assembler.JA.property(string)
com.hp.hpl.jena.assembler.JA.getSchema()
com.hp.hpl.jena.assembler.JA.complete(model)
com.hp.hpl.jena.assembler.JA.getSchemaPath()
com.hp.hpl.jena.assembler.RuleSet.create(list)
com.hp.hpl.jena.assembler.RuleSet.create(string)
com.hp.hpl.jena.assembler.RuleSet.getRules()
com.hp.hpl.jena.assembler.RuleSet.hashCode()
com.hp.hpl.jena.assembler.RuleSet.equals(object)
com.hp.hpl.jena.assembler.Content.fill(model)
com.hp.hpl.jena.assembler.Content.isEmpty()
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.addSchema(assembler, reasonerfactory, resource, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.loadSchema(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.loadSchema(assembler, graph, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.addRules(assembler, reasonerfactory, resource, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.getReasoner(resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.getReasonerFactory(resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.getReasonerFactoryByClassName(resource, string)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.createInstance(class, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.resultFromStatic(class, string)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.mustBeReasonerFactory(class, resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.getOptionalClassName(resource)
com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler.getReasonerFactoryByURL(resource, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.map1(statement)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.open(resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.open(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getUniqueResource(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getUniqueLiteral(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getUniqueStatement(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getUnique(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.checkType(resource, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.openModel(mode, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.openModel(resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getRequiredResource(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getRequiredLiteral(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getResource(statement)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getString(statement)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getUniqueString(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.loadClass(resource, string)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.getOptionalClassName(property, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerBase.mustBeJava(string)
com.hp.hpl.jena.assembler.assemblers.LocationMapperAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.DefaultModelAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.DefaultModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.with(t)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.loadContent(assembler, list, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.addIndirectContent(assembler, list, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.addExternalContents(filemanager, list, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.addQuotedContent(list, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.addLiteralContent(list, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.parseAs(resource, string, string)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.parseAsXML(string)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.guessFrom(string)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.getEncoding(resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.newModelContent(model, model)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.objectAsContent(filemanager, statement)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.getModelName(statement)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.getFileManager(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.parseAsN3(string)
com.hp.hpl.jena.assembler.assemblers.ContentAssembler.getFileManager()
com.hp.hpl.jena.assembler.assemblers.ModelSourceAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.InfModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.InfModelAssembler.getBase(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.InfModelAssembler.getReasoner(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.InfModelAssembler.getReasonerFactory(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.createFileModel(boolean, boolean, file, reificationstyle, string)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.getLanguage(file, resource)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.getFileName(resource)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.getBoolean(boolean, property, resource)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.booleanSpelling(string)
com.hp.hpl.jena.assembler.assemblers.FileModelAssembler.getDirectoryName(resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getModelSource(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getLanguage(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getReasonerFactory(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getDocumentManager(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getDefault(resource)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getRequiredOntModelSpecField(string)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.getOntModelSpecField(string)
com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler.isConstant(int)
com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler.graphBaseFind(triplematch)
com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler.getRootModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.UnionModelAssembler.addSubModels(assembler, mode, multiunion, resource)
com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler.getPrefixes(assembler, prefixmapping, resource)
com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler.includePrefixesFor(assembler, prefixmapping, property, resource)
com.hp.hpl.jena.assembler.assemblers.PrefixMappingAssembler.setSimplePrefixes(prefixmapping, resource)
com.hp.hpl.jena.assembler.assemblers.FileManagerAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.FileManagerAssembler.getLocationMapper(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.DocumentManagerAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.DocumentManagerAssembler.getPath(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.DocumentManagerAssembler.getFileManager(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.DocumentManagerAssembler.createDocumentManager()
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.openModel(assembler, content, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.addContent(content, model, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.getReificationStyle(resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.styleFor(resource, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.getPrefixMapping(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.openModel(mode, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.getInitialContent(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.contentFromModel(assembler, model, resource, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.getContent(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.completedClone(model, resource, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.oneLevelClone(resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.transferContentProperties(model, resource, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.copyProperties(map1, property, resource)
com.hp.hpl.jena.assembler.assemblers.ModelAssembler.replaceSubjectMap(model, resource, statement)
com.hp.hpl.jena.assembler.assemblers.MemoryModelAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.MemoryModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.implementWith(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.assemblerFor(resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.openModel(resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.create()
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.copy()
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.equals(object)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.same(frame)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.toString()
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.loadClasses(model)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.implementWith(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.assemblerFor(resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.implementsTypes()
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.openBySpecificType(assembler, mode, resource, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.implementWith(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.AssemblerGroup.assemblerFor(resource)
com.hp.hpl.jena.assembler.assemblers.NamedModelAssembler.getModelName(resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.open(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.createRuleSet(assembler, resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.addRules(assembler, list, resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.addIndirectRules(assembler, list, resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.addExternalRules(list, resource)
com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler.addLiteralRules(list, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelAssembler.openEmptyModel(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelAssembler.addSubModels(assembler, mode, ontmodel, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelAssembler.getSubModels(assembler, mode, resource)
com.hp.hpl.jena.assembler.assemblers.OntModelAssembler.getOntModelSpec(assembler, resource)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.getRoot()
com.hp.hpl.jena.assembler.exceptions.AssemblerException.pushDoing(assemblergroup)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.nice(resource)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.getLabels(resource)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.getIncomingProperty(resource)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.nice(rdfnode)
com.hp.hpl.jena.assembler.exceptions.AssemblerException.getDoing()
com.hp.hpl.jena.assembler.exceptions.AssemblerException.toString()
com.hp.hpl.jena.assembler.exceptions.AssemblerException.frameStrings()
com.hp.hpl.jena.assembler.exceptions.AmbiguousSpecificTypeException.makeMessage(list, resource)
com.hp.hpl.jena.assembler.exceptions.AmbiguousSpecificTypeException.nice(list)
com.hp.hpl.jena.assembler.exceptions.AmbiguousSpecificTypeException.getTypes()
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.constructMessage(class, resource, resource)
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.getClassName(class)
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.getLeafName(string)
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.getPackagePrefix(string)
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.getAssemblerClass()
com.hp.hpl.jena.assembler.exceptions.CannotConstructException.getType()
com.hp.hpl.jena.assembler.exceptions.NoImplementationException.messageFor(assembler, resource, resource)
com.hp.hpl.jena.assembler.exceptions.NoImplementationException.getType()
com.hp.hpl.jena.assembler.exceptions.NoImplementationException.getAssembler()
com.hp.hpl.jena.assembler.exceptions.TransactionAbortedException.makeMessage(resource, throwable)
com.hp.hpl.jena.assembler.exceptions.UnknownStyleException.makeMessage(resource, resource)
com.hp.hpl.jena.assembler.exceptions.UnknownStyleException.getStyle()
com.hp.hpl.jena.assembler.exceptions.CannotHaveRulesException.makeMessage(resource)
com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException.makeMessage(property, resource)
com.hp.hpl.jena.assembler.exceptions.PropertyRequiredException.getProperty()
com.hp.hpl.jena.assembler.exceptions.UnknownEncodingException.makeMessage(resource, string)
com.hp.hpl.jena.assembler.exceptions.UnknownEncodingException.getEncoding()
com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException.getExpectedType()
com.hp.hpl.jena.assembler.exceptions.NotExpectedTypeException.getActualType()
com.hp.hpl.jena.assembler.exceptions.CannotLoadClassException.makeMessage(resource, string)
com.hp.hpl.jena.assembler.exceptions.CannotLoadClassException.getClassName()
com.hp.hpl.jena.assembler.exceptions.UnknownReasonerException.makeMessage(resource, resource)
com.hp.hpl.jena.assembler.exceptions.UnknownReasonerException.getURL()
com.hp.hpl.jena.assembler.exceptions.NotUniqueException.makeMessage(property, resource)
com.hp.hpl.jena.assembler.exceptions.NotUniqueException.getProperty()
com.hp.hpl.jena.util.LocatorZip.open(string)
com.hp.hpl.jena.util.LocatorZip.getZipFileName()
com.hp.hpl.jena.util.LocatorZip.getName()
com.hp.hpl.jena.util.SystemUtils.chooseClassLoader()
com.hp.hpl.jena.util.ModelQueryUtil.queryBindingsWith(domain, model, model, resource)
com.hp.hpl.jena.util.ModelQueryUtil.asRDF(model, node)
com.hp.hpl.jena.util.ModelQueryUtil.mappy(domain, model)
com.hp.hpl.jena.util.LocatorURL.open(string)
com.hp.hpl.jena.util.LocatorURL.equals(object)
com.hp.hpl.jena.util.LocatorURL.hashCode()
com.hp.hpl.jena.util.LocatorURL.getName()
com.hp.hpl.jena.util.LocatorURL.acceptByScheme(string)
com.hp.hpl.jena.util.LocatorURL.hasScheme(string, string)
com.hp.hpl.jena.util.LocatorURL.getScheme(string)
com.hp.hpl.jena.util.OneToManyMap.clear()
com.hp.hpl.jena.util.OneToManyMap.containsKey(object)
com.hp.hpl.jena.util.OneToManyMap.containsValue(object)
com.hp.hpl.jena.util.OneToManyMap.contains(object, object)
com.hp.hpl.jena.util.OneToManyMap.entrySet()
com.hp.hpl.jena.util.OneToManyMap.equals(object)
com.hp.hpl.jena.util.OneToManyMap.get(object)
com.hp.hpl.jena.util.OneToManyMap.getAll(object)
com.hp.hpl.jena.util.OneToManyMap.hashCode()
com.hp.hpl.jena.util.OneToManyMap.isEmpty()
com.hp.hpl.jena.util.OneToManyMap.keySet()
com.hp.hpl.jena.util.OneToManyMap.put(from, to)
com.hp.hpl.jena.util.OneToManyMap.putAll(map)
com.hp.hpl.jena.util.OneToManyMap.remove(object)
com.hp.hpl.jena.util.OneToManyMap.remove(object, object)
com.hp.hpl.jena.util.OneToManyMap.size()
com.hp.hpl.jena.util.OneToManyMap.values()
com.hp.hpl.jena.util.OneToManyMap.toString()
com.hp.hpl.jena.util.OneToManyMap.equals(object)
com.hp.hpl.jena.util.OneToManyMap.getKey()
com.hp.hpl.jena.util.OneToManyMap.getValue()
com.hp.hpl.jena.util.OneToManyMap.setValue(to)
com.hp.hpl.jena.util.OneToManyMap.hashCode()
com.hp.hpl.jena.util.CollectionFactory.createHashedMap()
com.hp.hpl.jena.util.CollectionFactory.createHashedMap(int)
com.hp.hpl.jena.util.CollectionFactory.createHashedMap(map)
com.hp.hpl.jena.util.CollectionFactory.createHashedSet()
com.hp.hpl.jena.util.CollectionFactory.createHashedSet(collection)
com.hp.hpl.jena.util.IteratorCollection.iteratorToSet(iterator)
com.hp.hpl.jena.util.IteratorCollection.iteratorToList(iterator)
com.hp.hpl.jena.util.MonitorGraph.snapshot(list, list)
com.hp.hpl.jena.util.FileUtils.asUTF8(inputstream)
com.hp.hpl.jena.util.FileUtils.asBufferedUTF8(inputstream)
com.hp.hpl.jena.util.FileUtils.asUTF8(outputstream)
com.hp.hpl.jena.util.FileUtils.asPrintWriterUTF8(outputstream)
com.hp.hpl.jena.util.FileUtils.guessLang(string, string)
com.hp.hpl.jena.util.FileUtils.guessLang(string)
com.hp.hpl.jena.util.FileUtils.toFilename(string)
com.hp.hpl.jena.util.FileUtils.decodeFileName(string)
com.hp.hpl.jena.util.FileUtils.toURL(string)
com.hp.hpl.jena.util.FileUtils.encodeFileName(string)
com.hp.hpl.jena.util.FileUtils.isFile(string)
com.hp.hpl.jena.util.FileUtils.isURI(string)
com.hp.hpl.jena.util.FileUtils.getScheme(string)
com.hp.hpl.jena.util.FileUtils.isASCIILetter(char)
com.hp.hpl.jena.util.FileUtils.getDirname(string)
com.hp.hpl.jena.util.FileUtils.getBasename(string)
com.hp.hpl.jena.util.FileUtils.getFilenameExt(string)
com.hp.hpl.jena.util.FileUtils.tempFileName(string, string)
com.hp.hpl.jena.util.FileUtils.getScratchDirectory(string)
com.hp.hpl.jena.util.FileUtils.getTempDirectory()
com.hp.hpl.jena.util.FileUtils.randomNumber()
com.hp.hpl.jena.util.FileUtils.openResourceFile(string)
com.hp.hpl.jena.util.FileUtils.openResourceFileAsStream(string)
com.hp.hpl.jena.util.FileUtils.readerFromURL(string)
com.hp.hpl.jena.util.FileUtils.readWholeFileAsUTF8(string)
com.hp.hpl.jena.util.FileUtils.readWholeFileAsUTF8(inputstream)
com.hp.hpl.jena.util.FileUtils.readWholeFileAsUTF8(reader)
com.hp.hpl.jena.util.CharEncoding.name()
com.hp.hpl.jena.util.CharEncoding.isIANA()
com.hp.hpl.jena.util.CharEncoding.isInNIO()
com.hp.hpl.jena.util.CharEncoding.warningMessage()
com.hp.hpl.jena.util.CharEncoding.isIANA()
com.hp.hpl.jena.util.CharEncoding.isInNIO()
com.hp.hpl.jena.util.CharEncoding.warningMessage()
com.hp.hpl.jena.util.CharEncoding.isIANA()
com.hp.hpl.jena.util.CharEncoding.isInNIO()
com.hp.hpl.jena.util.CharEncoding.warningMessage()
com.hp.hpl.jena.util.CharEncoding.isIANA()
com.hp.hpl.jena.util.CharEncoding.isInNIO()
com.hp.hpl.jena.util.CharEncoding.warningMessage()
com.hp.hpl.jena.util.CharEncoding.create(string)
com.hp.hpl.jena.util.PrintUtil.init()
com.hp.hpl.jena.util.PrintUtil.registerPrefix(string, string)
com.hp.hpl.jena.util.PrintUtil.registerPrefixMap(map)
com.hp.hpl.jena.util.PrintUtil.removePrefix(string)
com.hp.hpl.jena.util.PrintUtil.removePrefixMap(map)
com.hp.hpl.jena.util.PrintUtil.print(node)
com.hp.hpl.jena.util.PrintUtil.print(rdfnode)
com.hp.hpl.jena.util.PrintUtil.print(triple)
com.hp.hpl.jena.util.PrintUtil.print(triplepattern)
com.hp.hpl.jena.util.PrintUtil.print(statement)
com.hp.hpl.jena.util.PrintUtil.print(object)
com.hp.hpl.jena.util.PrintUtil.expandQname(string)
com.hp.hpl.jena.util.PrintUtil.printIndent(int, printwriter)
com.hp.hpl.jena.util.PrintUtil.printOut(iterator)
com.hp.hpl.jena.util.Metadata.addMetadata(string)
com.hp.hpl.jena.util.Metadata.read(properties, string)
com.hp.hpl.jena.util.Metadata.get(string)
com.hp.hpl.jena.util.Metadata.get(string, string)
com.hp.hpl.jena.util.Tokenizer.nextToken()
com.hp.hpl.jena.util.Tokenizer.hasMoreTokens()
com.hp.hpl.jena.util.Tokenizer.getNextToken()
com.hp.hpl.jena.util.Tokenizer.is(string)
com.hp.hpl.jena.util.Tokenizer.main(string)
com.hp.hpl.jena.util.URIref.encode(string)
com.hp.hpl.jena.util.URIref.decode(string)
com.hp.hpl.jena.util.URIref.hexEncode(int)
com.hp.hpl.jena.util.URIref.hexDecode(byte)
com.hp.hpl.jena.util.URIref.main(string)
com.hp.hpl.jena.util.LocatorFile.equals(object)
com.hp.hpl.jena.util.LocatorFile.equals(string, string)
com.hp.hpl.jena.util.LocatorFile.hashCode()
com.hp.hpl.jena.util.LocatorFile.toFile(string)
com.hp.hpl.jena.util.LocatorFile.exists(string)
com.hp.hpl.jena.util.LocatorFile.open(string)
com.hp.hpl.jena.util.LocatorFile.getDir()
com.hp.hpl.jena.util.LocatorFile.getName()
com.hp.hpl.jena.util.QueryMapper.getVariables()
com.hp.hpl.jena.util.QueryMapper.getQuery()
com.hp.hpl.jena.util.QueryMapper.getGraph()
com.hp.hpl.jena.util.QueryMapper.toQueryGraph(model)
com.hp.hpl.jena.util.QueryMapper.toQueryTriple(statement)
com.hp.hpl.jena.util.QueryMapper.toQueryVariables(resource)
com.hp.hpl.jena.util.QueryMapper.toQueryNode(rdfnode)
com.hp.hpl.jena.util.LocatorClassLoader.equals(object)
com.hp.hpl.jena.util.LocatorClassLoader.hashCode()
com.hp.hpl.jena.util.LocatorClassLoader.open(string)
com.hp.hpl.jena.util.LocatorClassLoader.getClassLoader()
com.hp.hpl.jena.util.LocatorClassLoader.getName()
com.hp.hpl.jena.util.ResourceUtils.maximalLowerElements(boolean, collection, property)
com.hp.hpl.jena.util.ResourceUtils.maximalLowerElements(boolean, iterator, property)
com.hp.hpl.jena.util.ResourceUtils.testResourceCovered(boolean, list, property, resource)
com.hp.hpl.jena.util.ResourceUtils.removeEquiv(list, property, resource)
com.hp.hpl.jena.util.ResourceUtils.partition(list, property)
com.hp.hpl.jena.util.ResourceUtils.renameResource(resource, string)
com.hp.hpl.jena.util.ResourceUtils.reachableClosure(resource)
com.hp.hpl.jena.util.FileManager.get()
com.hp.hpl.jena.util.FileManager.setGlobalFileManager(filemanager)
com.hp.hpl.jena.util.FileManager.makeGlobal()
com.hp.hpl.jena.util.FileManager.setStdLocators(filemanager)
com.hp.hpl.jena.util.FileManager.setMapper(locationmapper)
com.hp.hpl.jena.util.FileManager.setLocationMapper(locationmapper)
com.hp.hpl.jena.util.FileManager.getLocationMapper()
com.hp.hpl.jena.util.FileManager.locators()
com.hp.hpl.jena.util.FileManager.addLocator(locator)
com.hp.hpl.jena.util.FileManager.addLocatorFile()
com.hp.hpl.jena.util.FileManager.addLocatorFile(string)
com.hp.hpl.jena.util.FileManager.addLocatorClassLoader(classloader)
com.hp.hpl.jena.util.FileManager.addLocatorURL()
com.hp.hpl.jena.util.FileManager.addLocatorZip(string)
com.hp.hpl.jena.util.FileManager.remove(locator)
com.hp.hpl.jena.util.FileManager.resetCache()
com.hp.hpl.jena.util.FileManager.setModelCaching(boolean)
com.hp.hpl.jena.util.FileManager.getCachingModels()
com.hp.hpl.jena.util.FileManager.getFromCache(string)
com.hp.hpl.jena.util.FileManager.hasCachedModel(string)
com.hp.hpl.jena.util.FileManager.addCacheModel(model, string)
com.hp.hpl.jena.util.FileManager.removeCacheModel(string)
com.hp.hpl.jena.util.FileManager.loadModel(string)
com.hp.hpl.jena.util.FileManager.loadModel(string, string)
com.hp.hpl.jena.util.FileManager.loadModel(string, string, string)
com.hp.hpl.jena.util.FileManager.loadModelWorker(string, string, string)
com.hp.hpl.jena.util.FileManager.readModel(model, string)
com.hp.hpl.jena.util.FileManager.readModel(model, string, string)
com.hp.hpl.jena.util.FileManager.readModel(model, string, string, string)
com.hp.hpl.jena.util.FileManager.readModelWorker(model, string, string, string)
com.hp.hpl.jena.util.FileManager.chooseBaseURI(string)
com.hp.hpl.jena.util.FileManager.open(string)
com.hp.hpl.jena.util.FileManager.remap(string)
com.hp.hpl.jena.util.FileManager.mapURI(string)
com.hp.hpl.jena.util.FileManager.readWholeFileAsUTF8(inputstream)
com.hp.hpl.jena.util.FileManager.readWholeFileAsUTF8(string)
com.hp.hpl.jena.util.FileManager.openNoMap(string)
com.hp.hpl.jena.util.FileManager.openNoMapOrNull(string)
com.hp.hpl.jena.util.TypedStream.getInput()
com.hp.hpl.jena.util.TypedStream.getMimeType()
com.hp.hpl.jena.util.TypedStream.getCharset()
com.hp.hpl.jena.util.LocationMapper.get()
com.hp.hpl.jena.util.LocationMapper.setGlobalLocationMapper(locationmapper)
com.hp.hpl.jena.util.LocationMapper.makeGlobal()
com.hp.hpl.jena.util.LocationMapper.initFromPath(boolean, string)
com.hp.hpl.jena.util.LocationMapper.altMapping(string)
com.hp.hpl.jena.util.LocationMapper.altMapping(string, string)
com.hp.hpl.jena.util.LocationMapper.addAltEntry(string, string)
com.hp.hpl.jena.util.LocationMapper.addAltPrefix(string, string)
com.hp.hpl.jena.util.LocationMapper.listAltEntries()
com.hp.hpl.jena.util.LocationMapper.listAltPrefixes()
com.hp.hpl.jena.util.LocationMapper.removeAltEntry(string)
com.hp.hpl.jena.util.LocationMapper.removeAltPrefix(string)
com.hp.hpl.jena.util.LocationMapper.getAltEntry(string)
com.hp.hpl.jena.util.LocationMapper.getAltPrefix(string)
com.hp.hpl.jena.util.LocationMapper.getGlobalConfigPath()
com.hp.hpl.jena.util.LocationMapper.hashCode()
com.hp.hpl.jena.util.LocationMapper.equals(object)
com.hp.hpl.jena.util.LocationMapper.toString()
com.hp.hpl.jena.util.LocationMapper.toModel()
com.hp.hpl.jena.util.LocationMapper.toModel(model)
com.hp.hpl.jena.util.LocationMapper.processConfig(model)
com.hp.hpl.jena.util.MonitorModel.snapshot(list, list)
com.hp.hpl.jena.util.MonitorModel.snapshot()
com.hp.hpl.jena.util.cache.EnhancedNodeCache.get(object)
com.hp.hpl.jena.util.cache.EnhancedNodeCache.put(object, object)
com.hp.hpl.jena.util.cache.EnhancedNodeCache.hashNode(node)
com.hp.hpl.jena.util.cache.EnhancedNodeCache.getEnabled()
com.hp.hpl.jena.util.cache.EnhancedNodeCache.setEnabled(boolean)
com.hp.hpl.jena.util.cache.EnhancedNodeCache.clear()
com.hp.hpl.jena.util.cache.EnhancedNodeCache.getGets()
com.hp.hpl.jena.util.cache.EnhancedNodeCache.getPuts()
com.hp.hpl.jena.util.cache.EnhancedNodeCache.getHits()
com.hp.hpl.jena.util.cache.CacheManager.createCache(int, string, string)
com.hp.hpl.jena.util.cache.RandCache.get(object)
com.hp.hpl.jena.util.cache.RandCache.put(object, object)
com.hp.hpl.jena.util.cache.RandCache.makeSpace()
com.hp.hpl.jena.util.cache.RandCache.getEnabled()
com.hp.hpl.jena.util.cache.RandCache.setEnabled(boolean)
com.hp.hpl.jena.util.cache.RandCache.clear()
com.hp.hpl.jena.util.cache.RandCache.getHits()
com.hp.hpl.jena.util.cache.RandCache.getGets()
com.hp.hpl.jena.util.cache.RandCache.getPuts()
com.hp.hpl.jena.util.cache.RandCache.forgetStats()
com.hp.hpl.jena.util.iterator.IteratorIterator.hasNext()
com.hp.hpl.jena.util.iterator.IteratorIterator.next()
com.hp.hpl.jena.util.iterator.IteratorIterator.remove()
com.hp.hpl.jena.util.iterator.LateBindingIterator.hasNext()
com.hp.hpl.jena.util.iterator.LateBindingIterator.next()
com.hp.hpl.jena.util.iterator.LateBindingIterator.remove()
com.hp.hpl.jena.util.iterator.LateBindingIterator.lazy()
com.hp.hpl.jena.util.iterator.LateBindingIterator.create()
com.hp.hpl.jena.util.iterator.NiceIterator.close()
com.hp.hpl.jena.util.iterator.NiceIterator.hasNext()
com.hp.hpl.jena.util.iterator.NiceIterator.ensureHasNext()
com.hp.hpl.jena.util.iterator.NiceIterator.next()
com.hp.hpl.jena.util.iterator.NiceIterator.noElements(string)
com.hp.hpl.jena.util.iterator.NiceIterator.remove()
com.hp.hpl.jena.util.iterator.NiceIterator.removeNext()
com.hp.hpl.jena.util.iterator.NiceIterator.andThen(iterator, iterator, iterator)
com.hp.hpl.jena.util.iterator.NiceIterator.andThen(iterator)
com.hp.hpl.jena.util.iterator.NiceIterator.andThen(iterator)
com.hp.hpl.jena.util.iterator.NiceIterator.filterKeep(filter)
com.hp.hpl.jena.util.iterator.NiceIterator.filterDrop(filter)
com.hp.hpl.jena.util.iterator.NiceIterator.mapWith(map1)
com.hp.hpl.jena.util.iterator.NiceIterator.close(iterator)
com.hp.hpl.jena.util.iterator.NiceIterator.emptyIterator()
com.hp.hpl.jena.util.iterator.NiceIterator.toList()
com.hp.hpl.jena.util.iterator.NiceIterator.toSet()
com.hp.hpl.jena.util.iterator.NiceIterator.asSet(extendediterator)
com.hp.hpl.jena.util.iterator.NiceIterator.asList(extendediterator)
com.hp.hpl.jena.util.iterator.ArrayIterator.hasNext()
com.hp.hpl.jena.util.iterator.ArrayIterator.next()
com.hp.hpl.jena.util.iterator.ArrayIterator.remove()
com.hp.hpl.jena.util.iterator.FilterKeepIterator.accept(t)
com.hp.hpl.jena.util.iterator.WrappedIterator.create(iterator)
com.hp.hpl.jena.util.iterator.WrappedIterator.createNoRemove(iterator)
com.hp.hpl.jena.util.iterator.WrappedIterator.forTestingOnly_getBase()
com.hp.hpl.jena.util.iterator.WrappedIterator.hasNext()
com.hp.hpl.jena.util.iterator.WrappedIterator.next()
com.hp.hpl.jena.util.iterator.WrappedIterator.remove()
com.hp.hpl.jena.util.iterator.WrappedIterator.close()
com.hp.hpl.jena.util.iterator.WrappedIterator.close(iterator)
com.hp.hpl.jena.util.iterator.ConcatenatedIterator.hasNext()
com.hp.hpl.jena.util.iterator.ConcatenatedIterator.next()
com.hp.hpl.jena.util.iterator.ConcatenatedIterator.remove()
com.hp.hpl.jena.util.iterator.ConcatenatedIterator.setDefaultValue(x)
com.hp.hpl.jena.util.iterator.ConcatenatedIterator.hasDefaultValue()
com.hp.hpl.jena.util.iterator.FilterDropIterator.accept(t)
com.hp.hpl.jena.util.iterator.EarlyBindingIterator.early(iterator)
com.hp.hpl.jena.util.iterator.SingletonIterator.hasNext()
com.hp.hpl.jena.util.iterator.SingletonIterator.next()
com.hp.hpl.jena.util.iterator.Map1Iterator.next()
com.hp.hpl.jena.util.iterator.Map1Iterator.hasNext()
com.hp.hpl.jena.util.iterator.Map1Iterator.remove()
com.hp.hpl.jena.util.iterator.Map1Iterator.close()
com.hp.hpl.jena.util.iterator.NullIterator.instance()
com.hp.hpl.jena.util.iterator.NullIterator.andThen(iterator)
com.hp.hpl.jena.util.iterator.UniqueExtendedIterator.create(iterator)
com.hp.hpl.jena.util.iterator.UniqueExtendedIterator.nextIfNew()
com.hp.hpl.jena.util.iterator.UniqueExtendedIterator.hasNext()
com.hp.hpl.jena.util.iterator.UniqueExtendedIterator.next()
com.hp.hpl.jena.util.iterator.LazyIterator.hasNext()
com.hp.hpl.jena.util.iterator.LazyIterator.next()
com.hp.hpl.jena.util.iterator.LazyIterator.remove()
com.hp.hpl.jena.util.iterator.LazyIterator.andThen(closableiterator)
com.hp.hpl.jena.util.iterator.LazyIterator.filterKeep(filter)
com.hp.hpl.jena.util.iterator.LazyIterator.filterDrop(filter)
com.hp.hpl.jena.util.iterator.LazyIterator.mapWith(map1)
com.hp.hpl.jena.util.iterator.LazyIterator.close()
com.hp.hpl.jena.util.iterator.LazyIterator.lazy()
com.hp.hpl.jena.util.iterator.LazyIterator.create()
com.hp.hpl.jena.util.iterator.MapFilterIterator.hasNext()
com.hp.hpl.jena.util.iterator.MapFilterIterator.close()
com.hp.hpl.jena.util.iterator.MapFilterIterator.remove()
com.hp.hpl.jena.util.iterator.MapFilterIterator.next()
com.hp.hpl.jena.util.iterator.FilterIterator.hasNext()
com.hp.hpl.jena.util.iterator.FilterIterator.accept(t)
com.hp.hpl.jena.util.iterator.FilterIterator.remove()
com.hp.hpl.jena.util.iterator.FilterIterator.next()
com.hp.hpl.jena.util.iterator.RandomOrderIterator.hasNext()
com.hp.hpl.jena.util.iterator.RandomOrderIterator.next()
com.hp.hpl.jena.util.iterator.RandomOrderIterator.remove()
com.hp.hpl.jena.util.iterator.RandomOrderIterator.fill()
com.hp.hpl.jena.util.iterator.Filter.accept(t)
com.hp.hpl.jena.util.iterator.Filter.filterKeep(iterator)
com.hp.hpl.jena.util.iterator.Filter.and(filter, t)
com.hp.hpl.jena.util.iterator.Filter.isAny()
com.hp.hpl.jena.util.iterator.Filter.isAny()
com.hp.hpl.jena.util.iterator.Filter.accept(object)
com.hp.hpl.jena.util.iterator.Filter.and(filter)
com.hp.hpl.jena.util.iterator.Filter.filterKeep(iterator)
com.hp.hpl.jena.util.iterator.Filter.any(filter, iterator, t)
com.hp.hpl.jena.datatypes.TypeMapper.getInstance()
com.hp.hpl.jena.datatypes.TypeMapper.getSafeTypeByName(string)
com.hp.hpl.jena.datatypes.TypeMapper.getTypeByName(string)
com.hp.hpl.jena.datatypes.TypeMapper.getTypeByValue(object)
com.hp.hpl.jena.datatypes.TypeMapper.listTypes()
com.hp.hpl.jena.datatypes.TypeMapper.getTypeByClass(class)
com.hp.hpl.jena.datatypes.TypeMapper.registerDatatype(rdfdatatype)
com.hp.hpl.jena.datatypes.TypeMapper.main(string)
com.hp.hpl.jena.datatypes.BaseDatatype.getURI()
com.hp.hpl.jena.datatypes.BaseDatatype.equals(object)
com.hp.hpl.jena.datatypes.BaseDatatype.hashCode()
com.hp.hpl.jena.datatypes.BaseDatatype.unparse(object)
com.hp.hpl.jena.datatypes.BaseDatatype.parse(string)
com.hp.hpl.jena.datatypes.BaseDatatype.isValid(string)
com.hp.hpl.jena.datatypes.BaseDatatype.isValidLiteral(literallabel)
com.hp.hpl.jena.datatypes.BaseDatatype.isValidValue(object)
com.hp.hpl.jena.datatypes.BaseDatatype.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.BaseDatatype.isEqualPlain(literallabel, literallabel)
com.hp.hpl.jena.datatypes.BaseDatatype.getHashCode(literallabel)
com.hp.hpl.jena.datatypes.BaseDatatype.langTagCompatible(literallabel, literallabel)
com.hp.hpl.jena.datatypes.BaseDatatype.getJavaClass()
com.hp.hpl.jena.datatypes.BaseDatatype.cannonicalise(object)
com.hp.hpl.jena.datatypes.BaseDatatype.extendedTypeDefinition()
com.hp.hpl.jena.datatypes.BaseDatatype.normalizeSubType(object, rdfdatatype)
com.hp.hpl.jena.datatypes.BaseDatatype.toString()
com.hp.hpl.jena.datatypes.xsd.XSDhexBinary.isValidValue(object)
com.hp.hpl.jena.datatypes.xsd.XSDhexBinary.unparse(object)
com.hp.hpl.jena.datatypes.xsd.XSDhexBinary.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDhexBinary.getHashCode(literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getNarrowedDatatype()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.narrowType(xsddatatype)
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.convertCalendar(calendar)
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.asCalendar()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getYears()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getMonths()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getDays()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getHours()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getMinutes()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getFullSeconds()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getSeconds()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.getTimePart()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.toString()
com.hp.hpl.jena.datatypes.xsd.XSDDateTime.timeLexicalForm()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getYears()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getMonths()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getDays()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getHours()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getMinutes()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getFullSeconds()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getSeconds()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getBigSeconds()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.getTimePart()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.toString()
com.hp.hpl.jena.datatypes.xsd.XSDDuration.compareDates(boolean, int, int)
com.hp.hpl.jena.datatypes.xsd.XSDDuration.compareResults(boolean, short, short)
com.hp.hpl.jena.datatypes.xsd.XSDDuration.addDuration(int, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.compare(abstractdatetime)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.compareTo(abstractdatetime)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.extractFractionalSeconds()
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.equals(object)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.hashCode()
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.compareDates(boolean, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.compareOrder(int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.scale(int, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.normalize(int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.resetDateObj(int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.maxDayInMonthFor(int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.isLeapYear(int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.mod(int, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.fQuotient(int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.modulo(int, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.fQuotient(int, int, int)
com.hp.hpl.jena.datatypes.xsd.AbstractDateTime.cloneDate(int, int)
com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary.isValidValue(object)
com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary.unparse(object)
com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDbase64Binary.getHashCode(literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.parse(string)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.unparse(object)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.getJavaClass()
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.extendedTypeDefinition()
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.loadUserDefined(reader, string, string, typemapper)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.loadUserDefined(string, string, typemapper)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.loadUserDefined(typemapper, xmlinputsource)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.convertValidatedDataValue(validatedinfo)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.suitableInteger(string)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.suitableInteger(long)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.isValidLiteral(literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.isBaseTypeCompatible(literallabel)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.getFoundingType()
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.trimPlus(string)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.loadXSDSimpleTypes(typemapper)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.main(string)
com.hp.hpl.jena.datatypes.xsd.XSDDatatype.getHashCode(byte)
com.hp.hpl.jena.datatypes.xsd.impl.XSDPlainType.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthDayType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDTimeType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDTimeType.unparse(object)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseStringType.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.isValidLiteral(literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.isValidValue(object)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.cannonicalise(object)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.cannonicalizeDecimal(bigdecimal)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.cannonicalizeInteger(biginteger)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.parse(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.checkWhitespace(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDBaseNumericType.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDateType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.getTime(int, int, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.getDate(int, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.getYearMonth(int, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.parseTimeZone(int, int, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.getTimeZone(int, int, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.indexOf(char, int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.isDigit(char)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.getDigit(char)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.findUTCSign(int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.parseInt(int, int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.parseIntYear(int, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.dateToString(int)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.appendFractionalTime(int, int, stringbuffer)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.append(int, int, stringbuffer)
com.hp.hpl.jena.datatypes.xsd.impl.XSDAbstractDateTimeType.normalizeSubType(object, rdfdatatype)
com.hp.hpl.jena.datatypes.xsd.impl.XSDMonthType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDayType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDurationType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat.isValidValue(object)
com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat.parse(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat.checkWhitespace(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDFloat.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDYearMonthType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble.isValidValue(object)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble.parse(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble.checkWhitespace(string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDouble.isEqual(literallabel, literallabel)
com.hp.hpl.jena.datatypes.xsd.impl.XSDDateTimeType.parseValidated(string)
com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType.unparse(object)
com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType.parse(string)
com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType.isValid(aliteral, aresource, aresource, aresource, aresource, aresource, saxparseexception, saxparseexception, saxparseexception, string)
com.hp.hpl.jena.datatypes.xsd.impl.XSDYearType.parseValidated(string)
com.hp.hpl.jena.graph.Node_Fluid.isConcrete()
com.hp.hpl.jena.graph.Node.getType(string)
com.hp.hpl.jena.graph.Node.createAnon()
com.hp.hpl.jena.graph.Node.createAnon(anonid)
com.hp.hpl.jena.graph.Node.createLiteral(literallabel)
com.hp.hpl.jena.graph.Node.createURI(string)
com.hp.hpl.jena.graph.Node.createVariable(string)
com.hp.hpl.jena.graph.Node.createLiteral(string)
com.hp.hpl.jena.graph.Node.createLiteral(boolean, string, string)
com.hp.hpl.jena.graph.Node.createLiteral(rdfdatatype, string, string)
com.hp.hpl.jena.graph.Node.createLiteral(rdfdatatype, string)
com.hp.hpl.jena.graph.Node.createUncachedLiteral(object, rdfdatatype, string)
com.hp.hpl.jena.graph.Node.createUncachedLiteral(object, rdfdatatype)
com.hp.hpl.jena.graph.Node.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node.isConcrete()
com.hp.hpl.jena.graph.Node.isLiteral()
com.hp.hpl.jena.graph.Node.isBlank()
com.hp.hpl.jena.graph.Node.isURI()
com.hp.hpl.jena.graph.Node.isVariable()
com.hp.hpl.jena.graph.Node.getBlankNodeId()
com.hp.hpl.jena.graph.Node.getBlankNodeLabel()
com.hp.hpl.jena.graph.Node.getLiteral()
com.hp.hpl.jena.graph.Node.getLiteralValue()
com.hp.hpl.jena.graph.Node.getLiteralLexicalForm()
com.hp.hpl.jena.graph.Node.getLiteralLanguage()
com.hp.hpl.jena.graph.Node.getLiteralDatatypeURI()
com.hp.hpl.jena.graph.Node.getLiteralDatatype()
com.hp.hpl.jena.graph.Node.getLiteralIsXML()
com.hp.hpl.jena.graph.Node.getIndexingValue()
com.hp.hpl.jena.graph.Node.getURI()
com.hp.hpl.jena.graph.Node.getNameSpace()
com.hp.hpl.jena.graph.Node.getLocalName()
com.hp.hpl.jena.graph.Node.getName()
com.hp.hpl.jena.graph.Node.hasURI(string)
com.hp.hpl.jena.graph.Node.construct(object)
com.hp.hpl.jena.graph.Node.construct(object)
com.hp.hpl.jena.graph.Node.construct(object)
com.hp.hpl.jena.graph.Node.construct(object)
com.hp.hpl.jena.graph.Node.construct(object)
com.hp.hpl.jena.graph.Node.cache(boolean)
com.hp.hpl.jena.graph.Node.isCaching()
com.hp.hpl.jena.graph.Node.create(nodemaker, object)
com.hp.hpl.jena.graph.Node.equals(object)
com.hp.hpl.jena.graph.Node.sameValueAs(object)
com.hp.hpl.jena.graph.Node.hashCode()
com.hp.hpl.jena.graph.Node.matches(node)
com.hp.hpl.jena.graph.Node.toString()
com.hp.hpl.jena.graph.Node.toString(boolean)
com.hp.hpl.jena.graph.Node.toString(prefixmapping)
com.hp.hpl.jena.graph.Node.toString(boolean, prefixmapping)
com.hp.hpl.jena.graph.Node_Literal.getLiteral()
com.hp.hpl.jena.graph.Node_Literal.getLiteralValue()
com.hp.hpl.jena.graph.Node_Literal.getLiteralLexicalForm()
com.hp.hpl.jena.graph.Node_Literal.getLiteralLanguage()
com.hp.hpl.jena.graph.Node_Literal.getLiteralDatatypeURI()
com.hp.hpl.jena.graph.Node_Literal.getLiteralDatatype()
com.hp.hpl.jena.graph.Node_Literal.getLiteralIsXML()
com.hp.hpl.jena.graph.Node_Literal.toString(boolean, prefixmapping)
com.hp.hpl.jena.graph.Node_Literal.isLiteral()
com.hp.hpl.jena.graph.Node_Literal.getIndexingValue()
com.hp.hpl.jena.graph.Node_Literal.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_Literal.equals(object)
com.hp.hpl.jena.graph.Node_Literal.sameValueAs(object)
com.hp.hpl.jena.graph.Node_Literal.matches(node)
com.hp.hpl.jena.graph.TripleMatchFilter.accept(triple)
com.hp.hpl.jena.graph.Node_Blank.isBlank()
com.hp.hpl.jena.graph.Node_Blank.getBlankNodeId()
com.hp.hpl.jena.graph.Node_Blank.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_Blank.equals(object)
com.hp.hpl.jena.graph.Node_URI.getURI()
com.hp.hpl.jena.graph.Node_URI.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_URI.isURI()
com.hp.hpl.jena.graph.Node_URI.toString(boolean, prefixmapping)
com.hp.hpl.jena.graph.Node_URI.equals(object)
com.hp.hpl.jena.graph.Node_URI.same(node_uri)
com.hp.hpl.jena.graph.Node_URI.getNameSpace()
com.hp.hpl.jena.graph.Node_URI.getLocalName()
com.hp.hpl.jena.graph.Node_URI.hasURI(string)
com.hp.hpl.jena.graph.Factory.createDefaultGraph()
com.hp.hpl.jena.graph.Factory.createDefaultGraph(reificationstyle)
com.hp.hpl.jena.graph.Factory.createGraphMem()
com.hp.hpl.jena.graph.Factory.createGraphMem(reificationstyle)
com.hp.hpl.jena.graph.Factory.createGraphMemWithTransactionHandler(transactionhandler)
com.hp.hpl.jena.graph.Node_Concrete.isConcrete()
com.hp.hpl.jena.graph.Node_NULL.equals(object)
com.hp.hpl.jena.graph.Node_NULL.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_NULL.toString()
com.hp.hpl.jena.graph.Node_Variable.getName()
com.hp.hpl.jena.graph.Node_Variable.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_Variable.isVariable()
com.hp.hpl.jena.graph.Node_Variable.toString()
com.hp.hpl.jena.graph.Node_Variable.equals(object)
com.hp.hpl.jena.graph.Node_Variable.variable(string)
com.hp.hpl.jena.graph.Node_Variable.hashCode()
com.hp.hpl.jena.graph.Node_Variable.equals(object)
com.hp.hpl.jena.graph.Node_Variable.toString()
com.hp.hpl.jena.graph.GraphUtil.findAll(graph)
com.hp.hpl.jena.graph.GraphExtract.extract(graph, node)
com.hp.hpl.jena.graph.GraphExtract.extractInto(graph, graph, node)
com.hp.hpl.jena.graph.GraphExtract.extractInto(node)
com.hp.hpl.jena.graph.GraphEvents.getTriple()
com.hp.hpl.jena.graph.GraphEvents.equals(object)
com.hp.hpl.jena.graph.GraphEvents.same(graphevents)
com.hp.hpl.jena.graph.GraphEvents.remove(node, node, node)
com.hp.hpl.jena.graph.GraphEvents.toString()
com.hp.hpl.jena.graph.GraphEvents.getTriple()
com.hp.hpl.jena.graph.GraphEvents.getContent()
com.hp.hpl.jena.graph.GraphEvents.getTitle()
com.hp.hpl.jena.graph.Node_ANY.equals(object)
com.hp.hpl.jena.graph.Node_ANY.visitWith(nodevisitor)
com.hp.hpl.jena.graph.Node_ANY.matches(node)
com.hp.hpl.jena.graph.Node_ANY.toString()
com.hp.hpl.jena.graph.Node_ANY.toString(boolean, prefixmapping)
com.hp.hpl.jena.graph.Triple.toString()
com.hp.hpl.jena.graph.Triple.toString(prefixmapping)
com.hp.hpl.jena.graph.Triple.getSubject()
com.hp.hpl.jena.graph.Triple.getPredicate()
com.hp.hpl.jena.graph.Triple.getObject()
com.hp.hpl.jena.graph.Triple.getMatchSubject()
com.hp.hpl.jena.graph.Triple.map1(triple)
com.hp.hpl.jena.graph.Triple.map1(triple)
com.hp.hpl.jena.graph.Triple.map1(triple)
com.hp.hpl.jena.graph.Triple.getMatchPredicate()
com.hp.hpl.jena.graph.Triple.getMatchObject()
com.hp.hpl.jena.graph.Triple.anyToNull(node)
com.hp.hpl.jena.graph.Triple.nullToAny(node)
com.hp.hpl.jena.graph.Triple.asTriple()
com.hp.hpl.jena.graph.Triple.isConcrete()
com.hp.hpl.jena.graph.Triple.equals(object)
com.hp.hpl.jena.graph.Triple.sameAs(node, node, node)
com.hp.hpl.jena.graph.Triple.matches(triple)
com.hp.hpl.jena.graph.Triple.matches(node, node, node)
com.hp.hpl.jena.graph.Triple.matchedBy(node, node, node)
com.hp.hpl.jena.graph.Triple.subjectMatches(node)
com.hp.hpl.jena.graph.Triple.predicateMatches(node)
com.hp.hpl.jena.graph.Triple.objectMatches(node)
com.hp.hpl.jena.graph.Triple.hashCode()
com.hp.hpl.jena.graph.Triple.hashCode(node, node, node)
com.hp.hpl.jena.graph.Triple.create(node, node, node)
com.hp.hpl.jena.graph.Triple.createMatch(node, node, node)
com.hp.hpl.jena.graph.Triple.getField(triple)
com.hp.hpl.jena.graph.Triple.filterOn(node)
com.hp.hpl.jena.graph.Triple.filterOn(triple)
com.hp.hpl.jena.graph.Triple.getField(triple)
com.hp.hpl.jena.graph.Triple.filterOn(node, triple)
com.hp.hpl.jena.graph.Triple.getField(triple)
com.hp.hpl.jena.graph.Triple.filterOn(node, triple)
com.hp.hpl.jena.graph.Triple.getField(triple)
com.hp.hpl.jena.graph.Triple.filterOn(node, triple)
com.hp.hpl.jena.graph.Util.isReificationPredicate(node)
com.hp.hpl.jena.graph.Util.couldBeStatement(node)
com.hp.hpl.jena.graph.Util.isReificationType(node, node)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentHandler.clashesWith(node, reifierfragmentsmap, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentHandler.clashedWith(node, node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentHandler.reifyIfCompleteQuad(node, node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentHandler.removeFragment(node, triple, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.getFragments(node)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.removeFragments(node)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.clear()
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.putFragments(fragments, node)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.allTriples(fragments, graphadd, node, triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.explodeFragments(fragments, node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.find(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.size()
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.getFragmentHandler(triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.putAugmentedTriple(node, node, simplereifierfragmenthandler, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.reifyCompleteQuad(node, node, simplereifierfragmenthandler, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.removeFragment(node, simplereifierfragmenthandler, triple, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.explode(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.hasFragments(node)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.get(fragments)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.get(fragments)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.get(fragments)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.get(fragments)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.clashesWith(node, reifierfragmentsmap, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.clashesWith(node, reifierfragmentsmap, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.clashesWith(node, reifierfragmentsmap, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.clashesWith(node, reifierfragmentsmap, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierFragmentsMap.makeSelectors()
com.hp.hpl.jena.graph.impl.WrappedGraph.dependsOn(graph)
com.hp.hpl.jena.graph.impl.WrappedGraph.queryHandler()
com.hp.hpl.jena.graph.impl.WrappedGraph.getTransactionHandler()
com.hp.hpl.jena.graph.impl.WrappedGraph.getBulkUpdateHandler()
com.hp.hpl.jena.graph.impl.WrappedGraph.getStatisticsHandler()
com.hp.hpl.jena.graph.impl.WrappedGraph.getCapabilities()
com.hp.hpl.jena.graph.impl.WrappedGraph.getEventManager()
com.hp.hpl.jena.graph.impl.WrappedGraph.getReifier()
com.hp.hpl.jena.graph.impl.WrappedGraph.getPrefixMapping()
com.hp.hpl.jena.graph.impl.WrappedGraph.add(triple)
com.hp.hpl.jena.graph.impl.WrappedGraph.delete(triple)
com.hp.hpl.jena.graph.impl.WrappedGraph.find(triplematch)
com.hp.hpl.jena.graph.impl.WrappedGraph.find(node, node, node)
com.hp.hpl.jena.graph.impl.WrappedGraph.isIsomorphicWith(graph)
com.hp.hpl.jena.graph.impl.WrappedGraph.contains(node, node, node)
com.hp.hpl.jena.graph.impl.WrappedGraph.contains(triple)
com.hp.hpl.jena.graph.impl.WrappedGraph.close()
com.hp.hpl.jena.graph.impl.WrappedGraph.isClosed()
com.hp.hpl.jena.graph.impl.WrappedGraph.isEmpty()
com.hp.hpl.jena.graph.impl.WrappedGraph.size()
com.hp.hpl.jena.graph.impl.WrappedGraph.performAdd(triple)
com.hp.hpl.jena.graph.impl.WrappedGraph.performDelete(triple)
com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler.transactionsSupported()
com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler.begin()
com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler.checkPointName(file)
com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler.abort()
com.hp.hpl.jena.graph.impl.FileGraphTransactionHandler.commit()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.setLiteralLabel_1(rdfdatatype, string, string)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.setWithNewDatatypeForValueClass(object)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.setLiteralLabel_2(object, rdfdatatype, string)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.setLiteralLabel_3(boolean, string, string)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.setValue(string)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.normalize()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.isXML()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.isWellFormed()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.isWellFormedRaw()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.toString(boolean)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.toString()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getLexicalForm()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getIndexingValue()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.language()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getValue()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getDatatype()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getDatatypeURI()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.equals(object)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.sameValueAs(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.areIllFormedLiteralsSameValueAs(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.sameByFormAndLanguage(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.isTypedLiteralSameValueAsOther(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.isPlainLiteralSameValueAsOther(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.looksLikePlainString(literallabel)
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.hashCode()
com.hp.hpl.jena.graph.impl.LiteralLabelImpl.getDefaultHashcode()
com.hp.hpl.jena.graph.impl.TransactionHandlerBase.executeInTransaction(command)
com.hp.hpl.jena.graph.impl.AdhocDatatype.isValidValue(object)
com.hp.hpl.jena.graph.impl.AdhocDatatype.getJavaClass()
com.hp.hpl.jena.graph.impl.AdhocDatatype.parse(string)
com.hp.hpl.jena.graph.impl.AdhocDatatype.toString()
com.hp.hpl.jena.graph.impl.AdhocDatatype.adhocURIfor(class)
com.hp.hpl.jena.graph.impl.WrappedReifier.getStyle()
com.hp.hpl.jena.graph.impl.WrappedReifier.getParentGraph()
com.hp.hpl.jena.graph.impl.WrappedReifier.find(triplematch)
com.hp.hpl.jena.graph.impl.WrappedReifier.findExposed(triplematch)
com.hp.hpl.jena.graph.impl.WrappedReifier.findEither(boolean, triplematch)
com.hp.hpl.jena.graph.impl.WrappedReifier.size()
com.hp.hpl.jena.graph.impl.WrappedReifier.reifyAs(node, triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.hasTriple(node)
com.hp.hpl.jena.graph.impl.WrappedReifier.hasTriple(triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.allNodes()
com.hp.hpl.jena.graph.impl.WrappedReifier.allNodes(triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.remove(node, triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.remove(triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.handledAdd(triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.handledRemove(triple)
com.hp.hpl.jena.graph.impl.WrappedReifier.getTriple(node)
com.hp.hpl.jena.graph.impl.WrappedReifier.close()
com.hp.hpl.jena.graph.impl.Fragments.get(fragments)
com.hp.hpl.jena.graph.impl.Fragments.size()
com.hp.hpl.jena.graph.impl.Fragments.isComplete()
com.hp.hpl.jena.graph.impl.Fragments.isEmpty()
com.hp.hpl.jena.graph.impl.Fragments.remove(node, simplereifierfragmenthandler)
com.hp.hpl.jena.graph.impl.Fragments.add(node, simplereifierfragmenthandler)
com.hp.hpl.jena.graph.impl.Fragments.includeInto(graphadd)
com.hp.hpl.jena.graph.impl.Fragments.includeInto(fragments, graphadd, node)
com.hp.hpl.jena.graph.impl.Fragments.addTriple(triple)
com.hp.hpl.jena.graph.impl.Fragments.asTriple()
com.hp.hpl.jena.graph.impl.Fragments.only(set)
com.hp.hpl.jena.graph.impl.Fragments.toString()
com.hp.hpl.jena.graph.impl.FragmentTripleIterator.hasNext()
com.hp.hpl.jena.graph.impl.FragmentTripleIterator.next()
com.hp.hpl.jena.graph.impl.FragmentTripleIterator.fill(graphadd, node, t)
com.hp.hpl.jena.graph.impl.FragmentTripleIterator.refill()
com.hp.hpl.jena.graph.impl.FragmentTripleIterator.refillFrom(graphadd, map)
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.create()
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.createGraph(boolean, string)
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.openGraph(boolean, string)
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.openGraph()
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.removeGraph(string)
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.hasGraph(string)
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.close()
com.hp.hpl.jena.graph.impl.SimpleGraphMaker.listGraphs()
com.hp.hpl.jena.graph.impl.FileGraph.notifyClosed(file)
com.hp.hpl.jena.graph.impl.FileGraph.notifyClosed(file)
com.hp.hpl.jena.graph.impl.FileGraph.readModel(boolean, model)
com.hp.hpl.jena.graph.impl.FileGraph.readModelFrom(boolean, file, model)
com.hp.hpl.jena.graph.impl.FileGraph.create()
com.hp.hpl.jena.graph.impl.FileGraph.isPlausibleGraphName(string)
com.hp.hpl.jena.graph.impl.FileGraph.close()
com.hp.hpl.jena.graph.impl.FileGraph.delete()
com.hp.hpl.jena.graph.impl.FileGraph.saveContents(file)
com.hp.hpl.jena.graph.impl.FileGraph.updateFrom(file, file)
com.hp.hpl.jena.graph.impl.FileGraph.mustDelete(file)
com.hp.hpl.jena.graph.impl.FileGraph.mustRename(file, file)
com.hp.hpl.jena.graph.impl.FileGraph.getTransactionHandler()
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.getBase()
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.find(triplematch)
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.find(node, node, node)
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.find(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.size()
com.hp.hpl.jena.graph.impl.ReificationWrapperGraph.toString()
com.hp.hpl.jena.graph.impl.SimpleEventManager.register(graphlistener)
com.hp.hpl.jena.graph.impl.SimpleEventManager.unregister(graphlistener)
com.hp.hpl.jena.graph.impl.SimpleEventManager.listening()
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddTriple(graph, triple)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddArray(graph, triple)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddList(graph, list)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddIterator(graph, list)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddIterator(graph, iterator)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyAddGraph(graph, graph)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteTriple(graph, triple)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteArray(graph, triple)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteList(graph, list)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteIterator(graph, list)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteIterator(graph, iterator)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyDeleteGraph(graph, graph)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyEvent(graph, object)
com.hp.hpl.jena.graph.impl.SimpleEventManager.notifyingRemove(graph, iterator)
com.hp.hpl.jena.graph.impl.AllCapabilities.sizeAccurate()
com.hp.hpl.jena.graph.impl.AllCapabilities.addAllowed()
com.hp.hpl.jena.graph.impl.AllCapabilities.addAllowed(boolean)
com.hp.hpl.jena.graph.impl.AllCapabilities.deleteAllowed()
com.hp.hpl.jena.graph.impl.AllCapabilities.deleteAllowed(boolean)
com.hp.hpl.jena.graph.impl.AllCapabilities.canBeEmpty()
com.hp.hpl.jena.graph.impl.AllCapabilities.iteratorRemoveAllowed()
com.hp.hpl.jena.graph.impl.AllCapabilities.findContractSafe()
com.hp.hpl.jena.graph.impl.AllCapabilities.handlesLiteralTyping()
com.hp.hpl.jena.graph.impl.GraphBase.checkOpen()
com.hp.hpl.jena.graph.impl.GraphBase.close()
com.hp.hpl.jena.graph.impl.GraphBase.isClosed()
com.hp.hpl.jena.graph.impl.GraphBase.dependsOn(graph)
com.hp.hpl.jena.graph.impl.GraphBase.queryHandler()
com.hp.hpl.jena.graph.impl.GraphBase.getStatisticsHandler()
com.hp.hpl.jena.graph.impl.GraphBase.createStatisticsHandler()
com.hp.hpl.jena.graph.impl.GraphBase.getEventManager()
com.hp.hpl.jena.graph.impl.GraphBase.notifyAdd(triple)
com.hp.hpl.jena.graph.impl.GraphBase.notifyDelete(triple)
com.hp.hpl.jena.graph.impl.GraphBase.getTransactionHandler()
com.hp.hpl.jena.graph.impl.GraphBase.getBulkUpdateHandler()
com.hp.hpl.jena.graph.impl.GraphBase.getCapabilities()
com.hp.hpl.jena.graph.impl.GraphBase.getPrefixMapping()
com.hp.hpl.jena.graph.impl.GraphBase.add(triple)
com.hp.hpl.jena.graph.impl.GraphBase.performAdd(triple)
com.hp.hpl.jena.graph.impl.GraphBase.delete(triple)
com.hp.hpl.jena.graph.impl.GraphBase.performDelete(triple)
com.hp.hpl.jena.graph.impl.GraphBase.find(triplematch)
com.hp.hpl.jena.graph.impl.GraphBase.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.impl.GraphBase.forTestingOnly_graphBaseFind(triplematch)
com.hp.hpl.jena.graph.impl.GraphBase.find(node, node, node)
com.hp.hpl.jena.graph.impl.GraphBase.graphBaseFind(node, node, node)
com.hp.hpl.jena.graph.impl.GraphBase.contains(triple)
com.hp.hpl.jena.graph.impl.GraphBase.reifierContains(triple)
com.hp.hpl.jena.graph.impl.GraphBase.graphBaseContains(triple)
com.hp.hpl.jena.graph.impl.GraphBase.contains(node, node, node)
com.hp.hpl.jena.graph.impl.GraphBase.containsByFind(triple)
com.hp.hpl.jena.graph.impl.GraphBase.reifierTriples(triplematch)
com.hp.hpl.jena.graph.impl.GraphBase.getReifier()
com.hp.hpl.jena.graph.impl.GraphBase.constructReifier()
com.hp.hpl.jena.graph.impl.GraphBase.size()
com.hp.hpl.jena.graph.impl.GraphBase.reifierSize()
com.hp.hpl.jena.graph.impl.GraphBase.graphBaseSize()
com.hp.hpl.jena.graph.impl.GraphBase.isEmpty()
com.hp.hpl.jena.graph.impl.GraphBase.isIsomorphicWith(graph)
com.hp.hpl.jena.graph.impl.GraphBase.toString()
com.hp.hpl.jena.graph.impl.GraphBase.toString(graph, string)
com.hp.hpl.jena.graph.impl.GraphMatcher.equals(graph, graph)
com.hp.hpl.jena.graph.impl.GraphMatcher.hashCode(graph)
com.hp.hpl.jena.graph.impl.GraphMatcher.match(graph, graph)
com.hp.hpl.jena.graph.impl.GraphMatcher.match(graphmatcher)
com.hp.hpl.jena.graph.impl.GraphMatcher.bind()
com.hp.hpl.jena.graph.impl.GraphMatcher.obligBindings()
com.hp.hpl.jena.graph.impl.GraphMatcher.scanBuckets(bucket)
com.hp.hpl.jena.graph.impl.GraphMatcher.unbindAll(set)
com.hp.hpl.jena.graph.impl.GraphMatcher.prepare(graph)
com.hp.hpl.jena.graph.impl.GraphMatcher.smallestBucket()
com.hp.hpl.jena.graph.impl.GraphMatcher.matchBucket(bucket)
com.hp.hpl.jena.graph.impl.GraphMatcher.rehash(int)
com.hp.hpl.jena.graph.impl.GraphMatcher.rehash0(int)
com.hp.hpl.jena.graph.impl.GraphMatcher.legalPattern(int)
com.hp.hpl.jena.graph.impl.GraphMatcher.varPosInPattern(int, int)
com.hp.hpl.jena.graph.impl.GraphMatcher.myHashCodeFromStatement()
com.hp.hpl.jena.graph.impl.GraphMatcher.mightBeEqual(someresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.toString()
com.hp.hpl.jena.graph.impl.GraphMatcher.myHashCodeFromStatement()
com.hp.hpl.jena.graph.impl.GraphMatcher.mightBeEqual(someresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.count(int, map, someresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.add(someresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.varPos(anonresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.myHashCode(anonresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.contextualEquals(anonresource, anonresource, anonstatement)
com.hp.hpl.jena.graph.impl.GraphMatcher.bind(bucket)
com.hp.hpl.jena.graph.impl.GraphMatcher.bind(anonresource, anonresource, bucket)
com.hp.hpl.jena.graph.impl.GraphMatcher.add(anonresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.aMember()
com.hp.hpl.jena.graph.impl.GraphMatcher.members()
com.hp.hpl.jena.graph.impl.GraphMatcher.size()
com.hp.hpl.jena.graph.impl.GraphMatcher.toString()
com.hp.hpl.jena.graph.impl.GraphMatcher.myHashCodeFromStatement()
com.hp.hpl.jena.graph.impl.GraphMatcher.myHashCode()
com.hp.hpl.jena.graph.impl.GraphMatcher.bind(anonresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.unbind()
com.hp.hpl.jena.graph.impl.GraphMatcher.checkBinding(anonresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.wrapStatements()
com.hp.hpl.jena.graph.impl.GraphMatcher.mightBeEqual(someresource)
com.hp.hpl.jena.graph.impl.GraphMatcher.wrapStatement(anonstatement)
com.hp.hpl.jena.graph.impl.GraphMatcher.equals(object)
com.hp.hpl.jena.graph.impl.GraphMatcher.hashCode()
com.hp.hpl.jena.graph.impl.GraphMatcher.asAnonR()
com.hp.hpl.jena.graph.impl.GraphMatcher.convert(node)
com.hp.hpl.jena.graph.impl.GraphMatcher.check(int)
com.hp.hpl.jena.graph.impl.GraphMatcher.in(int)
com.hp.hpl.jena.graph.impl.GraphMatcher.impossible()
com.hp.hpl.jena.graph.impl.GraphMatcher.trace(boolean, string)
com.hp.hpl.jena.graph.impl.GraphMatcher.traceNL()
com.hp.hpl.jena.graph.impl.FileGraphMaker.getFileBase()
com.hp.hpl.jena.graph.impl.FileGraphMaker.createGraph()
com.hp.hpl.jena.graph.impl.FileGraphMaker.createGraph(boolean, string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.openGraph(boolean, string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.notifyClosed(file)
com.hp.hpl.jena.graph.impl.FileGraphMaker.withRoot(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.toFilename(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.toGraphname(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.removeGraph(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.remember(file, filegraph)
com.hp.hpl.jena.graph.impl.FileGraphMaker.forget(file)
com.hp.hpl.jena.graph.impl.FileGraphMaker.hasGraph(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.close()
com.hp.hpl.jena.graph.impl.FileGraphMaker.deleteFiles(iterator)
com.hp.hpl.jena.graph.impl.FileGraphMaker.map1(string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.graphName(file, string)
com.hp.hpl.jena.graph.impl.FileGraphMaker.listGraphs()
com.hp.hpl.jena.graph.impl.BaseGraphMaker.getReificationStyle()
com.hp.hpl.jena.graph.impl.BaseGraphMaker.getGraph()
com.hp.hpl.jena.graph.impl.BaseGraphMaker.openGraph()
com.hp.hpl.jena.graph.impl.BaseGraphMaker.createGraph()
com.hp.hpl.jena.graph.impl.BaseGraphMaker.createGraph(string)
com.hp.hpl.jena.graph.impl.BaseGraphMaker.openGraph(string)
com.hp.hpl.jena.graph.impl.ReificationWrapper.allNodes()
com.hp.hpl.jena.graph.impl.ReificationWrapper.allNodes(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.close()
com.hp.hpl.jena.graph.impl.ReificationWrapper.find(triplematch)
com.hp.hpl.jena.graph.impl.ReificationWrapper.accept(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.findEither(boolean, triplematch)
com.hp.hpl.jena.graph.impl.ReificationWrapper.findExposed(triplematch)
com.hp.hpl.jena.graph.impl.ReificationWrapper.getParentGraph()
com.hp.hpl.jena.graph.impl.ReificationWrapper.getStyle()
com.hp.hpl.jena.graph.impl.ReificationWrapper.handledAdd(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.handledRemove(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.hasTriple(node)
com.hp.hpl.jena.graph.impl.ReificationWrapper.reifyAs(node, triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.checkQuadElementFree(node, node, node)
com.hp.hpl.jena.graph.impl.ReificationWrapper.remove(node, triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.remove(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.size()
com.hp.hpl.jena.graph.impl.ReificationWrapper.count(extendediterator)
com.hp.hpl.jena.graph.impl.ReificationWrapper.countConcealed()
com.hp.hpl.jena.graph.impl.ReificationWrapper.countQuadlets()
com.hp.hpl.jena.graph.impl.ReificationWrapper.hasTriple(triple)
com.hp.hpl.jena.graph.impl.ReificationWrapper.tripleFromRSPO(domain)
com.hp.hpl.jena.graph.impl.ReificationWrapper.getTriple(node)
com.hp.hpl.jena.graph.impl.ReificationWrapper.quadsQuery(node)
com.hp.hpl.jena.graph.impl.ReificationWrapper.tripleFromSPO(domain)
com.hp.hpl.jena.graph.impl.ReificationWrapper.isReificationTriple(triple)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.add(triple)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.add(list)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.add(iterator)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.add(boolean, graph)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.add(graph)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.delete(triple)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.delete(list)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.delete(iterator)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.delete(graph)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.delete(boolean, graph)
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.removeAll()
com.hp.hpl.jena.graph.impl.WrappedBulkUpdateHandler.remove(node, node, node)
com.hp.hpl.jena.graph.impl.GraphAddList.add(triple)
com.hp.hpl.jena.graph.impl.GraphAddList.size()
com.hp.hpl.jena.graph.impl.GraphAddList.removeLast()
com.hp.hpl.jena.graph.impl.GraphAddList.iterator()
com.hp.hpl.jena.graph.impl.SimpleReifier.getStyle()
com.hp.hpl.jena.graph.impl.SimpleReifier.getParentGraph()
com.hp.hpl.jena.graph.impl.SimpleReifier.getTriple(node)
com.hp.hpl.jena.graph.impl.SimpleReifier.hasTriple(node)
com.hp.hpl.jena.graph.impl.SimpleReifier.allNodes()
com.hp.hpl.jena.graph.impl.SimpleReifier.allNodes(triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.clear()
com.hp.hpl.jena.graph.impl.SimpleReifier.reifyAs(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.reifyNewTriple(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.remove(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.remove(triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.hasTriple(triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.handledAdd(triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.addFragment(reifierfragmenthandler, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.updateFragments(node, node, reifierfragmenthandler, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.handledRemove(triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.removeFragment(reifierfragmenthandler, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.find(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifier.matchesReification(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifier.matchesStatement(node)
com.hp.hpl.jena.graph.impl.SimpleReifier.findExposed(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifier.findEither(boolean, triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifier.size()
com.hp.hpl.jena.graph.impl.SimpleReifier.parentRemoveQuad(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.graphAddQuad(graphadd, node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifier.toString()
com.hp.hpl.jena.graph.impl.SimpleReifier.close()
com.hp.hpl.jena.graph.impl.SimpleReifier.isClosed()
com.hp.hpl.jena.graph.impl.LiteralLabelFactory.createLiteralLabel(rdfdatatype, string, string)
com.hp.hpl.jena.graph.impl.LiteralLabelFactory.create(string, string)
com.hp.hpl.jena.graph.impl.LiteralLabelFactory.create(object, rdfdatatype, string)
com.hp.hpl.jena.graph.impl.LiteralLabelFactory.create(object)
com.hp.hpl.jena.graph.impl.LiteralLabelFactory.create(boolean, string, string)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(triple)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(list)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(boolean, list)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(iterator)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.addIterator(boolean, iterator)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.add(boolean, graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.addReifications(graph, graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.deleteReifications(graph, graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(triple)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(list)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(boolean, list)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(iterator)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.deleteIterator(boolean, iterator)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.triplesOf(graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.delete(boolean, graph)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.removeAll()
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.notifyRemoveAll()
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.remove(node, node, node)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.removeAll(graph, node, node, node)
com.hp.hpl.jena.graph.impl.SimpleBulkUpdateHandler.removeAll(graph)
com.hp.hpl.jena.graph.impl.SimpleTransactionHandler.transactionsSupported()
com.hp.hpl.jena.graph.impl.SimpleTransactionHandler.begin()
com.hp.hpl.jena.graph.impl.SimpleTransactionHandler.abort()
com.hp.hpl.jena.graph.impl.SimpleTransactionHandler.commit()
com.hp.hpl.jena.graph.impl.SimpleTransactionHandler.notSupported()
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.getTriple(node)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.clear()
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.hasTriple(triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.putTriple(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.removeTriple(node)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.removeTriple(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.removeTriple(triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.inverseRemove(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.inversePut(node, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.tagIterator(triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.allTriples(graphadd, node, triple, triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.explodeTriple(node, triple, triple)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.asGraph(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.find(triplematch)
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.size()
com.hp.hpl.jena.graph.impl.SimpleReifierTripleMap.tagIterator()
com.hp.hpl.jena.graph.compose.Union.performAdd(triple)
com.hp.hpl.jena.graph.compose.Union.performDelete(triple)
com.hp.hpl.jena.graph.compose.Union.graphBaseContains(triple)
com.hp.hpl.jena.graph.compose.Union.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.MultiUnion.optimiseOne()
com.hp.hpl.jena.graph.compose.MultiUnion.getReifier()
com.hp.hpl.jena.graph.compose.MultiUnion.createStatisticsHandler()
com.hp.hpl.jena.graph.compose.MultiUnion.performAdd(triple)
com.hp.hpl.jena.graph.compose.MultiUnion.performDelete(triple)
com.hp.hpl.jena.graph.compose.MultiUnion.graphBaseContains(triple)
com.hp.hpl.jena.graph.compose.MultiUnion.queryHandler()
com.hp.hpl.jena.graph.compose.MultiUnion.singleGraphQueryHandler()
com.hp.hpl.jena.graph.compose.MultiUnion.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.MultiUnion.singleGraphFind(triplematch)
com.hp.hpl.jena.graph.compose.MultiUnion.multiGraphFind(triplematch)
com.hp.hpl.jena.graph.compose.MultiUnion.addGraph(graph)
com.hp.hpl.jena.graph.compose.MultiUnion.getStatistic(node, node, node)
com.hp.hpl.jena.graph.compose.MultiUnion.getUnion()
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.equals(prefixmappingimpl)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.sameAs(prefixmappingimpl)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.getBaseMapping()
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.setNsPrefix(string, string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.removeNsPrefix(string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.setNsPrefixes(prefixmapping)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.setNsPrefixes(map)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.getNsPrefixURI(string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.getNsPrefixMap()
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.getNsURIPrefix(string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.expandPrefix(string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.toString()
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.shortForm(string)
com.hp.hpl.jena.graph.compose.PolyadicPrefixMappingImpl.qnameFor(string)
com.hp.hpl.jena.graph.compose.Dyadic.close()
com.hp.hpl.jena.graph.compose.Dyadic.dependsOn(graph)
com.hp.hpl.jena.graph.compose.Dyadic.union(graph)
com.hp.hpl.jena.graph.compose.Dyadic.getL()
com.hp.hpl.jena.graph.compose.Dyadic.getR()
com.hp.hpl.jena.graph.compose.Difference.performAdd(triple)
com.hp.hpl.jena.graph.compose.Difference.performDelete(triple)
com.hp.hpl.jena.graph.compose.Difference.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.CompositionBase.reject(closableiterator, t)
com.hp.hpl.jena.graph.compose.CompositionBase.butNot(closableiterator, closableiterator)
com.hp.hpl.jena.graph.compose.CompositionBase.recording(closableiterator, set)
com.hp.hpl.jena.graph.compose.CompositionBase.rejecting(extendediterator, set, triple)
com.hp.hpl.jena.graph.compose.CompositionBase.rejecting(extendediterator, graph, triple)
com.hp.hpl.jena.graph.compose.CompositionBase.ifIn(closableiterator, t)
com.hp.hpl.jena.graph.compose.CompositionBase.ifIn(graph, triple)
com.hp.hpl.jena.graph.compose.Delta.getAdditions()
com.hp.hpl.jena.graph.compose.Delta.getDeletions()
com.hp.hpl.jena.graph.compose.Delta.performAdd(triple)
com.hp.hpl.jena.graph.compose.Delta.performDelete(triple)
com.hp.hpl.jena.graph.compose.Delta.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.Delta.close()
com.hp.hpl.jena.graph.compose.Delta.graphBaseSize()
com.hp.hpl.jena.graph.compose.Polyadic.getPrefixMapping()
com.hp.hpl.jena.graph.compose.Polyadic.close()
com.hp.hpl.jena.graph.compose.Polyadic.dependsOn(graph)
com.hp.hpl.jena.graph.compose.Polyadic.addGraph(graph)
com.hp.hpl.jena.graph.compose.Polyadic.removeGraph(graph)
com.hp.hpl.jena.graph.compose.Polyadic.getBaseGraph()
com.hp.hpl.jena.graph.compose.Polyadic.getRequiredBaseGraph()
com.hp.hpl.jena.graph.compose.Polyadic.setBaseGraph(graph)
com.hp.hpl.jena.graph.compose.Polyadic.getSubGraphs()
com.hp.hpl.jena.graph.compose.Polyadic.getBulkUpdateHandler()
com.hp.hpl.jena.graph.compose.Polyadic.getTransactionHandler()
com.hp.hpl.jena.graph.compose.Polyadic.getCapabilities()
com.hp.hpl.jena.graph.compose.Intersection.performAdd(triple)
com.hp.hpl.jena.graph.compose.Intersection.performDelete(triple)
com.hp.hpl.jena.graph.compose.Intersection.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.DisjointUnion.graphBaseFind(triplematch)
com.hp.hpl.jena.graph.compose.DisjointUnion.graphBaseContains(triple)
com.hp.hpl.jena.graph.compose.DisjointUnion.performDelete(triple)
com.hp.hpl.jena.graph.compose.DisjointUnion.performAdd(triple)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.QueryNode.isFrozen()
com.hp.hpl.jena.graph.query.QueryNode.finder(domain)
com.hp.hpl.jena.graph.query.QueryNode.mustMatch()
com.hp.hpl.jena.graph.query.QueryNode.match(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.classify(mapping, node, querynodefactory, set)
com.hp.hpl.jena.graph.query.QueryNode.finder(domain)
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.QueryNode.mustMatch()
com.hp.hpl.jena.graph.query.QueryNode.isFrozen()
com.hp.hpl.jena.graph.query.QueryNode.match(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.QueryNode.mustMatch()
com.hp.hpl.jena.graph.query.QueryNode.isFrozen()
com.hp.hpl.jena.graph.query.QueryNode.match(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.QueryNode.finder(domain)
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.QueryNode.matchOrBind(domain, node)
com.hp.hpl.jena.graph.query.QueryNode.toString()
com.hp.hpl.jena.graph.query.SimpleQueryEngine.asNamedTripleBunches(list)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.getVariableCount()
com.hp.hpl.jena.graph.query.SimpleQueryEngine.executeBindings(list, namedgraphmap, node)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.filter(stage)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.cons(object, triple)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.size(cons)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.addStages(arraylist, mapping, namedgraphmap)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.sortTriples(triple)
com.hp.hpl.jena.graph.query.SimpleQueryEngine.connectStages(arraylist, int)
com.hp.hpl.jena.graph.query.QueryTriple.toString()
com.hp.hpl.jena.graph.query.QueryTriple.classify(mapping, querynodefactory, triple)
com.hp.hpl.jena.graph.query.QueryTriple.classify(mapping, querynodefactory, triple)
com.hp.hpl.jena.graph.query.QueryTriple.createApplyer(graph)
com.hp.hpl.jena.graph.query.QueryTriple.createMatcher(domain, domain, domain, domain, domain, domain, domain, triple, triple, triple, triple, triple, triple, triple)
com.hp.hpl.jena.graph.query.QueryTriple.find(domain)
com.hp.hpl.jena.graph.query.QueryTriple.applyToTriples(domain, matcher, stageelement)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.sort(triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.sort()
com.hp.hpl.jena.graph.query.SimpleTripleSorter.accept(triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.findLightest(list)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.findMostBinding(list)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bindingCount(triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bindingCount(triple, triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bindingCount(node, triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bc(node, node)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bind(triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.bind(node)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.weight(triple)
com.hp.hpl.jena.graph.query.SimpleTripleSorter.weight(node)
com.hp.hpl.jena.graph.query.Element.getIndex()
com.hp.hpl.jena.graph.query.Element.match(domain, node)
com.hp.hpl.jena.graph.query.Element.asNodeMatch(domain)
com.hp.hpl.jena.graph.query.Element.toString()
com.hp.hpl.jena.graph.query.Element.match(domain, node)
com.hp.hpl.jena.graph.query.Element.asNodeMatch(domain)
com.hp.hpl.jena.graph.query.Element.toString()
com.hp.hpl.jena.graph.query.Matcher.match(domain, triple)
com.hp.hpl.jena.graph.query.Matcher.match(domain, triple)
com.hp.hpl.jena.graph.query.Stage.initial(int)
com.hp.hpl.jena.graph.query.Stage.connectFrom(stage)
com.hp.hpl.jena.graph.query.Stage.isClosed()
com.hp.hpl.jena.graph.query.Stage.markClosed()
com.hp.hpl.jena.graph.query.Stage.close()
com.hp.hpl.jena.graph.query.Stage.deliver(pipe)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createAny()
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createFixed(node)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createBind(int, node)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createJustBound(int, node)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createBound(int, node)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createTriple(querynode, querynode, querynode)
com.hp.hpl.jena.graph.query.QueryNodeFactoryBase.createArray(int)
com.hp.hpl.jena.graph.query.Util.union(set, set)
com.hp.hpl.jena.graph.query.Util.variablesOf(triple)
com.hp.hpl.jena.graph.query.Util.addIfVariable(node, set)
com.hp.hpl.jena.graph.query.SlotValuator.evalObject(indexvalues)
com.hp.hpl.jena.graph.query.SlotValuator.evalBool(indexvalues)
com.hp.hpl.jena.graph.query.GuardArranger.makeBoundVariables(triple)
com.hp.hpl.jena.graph.query.GuardArranger.makeGuards(expressionset, mapping)
com.hp.hpl.jena.graph.query.GuardArranger.makeGuards(expressionset, int, mapping)
com.hp.hpl.jena.graph.query.GuardArranger.plantWhereFullyBound(expression, iterator, mapping, valuatorset)
com.hp.hpl.jena.graph.query.GuardArranger.canEval(expression, int)
com.hp.hpl.jena.graph.query.Pattern.asTripleMatch(domain)
com.hp.hpl.jena.graph.query.Pattern.match(domain, triple)
com.hp.hpl.jena.graph.query.Pattern.toString()
com.hp.hpl.jena.graph.query.Bind.match(domain, node)
com.hp.hpl.jena.graph.query.Bind.asNodeMatch(domain)
com.hp.hpl.jena.graph.query.Bind.toString()
com.hp.hpl.jena.graph.query.Dyadic.argCount()
com.hp.hpl.jena.graph.query.Dyadic.getArg(int)
com.hp.hpl.jena.graph.query.Dyadic.getFun()
com.hp.hpl.jena.graph.query.Dyadic.evalObject(object, object)
com.hp.hpl.jena.graph.query.Dyadic.evalBool(object, object)
com.hp.hpl.jena.graph.query.Dyadic.prepare(indexvalues, indexvalues, variableindexes)
com.hp.hpl.jena.graph.query.Dyadic.toString()
com.hp.hpl.jena.graph.query.Dyadic.and(expression, expression, object, object)
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.executeTree()
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.findFromTriple(graph, triple)
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.asPattern(node)
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.handleRoot(graph, node, set)
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.absorb(graph, set)
com.hp.hpl.jena.graph.query.SimpleTreeQueryPlan.getRoots(graph)
com.hp.hpl.jena.graph.query.BufferPipe.getCause()
com.hp.hpl.jena.graph.query.BufferPipe.fetch()
com.hp.hpl.jena.graph.query.BufferPipe.putAny(object)
com.hp.hpl.jena.graph.query.BufferPipe.put(domain)
com.hp.hpl.jena.graph.query.BufferPipe.close()
com.hp.hpl.jena.graph.query.BufferPipe.close(exception)
com.hp.hpl.jena.graph.query.BufferPipe.hasNext()
com.hp.hpl.jena.graph.query.BufferPipe.get()
com.hp.hpl.jena.graph.query.FixedValuator.evalBool(indexvalues)
com.hp.hpl.jena.graph.query.FixedValuator.evalObject(indexvalues)
com.hp.hpl.jena.graph.query.SimpleQueryPlan.executeBindings()
com.hp.hpl.jena.graph.query.Mapping.preDeclare(node)
com.hp.hpl.jena.graph.query.Mapping.indexOf(node)
com.hp.hpl.jena.graph.query.Mapping.indexOf(string)
com.hp.hpl.jena.graph.query.Mapping.lookUp(node)
com.hp.hpl.jena.graph.query.Mapping.newIndex(node)
com.hp.hpl.jena.graph.query.Mapping.size()
com.hp.hpl.jena.graph.query.Mapping.hasBound(node)
com.hp.hpl.jena.graph.query.Mapping.toString()
com.hp.hpl.jena.graph.query.InitialStage.close()
com.hp.hpl.jena.graph.query.InitialStage.deliver(pipe)
com.hp.hpl.jena.graph.query.Base.isVariable()
com.hp.hpl.jena.graph.query.Base.isApply()
com.hp.hpl.jena.graph.query.Base.isConstant()
com.hp.hpl.jena.graph.query.Base.getName()
com.hp.hpl.jena.graph.query.Base.getValue()
com.hp.hpl.jena.graph.query.Base.argCount()
com.hp.hpl.jena.graph.query.Base.getFun()
com.hp.hpl.jena.graph.query.Base.getArg(int)
com.hp.hpl.jena.graph.query.Base.equals(object)
com.hp.hpl.jena.graph.query.Constant.isConstant()
com.hp.hpl.jena.graph.query.Constant.getValue()
com.hp.hpl.jena.graph.query.Fixed.getValue()
com.hp.hpl.jena.graph.query.Fixed.prepare(variableindexes)
com.hp.hpl.jena.graph.query.Fixed.toString()
com.hp.hpl.jena.graph.query.Variable.isVariable()
com.hp.hpl.jena.graph.query.Variable.getName()
com.hp.hpl.jena.graph.query.Application.isApply()
com.hp.hpl.jena.graph.query.Application.argCount()
com.hp.hpl.jena.graph.query.Application.getFun()
com.hp.hpl.jena.graph.query.Application.getArg(int)
com.hp.hpl.jena.graph.query.Util.variablesOf(expression)
com.hp.hpl.jena.graph.query.Util.addVariablesOf(expression, set)
com.hp.hpl.jena.graph.query.Util.containsAllVariablesOf(expression, set)
com.hp.hpl.jena.graph.query.Util.equals(expression, expression)
com.hp.hpl.jena.graph.query.Util.sameApply(expression, expression)
com.hp.hpl.jena.graph.query.Util.sameArgs(expression, expression)
com.hp.hpl.jena.graph.query.Valof.get(string)
com.hp.hpl.jena.graph.query.Valof.setDomain(indexvalues)
com.hp.hpl.jena.graph.query.BoolConstant.isConstant()
com.hp.hpl.jena.graph.query.BoolConstant.getValue()
com.hp.hpl.jena.graph.query.BoolConstant.prepare(variableindexes)
com.hp.hpl.jena.graph.query.BoolConstant.evalBool(variablevalues)
com.hp.hpl.jena.graph.query.BoolConstant.evalBool(indexvalues)
com.hp.hpl.jena.graph.query.BoolConstant.evalObject(indexvalues)
com.hp.hpl.jena.graph.query.ConstraintStage.evalConstraint(domain, valuatorset)
com.hp.hpl.jena.graph.query.ConstraintStage.deliver(pipe)
com.hp.hpl.jena.graph.query.NamedTripleBunches.add(string, triple)
com.hp.hpl.jena.graph.query.NamedTripleBunches.entrySetIterator()
com.hp.hpl.jena.graph.query.GraphQuery.addMatch(node, node, node)
com.hp.hpl.jena.graph.query.GraphQuery.addMatch(triple)
com.hp.hpl.jena.graph.query.GraphQuery.addNamedMatch(node, node, node, string)
com.hp.hpl.jena.graph.query.GraphQuery.getPattern()
com.hp.hpl.jena.graph.query.GraphQuery.getConstraints()
com.hp.hpl.jena.graph.query.GraphQuery.addConstraint(expression)
com.hp.hpl.jena.graph.query.GraphQuery.addMatches(graph)
com.hp.hpl.jena.graph.query.GraphQuery.executeBindings(graph, node)
com.hp.hpl.jena.graph.query.GraphQuery.executeBindings(graph, list, node)
com.hp.hpl.jena.graph.query.GraphQuery.executeBindings(namedgraphmap, node)
com.hp.hpl.jena.graph.query.GraphQuery.executeBindings(list, namedgraphmap, node)
com.hp.hpl.jena.graph.query.GraphQuery.args()
com.hp.hpl.jena.graph.query.GraphQuery.getSorter()
com.hp.hpl.jena.graph.query.GraphQuery.setTripleSorter(triplesorter)
com.hp.hpl.jena.graph.query.GraphQuery.getVariableCount()
com.hp.hpl.jena.graph.query.Applyer.applyToTriples(domain, matcher, stageelement)
com.hp.hpl.jena.graph.query.Applyer.applyToTriples(domain, matcher, stageelement)
com.hp.hpl.jena.graph.query.PatternStageCompiler.compile(mapping, patterncompiler, triple)
com.hp.hpl.jena.graph.query.PatternStageCompiler.compile(mapping, patterncompiler, triple)
com.hp.hpl.jena.graph.query.PatternStageCompiler.compile(mapping, node, patterncompiler)
com.hp.hpl.jena.graph.query.PatternStageCompiler.fixed(node)
com.hp.hpl.jena.graph.query.PatternStageCompiler.bound(int, node)
com.hp.hpl.jena.graph.query.PatternStageCompiler.bind(int, node)
com.hp.hpl.jena.graph.query.PatternStageCompiler.any()
com.hp.hpl.jena.graph.query.Fixed.match(domain, node)
com.hp.hpl.jena.graph.query.Fixed.asNodeMatch(domain)
com.hp.hpl.jena.graph.query.Fixed.toString()
com.hp.hpl.jena.graph.query.PatternStageBase.run(pipe, pipe, stageelement)
com.hp.hpl.jena.graph.query.PatternStageBase.put(work)
com.hp.hpl.jena.graph.query.PatternStageBase.get()
com.hp.hpl.jena.graph.query.PatternStageBase.run()
com.hp.hpl.jena.graph.query.PatternStageBase.run()
com.hp.hpl.jena.graph.query.PatternStageBase.deliver(pipe)
com.hp.hpl.jena.graph.query.PatternStageBase.addToAvailableThreads(patternstagethread)
com.hp.hpl.jena.graph.query.PatternStageBase.getAvailableThread()
com.hp.hpl.jena.graph.query.PatternStageBase.makeStageElementChain(int, pipe)
com.hp.hpl.jena.graph.query.PatternStageBase.makeFinalStageElement(pipe)
com.hp.hpl.jena.graph.query.PatternStageBase.makeIntermediateStageElement(int, pipe)
com.hp.hpl.jena.graph.query.PatternStageBase.makeNextStageElement(int, pipe)
com.hp.hpl.jena.graph.query.PatternStageBase.makeFindStageElement(int, stageelement)
com.hp.hpl.jena.graph.query.ExpressionSet.add(expression)
com.hp.hpl.jena.graph.query.ExpressionSet.isComplex()
com.hp.hpl.jena.graph.query.ExpressionSet.prepare(variableindexes)
com.hp.hpl.jena.graph.query.ExpressionSet.iterator()
com.hp.hpl.jena.graph.query.ExpressionSet.toString()
com.hp.hpl.jena.graph.query.Bound.match(domain, node)
com.hp.hpl.jena.graph.query.Bound.asNodeMatch(domain)
com.hp.hpl.jena.graph.query.Bound.toString()
com.hp.hpl.jena.graph.query.NamedGraphMap.put(graph, string)
com.hp.hpl.jena.graph.query.NamedGraphMap.get(string)
com.hp.hpl.jena.graph.query.ValuatorSet.isNonTrivial()
com.hp.hpl.jena.graph.query.ValuatorSet.add(valuator)
com.hp.hpl.jena.graph.query.ValuatorSet.evalBool(indexvalues)
com.hp.hpl.jena.graph.query.Rewrite.rewriteStringMatch(expression)
com.hp.hpl.jena.graph.query.Rewrite.front(string)
com.hp.hpl.jena.graph.query.Rewrite.getPattern(expression)
com.hp.hpl.jena.graph.query.Rewrite.evalBool(object, object)
com.hp.hpl.jena.graph.query.Rewrite.nodeAsString(object)
com.hp.hpl.jena.graph.query.Rewrite.evalBool(string, string)
com.hp.hpl.jena.graph.query.Rewrite.endsWith(expression, string, string, string, string, string, string)
com.hp.hpl.jena.graph.query.Rewrite.startsWith(expression, string, string, string, string, string, string)
com.hp.hpl.jena.graph.query.Rewrite.contains(expression, string, string, string, string, string, string)
com.hp.hpl.jena.graph.query.Rewrite.notSpecial(string)
com.hp.hpl.jena.graph.query.Rewrite.isContains(patternliteral)
com.hp.hpl.jena.graph.query.Rewrite.iOnly(string)
com.hp.hpl.jena.graph.query.Rewrite.isStartsWith(patternliteral)
com.hp.hpl.jena.graph.query.Rewrite.isEndsWith(patternliteral)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.patternStage(expressionset, mapping, triple)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.prepareBindings(graphquery, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.prepareTree(graph)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.objectsFor(node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.subjectsFor(node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.predicatesFor(node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.objectsFor(graph, node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.subjectsFor(graph, node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.predicatesFor(graph, node, node)
com.hp.hpl.jena.graph.query.SimpleQueryHandler.containsNode(node)
com.hp.hpl.jena.graph.query.StageElement.run(domain)
com.hp.hpl.jena.graph.query.StageElement.run(domain)
com.hp.hpl.jena.graph.query.StageElement.run(domain)
com.hp.hpl.jena.graph.query.StageElement.run(domain)
com.hp.hpl.jena.graph.query.Domain.size()
com.hp.hpl.jena.graph.query.Domain.get(int)
com.hp.hpl.jena.graph.query.Domain.setElement(int, node)
com.hp.hpl.jena.graph.query.Domain.getElement(int)
com.hp.hpl.jena.graph.query.Domain.copy()
com.hp.hpl.jena.graph.query.Domain.equals(object)
com.hp.hpl.jena.graph.query.Domain.toString()
com.hp.hpl.jena.graph.query.regexptrees.Paren.getOperand()
com.hp.hpl.jena.graph.query.regexptrees.Paren.getIndex()
com.hp.hpl.jena.graph.query.regexptrees.Paren.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Paren.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Paren.toString()
com.hp.hpl.jena.graph.query.regexptrees.BackReference.getIndex()
com.hp.hpl.jena.graph.query.regexptrees.BackReference.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.BackReference.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.BackReference.toString()
com.hp.hpl.jena.graph.query.regexptrees.MultiOperandTree.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.MultiOperandTree.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.MultiOperandTree.toString(string)
com.hp.hpl.jena.graph.query.regexptrees.MultiOperandTree.sameOperands(multioperandtree)
com.hp.hpl.jena.graph.query.regexptrees.MultiOperandTree.hashCode(int)
com.hp.hpl.jena.graph.query.regexptrees.NoneOf.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.NoneOf.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.NoneOf.toString()
com.hp.hpl.jena.graph.query.regexptrees.Text.create(string)
com.hp.hpl.jena.graph.query.regexptrees.Text.create(char)
com.hp.hpl.jena.graph.query.regexptrees.Text.getString()
com.hp.hpl.jena.graph.query.regexptrees.Text.toString()
com.hp.hpl.jena.graph.query.regexptrees.Text.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Text.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Text.getString()
com.hp.hpl.jena.graph.query.regexptrees.Text.toString()
com.hp.hpl.jena.graph.query.regexptrees.Text.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Text.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Text.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Text.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Text.getString()
com.hp.hpl.jena.graph.query.regexptrees.Sequence.create(list)
com.hp.hpl.jena.graph.query.regexptrees.Sequence.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Sequence.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Sequence.toString()
com.hp.hpl.jena.graph.query.regexptrees.Optional.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Optional.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Optional.toString()
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getAnySingle()
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getStartOfLine()
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getEndOfLine()
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getNothing()
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getText(char)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getZeroOrMore(regexptree)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getOneOrMore(regexptree)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getOptional(regexptree)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getSequence(list)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getAlternatives(list)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getBackReference(int)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getClass(boolean, string)
com.hp.hpl.jena.graph.query.regexptrees.SimpleGenerator.getParen(int, regexptree)
com.hp.hpl.jena.graph.query.regexptrees.EndOfLine.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.EndOfLine.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.EndOfLine.toString()
com.hp.hpl.jena.graph.query.regexptrees.Nothing.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Nothing.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Nothing.toString()
com.hp.hpl.jena.graph.query.regexptrees.AnySingle.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.AnySingle.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.AnySingle.toString()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parse(string)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parse(regexptreegenerator, string)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.getString()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.getPointer()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.nextChar()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseAtom()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseClass()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.nextClassChar()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseClassNegation()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseParens()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseBackslash()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.control(char)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.hexEscape()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.deHex(char)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.backReferenceOrOctalChar(char)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.numeric(char, int, int)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseQuantifier(regexptree)
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseElement()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseSeq()
com.hp.hpl.jena.graph.query.regexptrees.PerlPatternParser.parseAlts()
com.hp.hpl.jena.graph.query.regexptrees.OneOrMore.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.OneOrMore.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.OneOrMore.toString()
com.hp.hpl.jena.graph.query.regexptrees.RegexpTree.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.RegexpTree.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.RegexpTree.toString()
com.hp.hpl.jena.graph.query.regexptrees.ZeroOrMore.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.ZeroOrMore.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.ZeroOrMore.toString()
com.hp.hpl.jena.graph.query.regexptrees.StartOfLine.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.StartOfLine.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.StartOfLine.toString()
com.hp.hpl.jena.graph.query.regexptrees.AnyOf.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.AnyOf.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.AnyOf.toString()
com.hp.hpl.jena.graph.query.regexptrees.Repeated.getOperand()
com.hp.hpl.jena.graph.query.regexptrees.Alternatives.create(list)
com.hp.hpl.jena.graph.query.regexptrees.Alternatives.equals(object)
com.hp.hpl.jena.graph.query.regexptrees.Alternatives.hashCode()
com.hp.hpl.jena.graph.query.regexptrees.Alternatives.toString()
com.hp.hpl.jena.shared.ReificationStyle.intercepts()
com.hp.hpl.jena.shared.ReificationStyle.conceals()
com.hp.hpl.jena.shared.ReificationStyle.toString()
com.hp.hpl.jena.shared.LockNone.enterCriticalSection(boolean)
com.hp.hpl.jena.shared.LockNone.leaveCriticalSection()
com.hp.hpl.jena.shared.CannotEncodeCharacterException.getBadChar()
com.hp.hpl.jena.shared.CannotEncodeCharacterException.getEncodingContext()
com.hp.hpl.jena.shared.LockMRSW.enterCriticalSection(boolean)
com.hp.hpl.jena.shared.LockMRSW.leaveCriticalSection()
com.hp.hpl.jena.shared.LockMRSW.report(lockstate)
com.hp.hpl.jena.shared.LockMRSW.getLockState()
com.hp.hpl.jena.shared.LockMRSW.removeLockState(thread)
com.hp.hpl.jena.shared.LockMRSW.clean()
com.hp.hpl.jena.shared.LockMutex.enterCriticalSection(boolean)
com.hp.hpl.jena.shared.LockMutex.leaveCriticalSection()
com.hp.hpl.jena.shared.RandomOrderGraph.createDefaultGraph()
com.hp.hpl.jena.shared.RandomOrderGraph.createDefaultModel()
com.hp.hpl.jena.shared.RandomOrderGraph.find(triplematch)
com.hp.hpl.jena.shared.RandomOrderGraph.find(node, node, node)
com.hp.hpl.jena.shared.NoSuchReasonerException.getURI()
com.hp.hpl.jena.shared.RulesetNotFoundException.getURI()
com.hp.hpl.jena.shared.ClosedException.getGraph()
com.hp.hpl.jena.shared.Factory.create()
com.hp.hpl.jena.shared.UpdateDeniedException.getTriple()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.set(string, string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.get(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.lock()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.setNsPrefix(string, string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.removeNsPrefix(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.regenerateReverseMapping()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.checkUnlocked()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.checkProper(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.isNiceURI(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.setNsPrefixes(prefixmapping)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.withDefaultMappings(prefixmapping)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.setNsPrefixes(map)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.checkLegal(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.getNsPrefixURI(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.getNsPrefixMap()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.getNsURIPrefix(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.expandPrefix(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.toString()
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.qnameFor(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.shortForm(string)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.samePrefixMappingAs(prefixmapping)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.equals(prefixmappingimpl)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.sameAs(prefixmappingimpl)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.equalsByMap(prefixmapping)
com.hp.hpl.jena.shared.impl.PrefixMappingImpl.findMapping(boolean, string)
com.hp.hpl.jena.shared.uuid.UUID_V4.getMostSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_V4.getLeastSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_V4.check(long, long)
com.hp.hpl.jena.shared.uuid.UUID_V4.toString()
com.hp.hpl.jena.shared.uuid.UUID_V4.hashCode()
com.hp.hpl.jena.shared.uuid.UUID_V4.equals(object)
com.hp.hpl.jena.shared.uuid.UUID_V4.init()
com.hp.hpl.jena.shared.uuid.UUID_V4.uninit()
com.hp.hpl.jena.shared.uuid.UUID_V4.reset()
com.hp.hpl.jena.shared.uuid.UUID_V4.getVersion()
com.hp.hpl.jena.shared.uuid.UUID_V4.getVariant()
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.reset()
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.generate()
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.generateV1()
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.parse(string)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.parse$(string)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.unparse(uuid_v1)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.generate(long)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.generate(int, int, long, long, long)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.generate(int, int, long, long, long, long, long)
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.setTime()
com.hp.hpl.jena.shared.uuid.UUID_V1_Gen.setInitialState()
com.hp.hpl.jena.shared.uuid.UUID_nil.getMostSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_nil.getLeastSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_nil.toString()
com.hp.hpl.jena.shared.uuid.UUID_nil.equals(object)
com.hp.hpl.jena.shared.uuid.UUID_nil.getVariant()
com.hp.hpl.jena.shared.uuid.UUID_nil.getVersion()
com.hp.hpl.jena.shared.uuid.UUID_nil.getNil()
com.hp.hpl.jena.shared.uuid.UUID_nil.getNilString()
com.hp.hpl.jena.shared.uuid.LibUUID.makeRandom()
com.hp.hpl.jena.shared.uuid.LibUUID.makeSeed()
com.hp.hpl.jena.shared.uuid.UUID_V1.getMostSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_V1.getLeastSignificantBits()
com.hp.hpl.jena.shared.uuid.UUID_V1.check(long, long)
com.hp.hpl.jena.shared.uuid.UUID_V1.toString()
com.hp.hpl.jena.shared.uuid.UUID_V1.hashCode()
com.hp.hpl.jena.shared.uuid.UUID_V1.equals(object)
com.hp.hpl.jena.shared.uuid.UUID_V1.getTimeHigh()
com.hp.hpl.jena.shared.uuid.UUID_V1.getTimeMid()
com.hp.hpl.jena.shared.uuid.UUID_V1.getTimeLow()
com.hp.hpl.jena.shared.uuid.UUID_V1.getTimestamp()
com.hp.hpl.jena.shared.uuid.UUID_V1.getClockSequence()
com.hp.hpl.jena.shared.uuid.UUID_V1.getNode()
com.hp.hpl.jena.shared.uuid.UUID_V1.getVersion()
com.hp.hpl.jena.shared.uuid.UUID_V1.getVariant()
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.generate()
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.generateV4()
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.parse(string)
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.parseV4(string)
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.parse$(string)
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.unparse(uuid_v4)
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.init()
com.hp.hpl.jena.shared.uuid.UUID_V4_Gen.reset()
com.hp.hpl.jena.shared.uuid.JenaUUID.getVersion()
com.hp.hpl.jena.shared.uuid.JenaUUID.getVariant()
com.hp.hpl.jena.shared.uuid.JenaUUID.getMostSignificantBits()
com.hp.hpl.jena.shared.uuid.JenaUUID.getLeastSignificantBits()
com.hp.hpl.jena.shared.uuid.JenaUUID._getVersion(long, long)
com.hp.hpl.jena.shared.uuid.JenaUUID._getVariant(long, long)
com.hp.hpl.jena.shared.uuid.JenaUUID.asString()
com.hp.hpl.jena.shared.uuid.JenaUUID.asURI()
com.hp.hpl.jena.shared.uuid.JenaUUID.asURN()
com.hp.hpl.jena.shared.uuid.JenaUUID.asUUID()
com.hp.hpl.jena.shared.uuid.JenaUUID.setFactory(uuidfactory)
com.hp.hpl.jena.shared.uuid.JenaUUID.getFactory()
com.hp.hpl.jena.shared.uuid.JenaUUID.generate()
com.hp.hpl.jena.shared.uuid.JenaUUID.reset()
com.hp.hpl.jena.shared.uuid.JenaUUID.nil()
com.hp.hpl.jena.shared.uuid.JenaUUID.strNil()
com.hp.hpl.jena.shared.uuid.JenaUUID.isNil()
com.hp.hpl.jena.shared.uuid.JenaUUID.parse(string)
com.hp.hpl.jena.shared.uuid.JenaUUID.toHex(int, long, stringbuffer)
com.hp.hpl.jena.shared.uuid.Bits.unpack(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.pack(int, int, long, long)
com.hp.hpl.jena.shared.uuid.Bits.unpack(int, int, string)
com.hp.hpl.jena.shared.uuid.Bits.set(int, long)
com.hp.hpl.jena.shared.uuid.Bits.set(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.test(boolean, int, long)
com.hp.hpl.jena.shared.uuid.Bits.test(int, int, long, long)
com.hp.hpl.jena.shared.uuid.Bits.access(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.clear(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.mask(int, int)
com.hp.hpl.jena.shared.uuid.Bits.maskZero(int, int)
com.hp.hpl.jena.shared.uuid.Bits.clear$(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.set$(int, long)
com.hp.hpl.jena.shared.uuid.Bits.set$(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.test$(boolean, int, long)
com.hp.hpl.jena.shared.uuid.Bits.test$(int, int, long, long)
com.hp.hpl.jena.shared.uuid.Bits.access$(int, long)
com.hp.hpl.jena.shared.uuid.Bits.access$(int, int, long)
com.hp.hpl.jena.shared.uuid.Bits.mask$(int)
com.hp.hpl.jena.shared.uuid.Bits.mask$(int, int)
com.hp.hpl.jena.shared.uuid.Bits.maskZero$(int, int)
com.hp.hpl.jena.shared.uuid.Bits.check(long)
com.hp.hpl.jena.shared.uuid.Bits.check(long, long)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.getBase()
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.open(string)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.fullyOpen(string)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.open(iri)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.savable()
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.openOutput(string)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.getCreationJava()
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.open(boolean, iri)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.getInputStream(string)
com.hp.hpl.jena.shared.wg.TestInputStreamFactory.getMapBase()
com.hp.hpl.jena.shared.wg.LazyZipEntryInputStream.open()
com.hp.hpl.jena.shared.wg.LazyInputStream.open()
com.hp.hpl.jena.shared.wg.LazyInputStream.connect()
com.hp.hpl.jena.shared.wg.LazyInputStream.read()
com.hp.hpl.jena.shared.wg.LazyInputStream.close()
com.hp.hpl.jena.shared.wg.LazyFileInputStream.open()
com.hp.hpl.jena.shared.wg.LazyURLInputStream.open()
com.hp.hpl.jena.ontology.OntDocumentManager.getInstance()
com.hp.hpl.jena.ontology.OntDocumentManager.getFileManager()
com.hp.hpl.jena.ontology.OntDocumentManager.setReadHook(readhook)
com.hp.hpl.jena.ontology.OntDocumentManager.getReadHook()
com.hp.hpl.jena.ontology.OntDocumentManager.setFileManager()
com.hp.hpl.jena.ontology.OntDocumentManager.setFileManager(filemanager)
com.hp.hpl.jena.ontology.OntDocumentManager.getMetadataSearchPath()
com.hp.hpl.jena.ontology.OntDocumentManager.setMetadataSearchPath(boolean, string)
com.hp.hpl.jena.ontology.OntDocumentManager.setReadFailureHandler(readfailurehandler)
com.hp.hpl.jena.ontology.OntDocumentManager.getReadFailureHandler()
com.hp.hpl.jena.ontology.OntDocumentManager.configure(model)
com.hp.hpl.jena.ontology.OntDocumentManager.configure(boolean, model)
com.hp.hpl.jena.ontology.OntDocumentManager.reset(boolean)
com.hp.hpl.jena.ontology.OntDocumentManager.reset()
com.hp.hpl.jena.ontology.OntDocumentManager.listDocuments()
com.hp.hpl.jena.ontology.OntDocumentManager.doAltURLMapping(string)
com.hp.hpl.jena.ontology.OntDocumentManager.getModel(string)
com.hp.hpl.jena.ontology.OntDocumentManager.addAltEntry(string, string)
com.hp.hpl.jena.ontology.OntDocumentManager.addModel(model, string)
com.hp.hpl.jena.ontology.OntDocumentManager.addModel(boolean, model, string)
com.hp.hpl.jena.ontology.OntDocumentManager.forget(string)
com.hp.hpl.jena.ontology.OntDocumentManager.getOntology(ontmodelspec, string)
com.hp.hpl.jena.ontology.OntDocumentManager.getProcessImports()
com.hp.hpl.jena.ontology.OntDocumentManager.getCacheModels()
com.hp.hpl.jena.ontology.OntDocumentManager.setProcessImports(boolean)
com.hp.hpl.jena.ontology.OntDocumentManager.setCacheModels(boolean)
com.hp.hpl.jena.ontology.OntDocumentManager.addIgnoreImport(string)
com.hp.hpl.jena.ontology.OntDocumentManager.removeIgnoreImport(string)
com.hp.hpl.jena.ontology.OntDocumentManager.listIgnoredImports()
com.hp.hpl.jena.ontology.OntDocumentManager.ignoringImport(string)
com.hp.hpl.jena.ontology.OntDocumentManager.clearCache()
com.hp.hpl.jena.ontology.OntDocumentManager.loadImports(ontmodel)
com.hp.hpl.jena.ontology.OntDocumentManager.loadImport(ontmodel, string)
com.hp.hpl.jena.ontology.OntDocumentManager.unloadImport(ontmodel, string)
com.hp.hpl.jena.ontology.OntDocumentManager.getLoadedPolicyURL()
com.hp.hpl.jena.ontology.OntDocumentManager.loadImports(list, ontmodel)
com.hp.hpl.jena.ontology.OntDocumentManager.unloadImports(list, ontmodel)
com.hp.hpl.jena.ontology.OntDocumentManager.queueImports(list, model, profile)
com.hp.hpl.jena.ontology.OntDocumentManager.initialiseMetadata(string)
com.hp.hpl.jena.ontology.OntDocumentManager.findMetadata(string)
com.hp.hpl.jena.ontology.OntDocumentManager.processMetadata(model)
com.hp.hpl.jena.ontology.OntDocumentManager.loadImport(list, ontmodel, string)
com.hp.hpl.jena.ontology.OntDocumentManager.fetchPossiblyCachedImportModel(ontmodel, string)
com.hp.hpl.jena.ontology.OntDocumentManager.fetchLoadedImportModel(model, ontmodelspec, string, string)
com.hp.hpl.jena.ontology.OntDocumentManager.read(boolean, model, string)
com.hp.hpl.jena.ontology.OntDocumentManager.setDefaults()
com.hp.hpl.jena.ontology.OntDocumentManager.setDefaultPrefixMappings()
com.hp.hpl.jena.ontology.OntDocumentManager.handleFailedRead(exception, model, string)
com.hp.hpl.jena.ontology.OntDocumentManager.beforeRead(model, ontdocumentmanager, string)
com.hp.hpl.jena.ontology.OntDocumentManager.afterRead(model, ontdocumentmanager, string)
com.hp.hpl.jena.ontology.OntDocumentManager.afterRead(model, ontdocumentmanager, string)
com.hp.hpl.jena.ontology.OntDocumentManager.beforeRead(model, ontdocumentmanager, string)
com.hp.hpl.jena.ontology.ProfileRegistry.getInstance()
com.hp.hpl.jena.ontology.ProfileRegistry.registerProfile(profile, string)
com.hp.hpl.jena.ontology.ProfileRegistry.getProfile(string)
com.hp.hpl.jena.ontology.OntModelSpec.equals(object)
com.hp.hpl.jena.ontology.OntModelSpec.same(ontmodelspec)
com.hp.hpl.jena.ontology.OntModelSpec.sameReasonerFactory(ontmodelspec)
com.hp.hpl.jena.ontology.OntModelSpec.getImportModelMaker()
com.hp.hpl.jena.ontology.OntModelSpec.getBaseModelMaker()
com.hp.hpl.jena.ontology.OntModelSpec.getImportModelGetter()
com.hp.hpl.jena.ontology.OntModelSpec.setImportModelGetter(modelgetter)
com.hp.hpl.jena.ontology.OntModelSpec.assemble(resource)
com.hp.hpl.jena.ontology.OntModelSpec.assemble(model)
com.hp.hpl.jena.ontology.OntModelSpec.getDefaultSpec(string)
com.hp.hpl.jena.ontology.OntModelSpec.getDocumentManager()
com.hp.hpl.jena.ontology.OntModelSpec.setDocumentManager(ontdocumentmanager)
com.hp.hpl.jena.ontology.OntModelSpec.setImportModelMaker(modelmaker)
com.hp.hpl.jena.ontology.OntModelSpec.setBaseModelMaker(modelmaker)
com.hp.hpl.jena.ontology.OntModelSpec.getReasoner()
com.hp.hpl.jena.ontology.OntModelSpec.setReasoner(reasoner)
com.hp.hpl.jena.ontology.OntModelSpec.setReasonerFactory(reasonerfactory)
com.hp.hpl.jena.ontology.OntModelSpec.getReasonerFactory()
com.hp.hpl.jena.ontology.OntModelSpec.getLanguage()
com.hp.hpl.jena.ontology.OntModelSpec.setLanguage(string)
com.hp.hpl.jena.ontology.OntModelSpec.getProfile()
com.hp.hpl.jena.ontology.OntModelSpec.doCreateModel()
com.hp.hpl.jena.ontology.OntModelSpec.implementCreateModelOver(string)
com.hp.hpl.jena.ontology.OntModelSpec.createBaseModel()
com.hp.hpl.jena.ontology.OntModelSpec.getKnownPrefixes()
com.hp.hpl.jena.ontology.OntTools.getLCA(ontclass, ontclass, ontmodel)
com.hp.hpl.jena.ontology.OntTools.getLCA(ontclass, ontclass, ontclass, ontmodel)
com.hp.hpl.jena.ontology.OntTools.findShortestPath(filter, model, rdfnode, resource)
com.hp.hpl.jena.ontology.OntTools.namedHierarchyRoots(ontmodel)
com.hp.hpl.jena.ontology.OntTools.lca(lcaindex, ontclass, ontclass, ontclass)
com.hp.hpl.jena.ontology.OntTools.checkSolution(lcaindex, ontclass, ontclass)
com.hp.hpl.jena.ontology.OntTools.partitionByNamed(iterator, list, list)
com.hp.hpl.jena.ontology.OntTools.getNode()
com.hp.hpl.jena.ontology.OntTools.getParent()
com.hp.hpl.jena.ontology.OntTools.setParent(disjointset)
com.hp.hpl.jena.ontology.OntTools.getRank()
com.hp.hpl.jena.ontology.OntTools.incrementRank()
com.hp.hpl.jena.ontology.OntTools.getAncestor()
com.hp.hpl.jena.ontology.OntTools.setAncestor(disjointset)
com.hp.hpl.jena.ontology.OntTools.setBlack()
com.hp.hpl.jena.ontology.OntTools.isBlack()
com.hp.hpl.jena.ontology.OntTools.used()
com.hp.hpl.jena.ontology.OntTools.setUsed()
com.hp.hpl.jena.ontology.OntTools.find()
com.hp.hpl.jena.ontology.OntTools.union(disjointset)
com.hp.hpl.jena.ontology.OntTools.toString()
com.hp.hpl.jena.ontology.OntTools.toShortString()
com.hp.hpl.jena.ontology.OntTools.getLCA(resource, resource)
com.hp.hpl.jena.ontology.OntTools.setLCA(resource, resource, resource)
com.hp.hpl.jena.ontology.OntTools.getSet(resource)
com.hp.hpl.jena.ontology.OntTools.getStatement(int)
com.hp.hpl.jena.ontology.OntTools.append(statement)
com.hp.hpl.jena.ontology.OntTools.hasTerminus(rdfnode)
com.hp.hpl.jena.ontology.OntTools.getTerminal()
com.hp.hpl.jena.ontology.OntTools.getTerminalResource()
com.hp.hpl.jena.ontology.OntTools.accept(statement)
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.setCardinality(int)
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.getCardinality()
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.hasCardinality(int)
com.hp.hpl.jena.ontology.impl.CardinalityRestrictionImpl.removeCardinality(int)
com.hp.hpl.jena.ontology.impl.InverseFunctionalPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.InverseFunctionalPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.setMinCardinality(int)
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.getMinCardinality()
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.hasMinCardinality(int)
com.hp.hpl.jena.ontology.impl.MinCardinalityRestrictionImpl.removeMinCardinality(int)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.setOperands(rdflist)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.setOperand(resource)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.addOperand(resource)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.addOperands(iterator)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.getOperands()
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.listOperands()
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.hasOperand(resource)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.getOperand()
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.removeOperand(resource)
com.hp.hpl.jena.ontology.impl.ComplementClassImpl.operator()
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.setSomeValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.getSomeValuesFrom()
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.hasSomeValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.SomeValuesFromRestrictionImpl.removeSomeValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.UnionClassImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.UnionClassImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.UnionClassImpl.operator()
com.hp.hpl.jena.ontology.impl.UnionClassImpl.getOperatorName()
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.setMaxCardinality(int)
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.getMaxCardinality()
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.hasMaxCardinality(int)
com.hp.hpl.jena.ontology.impl.MaxCardinalityRestrictionImpl.removeMaxCardinality(int)
com.hp.hpl.jena.ontology.impl.IndividualImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.IndividualImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.IndividualImpl.setOntClass(resource)
com.hp.hpl.jena.ontology.impl.IndividualImpl.addOntClass(resource)
com.hp.hpl.jena.ontology.impl.IndividualImpl.getOntClass()
com.hp.hpl.jena.ontology.impl.IndividualImpl.getOntClass(boolean)
com.hp.hpl.jena.ontology.impl.IndividualImpl.listOntClasses(boolean)
com.hp.hpl.jena.ontology.impl.IndividualImpl.hasOntClass(boolean, resource)
com.hp.hpl.jena.ontology.impl.IndividualImpl.hasOntClass(resource)
com.hp.hpl.jena.ontology.impl.IndividualImpl.hasOntClass(string)
com.hp.hpl.jena.ontology.impl.IndividualImpl.removeOntClass(resource)
com.hp.hpl.jena.ontology.impl.RDFSProfile.NAMESPACE()
com.hp.hpl.jena.ontology.impl.RDFSProfile.CLASS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.RESTRICTION()
com.hp.hpl.jena.ontology.impl.RDFSProfile.THING()
com.hp.hpl.jena.ontology.impl.RDFSProfile.NOTHING()
com.hp.hpl.jena.ontology.impl.RDFSProfile.PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.OBJECT_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DATATYPE_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.TRANSITIVE_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SYMMETRIC_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.INVERSE_FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ALL_DIFFERENT()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ONTOLOGY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DEPRECATED_CLASS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DEPRECATED_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ANNOTATION_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ONTOLOGY_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.LIST()
com.hp.hpl.jena.ontology.impl.RDFSProfile.NIL()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DATARANGE()
com.hp.hpl.jena.ontology.impl.RDFSProfile.EQUIVALENT_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.EQUIVALENT_CLASS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DISJOINT_WITH()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SAME_INDIVIDUAL_AS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SAME_AS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DIFFERENT_FROM()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DISTINCT_MEMBERS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.UNION_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.INTERSECTION_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.COMPLEMENT_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ONE_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ON_PROPERTY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.ALL_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.RDFSProfile.HAS_VALUE()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SOME_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.RDFSProfile.MIN_CARDINALITY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.MAX_CARDINALITY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.CARDINALITY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.INVERSE_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.IMPORTS()
com.hp.hpl.jena.ontology.impl.RDFSProfile.PRIOR_VERSION()
com.hp.hpl.jena.ontology.impl.RDFSProfile.BACKWARD_COMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.RDFSProfile.INCOMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SUB_PROPERTY_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SUB_CLASS_OF()
com.hp.hpl.jena.ontology.impl.RDFSProfile.DOMAIN()
com.hp.hpl.jena.ontology.impl.RDFSProfile.RANGE()
com.hp.hpl.jena.ontology.impl.RDFSProfile.FIRST()
com.hp.hpl.jena.ontology.impl.RDFSProfile.REST()
com.hp.hpl.jena.ontology.impl.RDFSProfile.MIN_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.RDFSProfile.MAX_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.RDFSProfile.CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.RDFSProfile.HAS_CLASS_Q()
com.hp.hpl.jena.ontology.impl.RDFSProfile.VERSION_INFO()
com.hp.hpl.jena.ontology.impl.RDFSProfile.LABEL()
com.hp.hpl.jena.ontology.impl.RDFSProfile.COMMENT()
com.hp.hpl.jena.ontology.impl.RDFSProfile.SEE_ALSO()
com.hp.hpl.jena.ontology.impl.RDFSProfile.IS_DEFINED_BY()
com.hp.hpl.jena.ontology.impl.RDFSProfile.aliasTable()
com.hp.hpl.jena.ontology.impl.RDFSProfile.getAxiomTypes()
com.hp.hpl.jena.ontology.impl.RDFSProfile.getAnnotationProperties()
com.hp.hpl.jena.ontology.impl.RDFSProfile.getClassDescriptionTypes()
com.hp.hpl.jena.ontology.impl.RDFSProfile.isSupported(class, enhgraph, node)
com.hp.hpl.jena.ontology.impl.RDFSProfile.getLabel()
com.hp.hpl.jena.ontology.impl.RDFSProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RDFSProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RDFSProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RDFSProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.ObjectPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.ObjectPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.ObjectPropertyImpl.getInverseOf()
com.hp.hpl.jena.ontology.impl.ObjectPropertyImpl.listInverseOf()
com.hp.hpl.jena.ontology.impl.ObjectPropertyImpl.getInverse()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.DATARANGE()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.NOTHING()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.COMPLEMENT_OF()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.DISJOINT_WITH()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.HAS_VALUE()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.ONE_OF()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.UNION_OF()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.SAME_AS()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.SAME_INDIVIDUAL_AS()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.getLabel()
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.OWLLiteProfile.getCheckTable()
com.hp.hpl.jena.ontology.impl.AbstractProfile.hasAliasFor(resource)
com.hp.hpl.jena.ontology.impl.AbstractProfile.getAliasFor(resource)
com.hp.hpl.jena.ontology.impl.AbstractProfile.listAliasesFor(resource)
com.hp.hpl.jena.ontology.impl.AbstractProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.AbstractProfile.aliasTable()
com.hp.hpl.jena.ontology.impl.AbstractProfile.aliasMap()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getDocumentManager()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listOntologies()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listOntProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listAllOntProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listObjectProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listDatatypeProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listFunctionalProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listTransitiveProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listSymmetricProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listInverseFunctionalProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listIndividuals()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listIndividuals(resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.listClasses()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listHierarchyRootClasses(ontclass, ontclass)
com.hp.hpl.jena.ontology.impl.OntModelImpl.listEnumeratedClasses()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listUnionClasses()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listComplementClasses()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listIntersectionClasses()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listNamedClasses(ontclass)
com.hp.hpl.jena.ontology.impl.OntModelImpl.listRestrictions()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listAllDifferent()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listDataRanges()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listAnnotationProperties()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getOntology(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getIndividual(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getOntProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getObjectProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getTransitiveProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getSymmetricProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getInverseFunctionalProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getDatatypeProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getAnnotationProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getOntClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getComplementClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getEnumeratedClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getUnionClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getIntersectionClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getHasValueRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getSomeValuesFromRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getAllValuesFromRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getCardinalityRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getMinCardinalityRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getMaxCardinalityRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getQualifiedRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getCardinalityQRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getMinCardinalityQRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getMaxCardinalityQRestriction(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createOntology(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createIndividual(resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createIndividual(resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createOntProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createObjectProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createObjectProperty(boolean, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createTransitiveProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createTransitiveProperty(boolean, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createSymmetricProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createSymmetricProperty(boolean, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createInverseFunctionalProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createInverseFunctionalProperty(boolean, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createDatatypeProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createDatatypeProperty(boolean, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createAnnotationProperty(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createClass()
com.hp.hpl.jena.ontology.impl.OntModelImpl.createClass(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createComplementClass(resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createEnumeratedClass(rdflist, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createUnionClass(rdflist, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createIntersectionClass(rdflist, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createRestriction(property)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createRestriction(property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createHasValueRestriction(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createSomeValuesFromRestriction(property, resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createAllValuesFromRestriction(property, resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createCardinalityRestriction(int, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createMinCardinalityRestriction(int, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createMaxCardinalityRestriction(int, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createMaxCardinalityQRestriction(int, ontclass, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createMinCardinalityQRestriction(int, ontclass, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createCardinalityQRestriction(int, ontclass, property, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createDataRange(rdflist)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createAllDifferent()
com.hp.hpl.jena.ontology.impl.OntModelImpl.createAllDifferent(rdflist)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createOntResource(class, resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createOntResource(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.createList()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getProfile()
com.hp.hpl.jena.ontology.impl.OntModelImpl.loadImports()
com.hp.hpl.jena.ontology.impl.OntModelImpl.hasLoadedImport(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.addLoadedImport(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.removeLoadedImport(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.listImportedOntologyURIs()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listImportedOntologyURIs(boolean)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getImportModelMaker()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getModelMaker()
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(reader, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(inputstream, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(string, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(reader, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.read(inputstream, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getSubGraphs()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listImportedModels()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listSubModels(boolean, graph)
com.hp.hpl.jena.ontology.impl.OntModelImpl.listSubModels()
com.hp.hpl.jena.ontology.impl.OntModelImpl.countSubModels()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getImportedModel(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getBaseGraph()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getBaseModel()
com.hp.hpl.jena.ontology.impl.OntModelImpl.addSubModel(model)
com.hp.hpl.jena.ontology.impl.OntModelImpl.addSubModel(boolean, model)
com.hp.hpl.jena.ontology.impl.OntModelImpl.removeSubModel(model)
com.hp.hpl.jena.ontology.impl.OntModelImpl.removeSubModel(boolean, model)
com.hp.hpl.jena.ontology.impl.OntModelImpl.isInBaseModel(rdfnode)
com.hp.hpl.jena.ontology.impl.OntModelImpl.isInBaseModel(statement)
com.hp.hpl.jena.ontology.impl.OntModelImpl.strictMode()
com.hp.hpl.jena.ontology.impl.OntModelImpl.setStrictMode(boolean)
com.hp.hpl.jena.ontology.impl.OntModelImpl.setDynamicImports(boolean)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getDynamicImports()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getSpecification()
com.hp.hpl.jena.ontology.impl.OntModelImpl.queryFor(bindingqueryplan, class, list)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(writer)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(string, writer)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(string, string, writer)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(outputstream)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(outputstream, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.write(outputstream, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.writeAll(string, string, writer)
com.hp.hpl.jena.ontology.impl.OntModelImpl.writeAll(outputstream, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getRawModel()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getReasoner()
com.hp.hpl.jena.ontology.impl.OntModelImpl.rebind()
com.hp.hpl.jena.ontology.impl.OntModelImpl.prepare()
com.hp.hpl.jena.ontology.impl.OntModelImpl.reset()
com.hp.hpl.jena.ontology.impl.OntModelImpl.getDeductionsModel()
com.hp.hpl.jena.ontology.impl.OntModelImpl.validate()
com.hp.hpl.jena.ontology.impl.OntModelImpl.listStatements(model, property, rdfnode, resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.setDerivationLogging(boolean)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getDerivation(statement)
com.hp.hpl.jena.ontology.impl.OntModelImpl.initSyntaxCheckerClass()
com.hp.hpl.jena.ontology.impl.OntModelImpl.generateGraph(graph, ontmodelspec)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getUnionGraph()
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByURIAs(class, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByType(resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByType(iterator, resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByTypeAs(class, iterator, resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByTypeAs(class, iterator)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByTypeAs(class, resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.queryXTypeOfType(resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByDefiningProperty(property)
com.hp.hpl.jena.ontology.impl.OntModelImpl.findByDefiningPropertyAs(class, property)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getResourceWithType(resource, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getOntResource(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getOntResource(resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.checkProfileEntry(object, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.checkListMembersRdfType(rdflist, resource)
com.hp.hpl.jena.ontology.impl.OntModelImpl.makeBaseModel(model, ontmodelspec)
com.hp.hpl.jena.ontology.impl.OntModelImpl.getInfGraph()
com.hp.hpl.jena.ontology.impl.OntModelImpl.ignoreFileURI(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.readDelegate(string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.readDelegate(string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.readDelegate(string, string, string)
com.hp.hpl.jena.ontology.impl.OntModelImpl.map1(triple)
com.hp.hpl.jena.ontology.impl.OntModelImpl.map1(node)
com.hp.hpl.jena.ontology.impl.OntModelImpl.accept(node)
com.hp.hpl.jena.ontology.impl.OntModelImpl.accept(t)
com.hp.hpl.jena.ontology.impl.OntModelImpl.map1(domain)
com.hp.hpl.jena.ontology.impl.OntModelImpl.reduce(object, rdfnode)
com.hp.hpl.jena.ontology.impl.OntModelImpl.addedStatement(statement)
com.hp.hpl.jena.ontology.impl.OntModelImpl.removedStatement(statement)
com.hp.hpl.jena.ontology.impl.OntClassImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntClassImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntClassImpl.setSuperClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.addSuperClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.getSuperClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listSuperClasses()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listSuperClasses(boolean)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSuperClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSuperClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSuperClass(boolean, resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.removeSuperClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.setSubClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.addSubClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.getSubClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listSubClasses()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listSubClasses(boolean)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSubClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSubClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSubClass(boolean, resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.removeSubClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.setEquivalentClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.addEquivalentClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.getEquivalentClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listEquivalentClasses()
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasEquivalentClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.removeEquivalentClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.setDisjointWith(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.addDisjointWith(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.getDisjointWith()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listDisjointWith()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isDisjointWith(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.removeDisjointWith(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.listDeclaredProperties()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listDeclaredProperties(boolean)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasDeclaredProperty(boolean, property)
com.hp.hpl.jena.ontology.impl.OntClassImpl.listInstances()
com.hp.hpl.jena.ontology.impl.OntClassImpl.listInstances(boolean, individual)
com.hp.hpl.jena.ontology.impl.OntClassImpl.createIndividual()
com.hp.hpl.jena.ontology.impl.OntClassImpl.createIndividual(string)
com.hp.hpl.jena.ontology.impl.OntClassImpl.dropIndividual(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.isHierarchyRoot()
com.hp.hpl.jena.ontology.impl.OntClassImpl.asEnumeratedClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.asUnionClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.asIntersectionClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.asComplementClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.asRestriction()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isEnumeratedClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isUnionClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isIntersectionClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isComplementClass()
com.hp.hpl.jena.ontology.impl.OntClassImpl.isRestriction()
com.hp.hpl.jena.ontology.impl.OntClassImpl.convertToEnumeratedClass(rdflist)
com.hp.hpl.jena.ontology.impl.OntClassImpl.convertToIntersectionClass(rdflist)
com.hp.hpl.jena.ontology.impl.OntClassImpl.convertToUnionClass(rdflist)
com.hp.hpl.jena.ontology.impl.OntClassImpl.convertToComplementClass(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.convertToRestriction(property)
com.hp.hpl.jena.ontology.impl.OntClassImpl.hasSuperClassDirect(resource)
com.hp.hpl.jena.ontology.impl.OntClassImpl.testDomain(boolean, property)
com.hp.hpl.jena.ontology.impl.OntClassImpl.listAllProperties()
com.hp.hpl.jena.ontology.impl.OntClassImpl.canProveSuperClass(resource)
com.hp.hpl.jena.ontology.impl.AnnotationPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AnnotationPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AnnotationPropertyImpl.isProperty()
com.hp.hpl.jena.ontology.impl.AnnotationPropertyImpl.getOrdinal()
com.hp.hpl.jena.ontology.impl.DatatypePropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DatatypePropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.isMinCardinalityQRestriction(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.isValid()
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.setMinCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.getMinCardinalityQ()
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.hasMinCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.MinCardinalityQRestrictionImpl.removeMinCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile._NAMESPACE()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.NAMESPACE()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.RESTRICTION()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.THING()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.NOTHING()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.OBJECT_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DATATYPE_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.TRANSITIVE_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SYMMETRIC_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.INVERSE_FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ALL_DIFFERENT()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ONTOLOGY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DEPRECATED_CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DEPRECATED_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ANNOTATION_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ONTOLOGY_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.LIST()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.NIL()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DATARANGE()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.EQUIVALENT_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.EQUIVALENT_CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DISJOINT_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SAME_INDIVIDUAL_AS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SAME_AS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DIFFERENT_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DISTINCT_MEMBERS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.UNION_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.INTERSECTION_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.COMPLEMENT_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ONE_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ON_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.ALL_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.HAS_VALUE()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SOME_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.MIN_CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.MAX_CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.INVERSE_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.IMPORTS()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.PRIOR_VERSION()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.BACKWARD_COMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.INCOMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SUB_CLASS_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SUB_PROPERTY_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.DOMAIN()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.RANGE()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.FIRST()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.REST()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.MIN_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.MAX_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.HAS_CLASS_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.VERSION_INFO()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.LABEL()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.COMMENT()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.SEE_ALSO()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.IS_DEFINED_BY()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.aliasTable()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.getAxiomTypes()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.getAnnotationProperties()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.getClassDescriptionTypes()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.isSupported(class, enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.getLabel()
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.IntersectionClassImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.IntersectionClassImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.IntersectionClassImpl.operator()
com.hp.hpl.jena.ontology.impl.IntersectionClassImpl.getOperatorName()
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.isMaxCardinalityQRestriction(enhgraph, node)
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.isValid()
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.setMaxCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.getMaxCardinalityQ()
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.hasMaxCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.MaxCardinalityQRestrictionImpl.removeMaxCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.isCardinalityQRestriction(enhgraph, node)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.isValid()
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.setCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.getCardinalityQ()
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.hasCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.CardinalityQRestrictionImpl.removeCardinalityQ(int)
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.setHasValue(rdfnode)
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.getHasValue()
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.hasValue(rdfnode)
com.hp.hpl.jena.ontology.impl.HasValueRestrictionImpl.removeHasValue(rdfnode)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.getLabel()
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.OWLDLProfile.getCheckTable()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile._NAMESPACE()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.NAMESPACE()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.RESTRICTION()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.THING()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.NOTHING()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.OBJECT_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DATATYPE_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.TRANSITIVE_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SYMMETRIC_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.INVERSE_FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ALL_DIFFERENT()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ONTOLOGY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DEPRECATED_CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DEPRECATED_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ANNOTATION_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ONTOLOGY_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.LIST()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.NIL()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DATARANGE()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.EQUIVALENT_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.EQUIVALENT_CLASS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DISJOINT_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SAME_INDIVIDUAL_AS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SAME_AS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DIFFERENT_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DISTINCT_MEMBERS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.UNION_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.INTERSECTION_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.COMPLEMENT_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ONE_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ON_PROPERTY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.ALL_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.HAS_VALUE()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SOME_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.MIN_CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.MAX_CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.CARDINALITY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.INVERSE_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.IMPORTS()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.PRIOR_VERSION()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.BACKWARD_COMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.INCOMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SUB_CLASS_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SUB_PROPERTY_OF()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.DOMAIN()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.RANGE()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.FIRST()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.REST()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.MIN_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.MAX_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.HAS_CLASS_Q()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.VERSION_INFO()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.LABEL()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.COMMENT()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.SEE_ALSO()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.IS_DEFINED_BY()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.aliasTable()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.getAxiomTypes()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.getAnnotationProperties()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.getClassDescriptionTypes()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.isSupported(class, enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.getLabel()
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DAML_OILLegacyProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.OWLProfile.NAMESPACE()
com.hp.hpl.jena.ontology.impl.OWLProfile.CLASS()
com.hp.hpl.jena.ontology.impl.OWLProfile.RESTRICTION()
com.hp.hpl.jena.ontology.impl.OWLProfile.THING()
com.hp.hpl.jena.ontology.impl.OWLProfile.NOTHING()
com.hp.hpl.jena.ontology.impl.OWLProfile.PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.OBJECT_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.DATATYPE_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.TRANSITIVE_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.SYMMETRIC_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.INVERSE_FUNCTIONAL_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.ALL_DIFFERENT()
com.hp.hpl.jena.ontology.impl.OWLProfile.ONTOLOGY()
com.hp.hpl.jena.ontology.impl.OWLProfile.DEPRECATED_CLASS()
com.hp.hpl.jena.ontology.impl.OWLProfile.DEPRECATED_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.ANNOTATION_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.ONTOLOGY_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.LIST()
com.hp.hpl.jena.ontology.impl.OWLProfile.NIL()
com.hp.hpl.jena.ontology.impl.OWLProfile.DATARANGE()
com.hp.hpl.jena.ontology.impl.OWLProfile.EQUIVALENT_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.EQUIVALENT_CLASS()
com.hp.hpl.jena.ontology.impl.OWLProfile.DISJOINT_WITH()
com.hp.hpl.jena.ontology.impl.OWLProfile.SAME_INDIVIDUAL_AS()
com.hp.hpl.jena.ontology.impl.OWLProfile.SAME_AS()
com.hp.hpl.jena.ontology.impl.OWLProfile.DIFFERENT_FROM()
com.hp.hpl.jena.ontology.impl.OWLProfile.DISTINCT_MEMBERS()
com.hp.hpl.jena.ontology.impl.OWLProfile.UNION_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.INTERSECTION_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.COMPLEMENT_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.ONE_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.ON_PROPERTY()
com.hp.hpl.jena.ontology.impl.OWLProfile.ALL_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.OWLProfile.HAS_VALUE()
com.hp.hpl.jena.ontology.impl.OWLProfile.SOME_VALUES_FROM()
com.hp.hpl.jena.ontology.impl.OWLProfile.MIN_CARDINALITY()
com.hp.hpl.jena.ontology.impl.OWLProfile.MAX_CARDINALITY()
com.hp.hpl.jena.ontology.impl.OWLProfile.CARDINALITY()
com.hp.hpl.jena.ontology.impl.OWLProfile.INVERSE_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.IMPORTS()
com.hp.hpl.jena.ontology.impl.OWLProfile.PRIOR_VERSION()
com.hp.hpl.jena.ontology.impl.OWLProfile.BACKWARD_COMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.OWLProfile.INCOMPATIBLE_WITH()
com.hp.hpl.jena.ontology.impl.OWLProfile.SUB_PROPERTY_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.SUB_CLASS_OF()
com.hp.hpl.jena.ontology.impl.OWLProfile.DOMAIN()
com.hp.hpl.jena.ontology.impl.OWLProfile.RANGE()
com.hp.hpl.jena.ontology.impl.OWLProfile.FIRST()
com.hp.hpl.jena.ontology.impl.OWLProfile.REST()
com.hp.hpl.jena.ontology.impl.OWLProfile.MIN_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.OWLProfile.MAX_CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.OWLProfile.CARDINALITY_Q()
com.hp.hpl.jena.ontology.impl.OWLProfile.HAS_CLASS_Q()
com.hp.hpl.jena.ontology.impl.OWLProfile.VERSION_INFO()
com.hp.hpl.jena.ontology.impl.OWLProfile.LABEL()
com.hp.hpl.jena.ontology.impl.OWLProfile.COMMENT()
com.hp.hpl.jena.ontology.impl.OWLProfile.SEE_ALSO()
com.hp.hpl.jena.ontology.impl.OWLProfile.IS_DEFINED_BY()
com.hp.hpl.jena.ontology.impl.OWLProfile.aliasTable()
com.hp.hpl.jena.ontology.impl.OWLProfile.getAxiomTypes()
com.hp.hpl.jena.ontology.impl.OWLProfile.getAnnotationProperties()
com.hp.hpl.jena.ontology.impl.OWLProfile.getClassDescriptionTypes()
com.hp.hpl.jena.ontology.impl.OWLProfile.isSupported(class, enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.getLabel()
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.allTypes(graph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.intersect(resource, set)
com.hp.hpl.jena.ontology.impl.OWLProfile.hasType(enhgraph, node, resource)
com.hp.hpl.jena.ontology.impl.OWLProfile.isInferenceGraph(graph)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.doCheck(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OWLProfile.containsSome(enhgraph, node, property)
com.hp.hpl.jena.ontology.impl.OWLProfile.getCheckTable()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getOrdinal()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setSuperProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addSuperProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getSuperProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listSuperProperties()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listSuperProperties(boolean)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasSuperProperty(boolean, property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeSuperProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setSubProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addSubProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getSubProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listSubProperties()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listSubProperties(boolean)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasSubProperty(boolean, property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeSubProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setDomain(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addDomain(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getDomain()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listDomain()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasDomain(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeDomain(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setRange(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addRange(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getRange()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listRange()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasRange(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeRange(resource)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setEquivalentProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addEquivalentProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getEquivalentProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listEquivalentProperties()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasEquivalentProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeEquivalentProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.setInverseOf(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.addInverseOf(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getInverseOf()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listInverseOf()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isInverseOf(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.removeInverseProperty(property)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asDatatypeProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asObjectProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asTransitiveProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asInverseFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.asSymmetricProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToDatatypeProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToObjectProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToTransitiveProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToInverseFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.convertToSymmetricProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isDatatypeProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isObjectProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isTransitiveProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isInverseFunctionalProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.isSymmetricProperty()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.getInverse()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listInverse()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.hasInverse()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listDeclaringClasses()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listDeclaringClasses(boolean)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.listReferringRestrictions()
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.inModel(model)
com.hp.hpl.jena.ontology.impl.OntPropertyImpl.accept(ontclass)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.setDistinctMembers(rdflist)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.addDistinctMember(resource)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.addDistinctMembers(iterator)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.getDistinctMembers()
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.listDistinctMembers(rdfnode)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.hasDistinctMember(resource)
com.hp.hpl.jena.ontology.impl.AllDifferentImpl.removeDistinctMember(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getOntModel()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getProfile()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isOntLanguageTerm()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setSameAs(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addSameAs(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getSameAs()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listSameAs()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isSameAs(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeSameAs(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setDifferentFrom(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addDifferentFrom(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getDifferentFrom()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listDifferentFrom()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isDifferentFrom(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeDifferentFrom(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setSeeAlso(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addSeeAlso(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getSeeAlso()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listSeeAlso()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasSeeAlso(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeSeeAlso(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setIsDefinedBy(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addIsDefinedBy(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getIsDefinedBy()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listIsDefinedBy()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isDefinedBy(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeDefinedBy(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setVersionInfo(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addVersionInfo(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getVersionInfo()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listVersionInfo()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasVersionInfo(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeVersionInfo(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setLabel(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addLabel(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addLabel(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getLabel(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listLabels(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasLabel(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasLabel(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeLabel(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeLabel(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setComment(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addComment(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addComment(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getComment(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listComments(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasComment(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasComment(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeComment(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeComment(literal)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setRDFType(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addRDFType(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getRDFType()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getRDFType(boolean)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listRDFTypes(boolean)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasRDFType(string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasRDFType(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasRDFType(boolean, resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasRDFType(boolean, resource, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeRDFType(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getCardinality(property)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setPropertyValue(property, rdfnode)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.getPropertyValue(property)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listPropertyValues(property)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.remove()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removeProperty(property, rdfnode)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asAnnotationProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asObjectProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asDatatypeProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asIndividual()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asClass()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asOntology()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asAllDifferent()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asDataRange()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isAnnotationProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isObjectProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isDatatypeProperty()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isIndividual()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isClass()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isOntology()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isDataRange()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.isAllDifferent()
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasType(enhgraph, node, resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.checkProfile(object, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.selectLang(stmtiterator, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.langTagMatch(string, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.objectAs(class, property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.objectAsResource(property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.objectAsProperty(property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.objectAsInt(property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listAs(class, property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addPropertyValue(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.setPropertyValue(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.hasPropertyValue(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.addListPropertyValue(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.convertToType(class, resource, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.listDirectPropertyValues(boolean, boolean, class, property, property, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.computeDirectValues(boolean, map1, property, property, resource, resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.removePropertyValue(property, rdfnode, string)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.asOntResource(rdfnode)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(rdfnode)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(resource)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.map1(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.accept(statement)
com.hp.hpl.jena.ontology.impl.OntResourceImpl.accept(t)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.setOperands(rdflist)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.addOperand(resource)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.addOperands(iterator)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.getOperands()
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.listOperands()
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.hasOperand(resource)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.removeOperand(resource)
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.operator()
com.hp.hpl.jena.ontology.impl.BooleanClassDescriptionImpl.getOperatorName()
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.setAllValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.getAllValuesFrom()
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.hasAllValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.AllValuesFromRestrictionImpl.removeAllValuesFrom(resource)
com.hp.hpl.jena.ontology.impl.FunctionalPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.FunctionalPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.TransitivePropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.TransitivePropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntologyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntologyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.OntologyImpl.setImport(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.addImport(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.getImport()
com.hp.hpl.jena.ontology.impl.OntologyImpl.listImports()
com.hp.hpl.jena.ontology.impl.OntologyImpl.imports(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.removeImport(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.setBackwardCompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.addBackwardCompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.getBackwardCompatibleWith()
com.hp.hpl.jena.ontology.impl.OntologyImpl.listBackwardCompatibleWith()
com.hp.hpl.jena.ontology.impl.OntologyImpl.isBackwardCompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.removeBackwardCompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.setPriorVersion(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.addPriorVersion(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.getPriorVersion()
com.hp.hpl.jena.ontology.impl.OntologyImpl.listPriorVersion()
com.hp.hpl.jena.ontology.impl.OntologyImpl.hasPriorVersion(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.removePriorVersion(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.setIncompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.addIncompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.getIncompatibleWith()
com.hp.hpl.jena.ontology.impl.OntologyImpl.listIncompatibleWith()
com.hp.hpl.jena.ontology.impl.OntologyImpl.isIncompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.OntologyImpl.removeIncompatibleWith(resource)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.setOneOf(rdflist)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.addOneOf(resource)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.addOneOf(iterator)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.getOneOf()
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.listOneOf()
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.hasOneOf(resource)
com.hp.hpl.jena.ontology.impl.EnumeratedClassImpl.removeOneOf(resource)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.setOneOf(rdflist)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.addOneOf(literal)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.addOneOf(iterator)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.getOneOf()
com.hp.hpl.jena.ontology.impl.DataRangeImpl.listOneOf()
com.hp.hpl.jena.ontology.impl.DataRangeImpl.hasOneOf(literal)
com.hp.hpl.jena.ontology.impl.DataRangeImpl.removeOneOf(literal)
com.hp.hpl.jena.ontology.impl.SymmetricPropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.SymmetricPropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.setOnProperty(property)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.getOnProperty()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.onProperty(property)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.removeOnProperty(property)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asAllValuesFromRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asSomeValuesFromRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asHasValueRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asMinCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.asMaxCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isAllValuesFromRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isSomeValuesFromRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isHasValueRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isMinCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.isMaxCardinalityRestriction()
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToAllValuesFromRestriction(resource)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToSomeValuesFromRestriction(resource)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToHasValueRestriction(rdfnode)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToCardinalityRestriction(int)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToMinCardinalityRestriction(int)
com.hp.hpl.jena.ontology.impl.RestrictionImpl.convertToMaxCardinalityRestriction(int)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.wrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.isValidQualifiedRestriction(enhgraph, node)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.isValid()
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.setHasClassQ(ontclass)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.getHasClassQ()
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.hasHasClassQ(ontclass)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.hasHasClassQ(datarange)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.removeHasClassQ(ontclass)
com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl.removeHasClassQ(datarange)
com.hp.hpl.jena.reasoner.StandardValidityReport.add(boolean, string, string)
com.hp.hpl.jena.reasoner.StandardValidityReport.add(boolean, object, string, string)
com.hp.hpl.jena.reasoner.StandardValidityReport.add(validityreport)
com.hp.hpl.jena.reasoner.StandardValidityReport.isValid()
com.hp.hpl.jena.reasoner.StandardValidityReport.isClean()
com.hp.hpl.jena.reasoner.StandardValidityReport.size()
com.hp.hpl.jena.reasoner.StandardValidityReport.getReports()
com.hp.hpl.jena.reasoner.TriplePattern.getObject()
com.hp.hpl.jena.reasoner.TriplePattern.getPredicate()
com.hp.hpl.jena.reasoner.TriplePattern.getSubject()
com.hp.hpl.jena.reasoner.TriplePattern.asTripleMatch()
com.hp.hpl.jena.reasoner.TriplePattern.asTriple()
com.hp.hpl.jena.reasoner.TriplePattern.compatibleWith(triplepattern)
com.hp.hpl.jena.reasoner.TriplePattern.variantOf(triplepattern)
com.hp.hpl.jena.reasoner.TriplePattern.variantOf(map, node, node)
com.hp.hpl.jena.reasoner.TriplePattern.isLegal()
com.hp.hpl.jena.reasoner.TriplePattern.subsumes(triplepattern)
com.hp.hpl.jena.reasoner.TriplePattern.isGround()
com.hp.hpl.jena.reasoner.TriplePattern.toString()
com.hp.hpl.jena.reasoner.TriplePattern.simplePrintString(triple)
com.hp.hpl.jena.reasoner.TriplePattern.simplePrintString(node)
com.hp.hpl.jena.reasoner.TriplePattern.normalize(node)
com.hp.hpl.jena.reasoner.TriplePattern.toMatch(node)
com.hp.hpl.jena.reasoner.TriplePattern.equals(object)
com.hp.hpl.jena.reasoner.TriplePattern.nodeEqual(node, node)
com.hp.hpl.jena.reasoner.TriplePattern.hashCode()
com.hp.hpl.jena.reasoner.TriplePattern.sameAs(object)
com.hp.hpl.jena.reasoner.Report.getDescription()
com.hp.hpl.jena.reasoner.Report.getExtension()
com.hp.hpl.jena.reasoner.Report.isError()
com.hp.hpl.jena.reasoner.Report.getType()
com.hp.hpl.jena.reasoner.Report.toString()
com.hp.hpl.jena.reasoner.BaseInfGraph.getPrefixMapping()
com.hp.hpl.jena.reasoner.BaseInfGraph.constructReifier()
com.hp.hpl.jena.reasoner.BaseInfGraph.getCapabilities()
com.hp.hpl.jena.reasoner.BaseInfGraph.sizeAccurate()
com.hp.hpl.jena.reasoner.BaseInfGraph.deleteAllowed(boolean)
com.hp.hpl.jena.reasoner.BaseInfGraph.iteratorRemoveAllowed()
com.hp.hpl.jena.reasoner.BaseInfGraph.findContractSafe()
com.hp.hpl.jena.reasoner.BaseInfGraph.findContractSafe()
com.hp.hpl.jena.reasoner.BaseInfGraph.getBulkUpdateHandler()
com.hp.hpl.jena.reasoner.BaseInfGraph.remove(node, node, node)
com.hp.hpl.jena.reasoner.BaseInfGraph.removeAll()
com.hp.hpl.jena.reasoner.BaseInfGraph.getTransactionHandler()
com.hp.hpl.jena.reasoner.BaseInfGraph.transactionsSupported()
com.hp.hpl.jena.reasoner.BaseInfGraph.getBaseHandler()
com.hp.hpl.jena.reasoner.BaseInfGraph.begin()
com.hp.hpl.jena.reasoner.BaseInfGraph.abort()
com.hp.hpl.jena.reasoner.BaseInfGraph.commit()
com.hp.hpl.jena.reasoner.BaseInfGraph.discardState()
com.hp.hpl.jena.reasoner.BaseInfGraph.getRawGraph()
com.hp.hpl.jena.reasoner.BaseInfGraph.getReasoner()
com.hp.hpl.jena.reasoner.BaseInfGraph.rebind(graph)
com.hp.hpl.jena.reasoner.BaseInfGraph.rebind()
com.hp.hpl.jena.reasoner.BaseInfGraph.reset()
com.hp.hpl.jena.reasoner.BaseInfGraph.prepare()
com.hp.hpl.jena.reasoner.BaseInfGraph.getDeductionsGraph()
com.hp.hpl.jena.reasoner.BaseInfGraph.getGlobalProperty(node)
com.hp.hpl.jena.reasoner.BaseInfGraph.testGlobalProperty(node)
com.hp.hpl.jena.reasoner.BaseInfGraph.validate()
com.hp.hpl.jena.reasoner.BaseInfGraph.find(graph, node, node, node)
com.hp.hpl.jena.reasoner.BaseInfGraph.graphBaseFind(triplematch)
com.hp.hpl.jena.reasoner.BaseInfGraph.graphBaseFind(node, node, node)
com.hp.hpl.jena.reasoner.BaseInfGraph.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.BaseInfGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.BaseInfGraph.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.BaseInfGraph.getDerivation(triple)
com.hp.hpl.jena.reasoner.BaseInfGraph.graphBaseSize()
com.hp.hpl.jena.reasoner.BaseInfGraph.isEmpty()
com.hp.hpl.jena.reasoner.BaseInfGraph.close()
com.hp.hpl.jena.reasoner.BaseInfGraph.getVersion()
com.hp.hpl.jena.reasoner.BaseInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.BaseInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.BaseInfGraph.getSchemaGraph()
com.hp.hpl.jena.reasoner.BaseInfGraph.cloneWithPremises(graph)
com.hp.hpl.jena.reasoner.BaseInfGraph.isPrepared()
com.hp.hpl.jena.reasoner.FinderUtil.cascade(finder, finder)
com.hp.hpl.jena.reasoner.FinderUtil.cascade(finder, finder, finder)
com.hp.hpl.jena.reasoner.FinderUtil.cascade(finder, finder, finder, finder)
com.hp.hpl.jena.reasoner.FinderUtil.find(triplepattern)
com.hp.hpl.jena.reasoner.FinderUtil.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.FinderUtil.contains(triplepattern)
com.hp.hpl.jena.reasoner.FGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.FGraph.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.FGraph.getGraph()
com.hp.hpl.jena.reasoner.FGraph.contains(triplepattern)
com.hp.hpl.jena.reasoner.ReasonerRegistry.theRegistry()
com.hp.hpl.jena.reasoner.ReasonerRegistry.register(reasonerfactory)
com.hp.hpl.jena.reasoner.ReasonerRegistry.register(reasonerfactory, string)
com.hp.hpl.jena.reasoner.ReasonerRegistry.getAllDescriptions()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getDescription(string)
com.hp.hpl.jena.reasoner.ReasonerRegistry.getFactory(string)
com.hp.hpl.jena.reasoner.ReasonerRegistry.create(resource, string)
com.hp.hpl.jena.reasoner.ReasonerRegistry.makeDirect(node)
com.hp.hpl.jena.reasoner.ReasonerRegistry.makeDirect(string)
com.hp.hpl.jena.reasoner.ReasonerRegistry.getRDFSReasoner()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getRDFSSimpleReasoner()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getTransitiveReasoner()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getOWLReasoner()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getOWLMicroReasoner()
com.hp.hpl.jena.reasoner.ReasonerRegistry.getOWLMiniReasoner()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.getReasonerCapabilities()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.addDescription(model, resource)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.supportsProperty(property)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.bindSchema(model)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.bindSchema(finder)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.bind(graph)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.setParameter(object, property)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.getSubPropertyCache()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.getSubClassCache()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.getTbox()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.visit(alpha, beta, graphnode, graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.hasNext()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.next()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.walkOne()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.pushStack(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.popStack()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.hasNext()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.next()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.walkOne()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.getClosedPredicate()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.getDirectPredicate()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.addRelation(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.addRelation(graphnode, graphnode, graphnode, node, node, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.removeRelation(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.processDeletes()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.contains(triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.listAllSubjects()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.isSubject(node)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.cacheAll(finder, node)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.find(triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.deepCopy()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.clear()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.setCaching(boolean)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.dump()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache.getLead(node)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.members()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.addInto(graphnode, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.addSuccessors(arraylist, node, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.siblingIterator()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.leadNode(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.dump()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.members()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.addInto(graphnode, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.addSuccessors(arraylist, node, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.siblingIterator()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.dump()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.members()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.leadNode(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.dump()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.siblings()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.addSiblings(graphnode, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.leadNode()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.siblingIterator()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.concatenateSiblings(iterator)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.becomeSubordinateOf(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.becomeLeaderOf(set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.dump()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.pathTo(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.directPathTo(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.visitPredecessors(alpha, beta, visitor)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.doVisitPredecessors(alpha, beta, set, visitor)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.iteratorOverSuccessors()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.assertLinkTo(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.retractLinkTo(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.assertIndirectLinkTo(graphnode)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.clearTripleCache()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.propagateAdd(graphnode, graphnode, graphnode, graphnode, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.propagateSCC(graphnode, graphnode, object, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.makeLeadNodeFor(set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.relocateAllRefTo(graphnode, graphnode, graphnode, graphnode, set, set)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.listTriples(boolean, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.triplesForSuccessors(boolean, node, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.listPredecessorTriples(boolean, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.toString()
com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode.dumpSet(set)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.insert(fgraph, finder)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.getSubClassCache()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.getSubPropertyCache()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.setCaching(boolean, boolean)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.prepare()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.triage(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.getFinder(finder, triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.add(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.delete(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.checkOccurance(graph, node)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.cacheSubClassUtility(finder, transitivegraphcache, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.checkOccuranceUtility(graph, node, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveEngine.cacheSubPropUtility(finder, transitivegraphcache)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.prepare()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.getSchemaGraph()
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.graphBaseFind(node, node, node)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveInfGraph.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.instantiateRuleEngine(list)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.setRuleStore(object)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.rebind(graph)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.rebind()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.getSchemaGraph()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.prepare()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.preloadDeductions(graph)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.addDeduction(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.setFunctorFiltering(boolean)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.findWithContinuation(boolean, finder, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.graphBaseFind(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.graphBaseSize()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.close()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.addBRule(rule)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.deleteBRule(rule)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.getDeductionsGraph()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.createDeductionsGraph()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.getCurrentDeductionsGraph()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.findDataMatches(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.logDerivation(derivation, triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.silentAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.shouldLogDerivations()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.getDerivation(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.shouldTrace()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.getNRulesFired()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleInfGraph.constructReifier()
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.toString()
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.printTrace(boolean, printwriter)
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.printTrace(boolean, hashset, int, printwriter)
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.getConclusion()
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.getMatches()
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.getRule()
com.hp.hpl.jena.reasoner.rulesys.RuleDerivation.equals(object)
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.constructorInit(graph)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.instantiateRuleEngine(list)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.initLP(graph)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.setUseTGCCache()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.resetTGCCache()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.findDataMatches(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.findDataMatches(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.processBuiltin(bindingenvironment, clauseentry, rule)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.addBRule(rule)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.deleteBRule(rule)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.addBRules(list)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getBRules()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getRules()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.setTabled(node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getForwardRuleStore()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.addDeduction(triple)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getTemp(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.addRuleDuringPrepare(rule)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.addPreprocessingHook(rulepreprocesshook)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.prepare()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.rebind()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.rebindAll()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getNRulesFired()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.findWithContinuation(finder, triple, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.findFull(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.graphBaseFind(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.reset()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.close()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.validate()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.setDatatypeRangeValidation(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.performDatatypeRangeValidation(standardvalidityreport)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.checkLiteral(node, triple)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.getDTRange()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.extractPureBackwardRules(list)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.preloadDeductions(graph)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.hideNode(node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.resetLPProfile(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.printLPProfile()
com.hp.hpl.jena.reasoner.rulesys.FBRuleInfGraph.accept(object)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.getSchemaGraph()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.prepare()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.rebind(graph)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.rebind()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.reset()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.findWithContinuation(finder, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.graphBaseFind(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.find(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.setTabled(node)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.getDerivation(triple)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.isTraceOn()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.logDerivation(derivation, triple)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.findDataMatches(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.processBuiltin(bindingenvironment, clauseentry, rule)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.silentAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.getTemp(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleInfGraph.extractAxioms()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.getIndex()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.setIndex(int)
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.simpleBind(node)
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.deref()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.getRawBoundValue()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.unbind()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.isUnbound()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.cloneNode()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.toString()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.equals(object)
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.hashCode()
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.sameValueAs(object)
com.hp.hpl.jena.reasoner.rulesys.Node_RuleVariable.sameNodeAs(node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.isNumeric(node)
com.hp.hpl.jena.reasoner.rulesys.Util.getIntValue(node)
com.hp.hpl.jena.reasoner.rulesys.Util.compareNumbers(node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.isInstant(node)
com.hp.hpl.jena.reasoner.rulesys.Util.compareInstants(node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.compareTypedLiterals(node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.comparable(node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.getPropValue(finder, node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.getPropValue(graph, node, node)
com.hp.hpl.jena.reasoner.rulesys.Util.getPropValue(node, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.Util.doGetPropValue(closableiterator)
com.hp.hpl.jena.reasoner.rulesys.Util.convertList(node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.Util.convertList(list, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.Util.makeIntNode(int)
com.hp.hpl.jena.reasoner.rulesys.Util.makeLongNode(long)
com.hp.hpl.jena.reasoner.rulesys.Util.makeDoubleNode(double)
com.hp.hpl.jena.reasoner.rulesys.Util.makeList(graph, node)
com.hp.hpl.jena.reasoner.rulesys.Util.doMakeList(graph, int, node)
com.hp.hpl.jena.reasoner.rulesys.Util.loadRuleParserFromResourceFile(string)
com.hp.hpl.jena.reasoner.rulesys.Util.loadURLFile(string)
com.hp.hpl.jena.reasoner.rulesys.Util.checkBinaryPredicate(property, resource)
com.hp.hpl.jena.reasoner.rulesys.Util.getIntegerPredicate(property, resource)
com.hp.hpl.jena.reasoner.rulesys.Util.convertBooleanPredicateArg(object, property)
com.hp.hpl.jena.reasoner.rulesys.Util.convertIntegerPredicateArg(object, property)
com.hp.hpl.jena.reasoner.rulesys.Util.updateParameter(object, property, resource)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasoner.doSetParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasoner.loadRulesLevel(string)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.RETERuleInfGraph.instantiateRuleEngine(list)
com.hp.hpl.jena.reasoner.rulesys.RETERuleInfGraph.performAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.RETERuleInfGraph.performDelete(triple)
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner.getPreload()
com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasoner.checkArgGraph(graph)
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.DAMLMicroReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.setMode(rulemode)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.setRules(list)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.setOWLTranslation(boolean)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.setTransitiveClosureCaching(boolean)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.setFunctorFiltering(boolean)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.addPreprocessingHook(rulepreprocesshook)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.removePreprocessingHook(rulepreprocesshook)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.doSetResourceParameter(property, resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.addRulesFromStrings(resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.addRuleFromString(string)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.addRulesFromURLs(resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.getHasRuleStatements(resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.getRuleSetURLStatements(resource)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.isHasRule(property)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.isRuleSet(property)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.isRuleSetURL(property)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.doSetParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.getPreload()
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.getBruleStore()
com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasoner.toString()
com.hp.hpl.jena.reasoner.rulesys.BuiltinRegistry.register(builtin, string)
com.hp.hpl.jena.reasoner.rulesys.BuiltinRegistry.register(builtin)
com.hp.hpl.jena.reasoner.rulesys.BuiltinRegistry.getImplementation(string)
com.hp.hpl.jena.reasoner.rulesys.BuiltinRegistry.getImplementationByURI(string)
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.getReasonerCapabilities()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.addDescription(model, resource)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.supportsProperty(property)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.bindSchema(model)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.getRules()
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.setParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.BasicForwardRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.RDFSForwardRuleReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.RDFSForwardRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.loadConfiguration(resource)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.addRules(list)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.getReasonerCapabilities()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.getBoundSchema()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.addDescription(model, resource)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.supportsProperty(property)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.bindSchema(model)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.setRules(list)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.getRules()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.loadRules(string)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.tablePredicate(node)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.getPreload()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.isTraceOn()
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.setParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.doSetRDFNodeParameter(property, rdfnode)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.doSetResourceParameter(property, resource)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.doSetParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.FBRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.RDFSRuleInfGraph.validate()
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.RDFSFBRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.getReasonerCapabilities()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.addDescription(model, resource)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.tablePredicate(node)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.supportsProperty(property)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.bindSchema(graph)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.bindSchema(model)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.getRules()
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.setParameter(object, property)
com.hp.hpl.jena.reasoner.rulesys.LPBackwardRuleReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasoner.loadRules()
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasoner.bind(graph)
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasoner.getGraphCapabilities()
com.hp.hpl.jena.reasoner.rulesys.Functor.accept(triple)
com.hp.hpl.jena.reasoner.rulesys.Functor.getName()
com.hp.hpl.jena.reasoner.rulesys.Functor.getArgs()
com.hp.hpl.jena.reasoner.rulesys.Functor.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.Functor.isGround()
com.hp.hpl.jena.reasoner.rulesys.Functor.isGround(bindingenvironment)
com.hp.hpl.jena.reasoner.rulesys.Functor.evalAsBodyClause(rulecontext)
com.hp.hpl.jena.reasoner.rulesys.Functor.safeEvalAsBodyClause(rulecontext)
com.hp.hpl.jena.reasoner.rulesys.Functor.getBoundArgs(bindingenvironment)
com.hp.hpl.jena.reasoner.rulesys.Functor.getImplementor()
com.hp.hpl.jena.reasoner.rulesys.Functor.setImplementor(builtin)
com.hp.hpl.jena.reasoner.rulesys.Functor.toString()
com.hp.hpl.jena.reasoner.rulesys.Functor.isFunctor(node)
com.hp.hpl.jena.reasoner.rulesys.Functor.equals(object)
com.hp.hpl.jena.reasoner.rulesys.Functor.hashCode()
com.hp.hpl.jena.reasoner.rulesys.Functor.sameAs(object)
com.hp.hpl.jena.reasoner.rulesys.Functor.makeFunctorNode(node, string)
com.hp.hpl.jena.reasoner.rulesys.Functor.makeFunctorNode(functor)
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory.theInstance()
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.Rule.allMonotonic(clauseentry)
com.hp.hpl.jena.reasoner.rulesys.Rule.bodyLength()
com.hp.hpl.jena.reasoner.rulesys.Rule.getBodyElement(int)
com.hp.hpl.jena.reasoner.rulesys.Rule.getBody()
com.hp.hpl.jena.reasoner.rulesys.Rule.headLength()
com.hp.hpl.jena.reasoner.rulesys.Rule.getHeadElement(int)
com.hp.hpl.jena.reasoner.rulesys.Rule.getHead()
com.hp.hpl.jena.reasoner.rulesys.Rule.isBackward()
com.hp.hpl.jena.reasoner.rulesys.Rule.setBackward(boolean)
com.hp.hpl.jena.reasoner.rulesys.Rule.getName()
com.hp.hpl.jena.reasoner.rulesys.Rule.setNumVars(int)
com.hp.hpl.jena.reasoner.rulesys.Rule.getNumVars()
com.hp.hpl.jena.reasoner.rulesys.Rule.findVars(int, object)
com.hp.hpl.jena.reasoner.rulesys.Rule.findVars(int, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.Rule.findVars(functor, int)
com.hp.hpl.jena.reasoner.rulesys.Rule.maxVarIndex(int, node)
com.hp.hpl.jena.reasoner.rulesys.Rule.instantiate(bindingenvironment)
com.hp.hpl.jena.reasoner.rulesys.Rule.cloneRule()
com.hp.hpl.jena.reasoner.rulesys.Rule.cloneClauseArray(bindingenvironment, clauseentry, map)
com.hp.hpl.jena.reasoner.rulesys.Rule.cloneClause(bindingenvironment, clauseentry, map)
com.hp.hpl.jena.reasoner.rulesys.Rule.cloneFunctor(bindingenvironment, functor, map)
com.hp.hpl.jena.reasoner.rulesys.Rule.cloneNode(bindingenvironment, map, node)
com.hp.hpl.jena.reasoner.rulesys.Rule.isMonotonic()
com.hp.hpl.jena.reasoner.rulesys.Rule.isAxiom()
com.hp.hpl.jena.reasoner.rulesys.Rule.toString()
com.hp.hpl.jena.reasoner.rulesys.Rule.toShortString()
com.hp.hpl.jena.reasoner.rulesys.Rule.parseRule(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.rulesFromURL(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.rulesParserFromReader(bufferedreader)
com.hp.hpl.jena.reasoner.rulesys.Rule.extractURI(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.nextArg(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.nextAfterArg(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.nextSplit(boolean, int, string)
com.hp.hpl.jena.reasoner.rulesys.Rule.parseRules(parser)
com.hp.hpl.jena.reasoner.rulesys.Rule.parseRules(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.registerPrefix(string, string)
com.hp.hpl.jena.reasoner.rulesys.Rule.registerPrefixMap(map)
com.hp.hpl.jena.reasoner.rulesys.Rule.getPrefixMap()
com.hp.hpl.jena.reasoner.rulesys.Rule.addRulesPreload(list)
com.hp.hpl.jena.reasoner.rulesys.Rule.getRulesPreload()
com.hp.hpl.jena.reasoner.rulesys.Rule.nextToken()
com.hp.hpl.jena.reasoner.rulesys.Rule.recentTokens()
com.hp.hpl.jena.reasoner.rulesys.Rule.peekToken()
com.hp.hpl.jena.reasoner.rulesys.Rule.pushback(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.isSeparator(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.isSyntax(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.getNodeVar(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.parseNode(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.parseNumber(string)
com.hp.hpl.jena.reasoner.rulesys.Rule.parseNodeList()
com.hp.hpl.jena.reasoner.rulesys.Rule.parseClause()
com.hp.hpl.jena.reasoner.rulesys.Rule.parseRule()
com.hp.hpl.jena.reasoner.rulesys.Rule.doParseRule(boolean)
com.hp.hpl.jena.reasoner.rulesys.Rule.equals(object)
com.hp.hpl.jena.reasoner.rulesys.Rule.hashCode()
com.hp.hpl.jena.reasoner.rulesys.Rule.sameAs(object)
com.hp.hpl.jena.reasoner.rulesys.Rule.constructMessage(parser, string)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.getReifier()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.allNodes()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.allNodes(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.close()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.find(triplematch)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.findEither(boolean, triplematch)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.findExposed(triplematch)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.getParentGraph()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.getStyle()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.handledAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.handledRemove(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.hasTriple(node)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.hasTriple(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.reifyAs(node, triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.remove(node, triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.remove(triple)
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.size()
com.hp.hpl.jena.reasoner.rulesys.BasicFBReifier.getTriple(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.find(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.reset()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.addRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.deleteRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getAllRules()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.deleteAllRules()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.halt()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.setTraceOn(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.isTraceOn()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getDerivationLogging()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getRuleStore()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getInfGraph()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.detach(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.checkSafeToUpdate()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.tablePredicate(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.generatorFor(list, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.generatorFor(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.schedule(lpagendaentry)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.pump(lpinterpretercontext)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getNextAgendaEntry()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.checkForCompletions()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.incrementProfile(ruleclausecode)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.resetProfile(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.printProfile()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.getCount()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.inc()
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.compareTo(count)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBRuleEngine.toString()
com.hp.hpl.jena.reasoner.rulesys.impl.MutableTriplePattern.setPattern(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment.getGroundVersion(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment.bind(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPBindingEnvironment.instantiate(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook.run(fbruleinfgraph, finder, graph)
com.hp.hpl.jena.reasoner.rulesys.impl.RDFSCMPPreprocessHook.needsRerun(fbruleinfgraph, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame.allocate(int)
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame.getRule()
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrame.toString()
com.hp.hpl.jena.reasoner.rulesys.impl.RETETerminal.setContext(forwardruleinfgraphi, reteengine)
com.hp.hpl.jena.reasoner.rulesys.impl.RETETerminal.fire(bindingvector, boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.RETETerminal.clone(map, reterulecontext)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getCode()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getArgs()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getRule()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.compile(lprulestore)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.termIndex(int)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.print(printstream)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.toString()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitBindingTests()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.aIndex(node)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitHead(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitHeadGet(int, node)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitBody(lprulestore, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getList()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitBodyPut(boolean, int, node)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.emitBody(functor)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getFinalCode()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.getFinalArgs()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.classifyVariables(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.isTemp(node_rulevariable)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.isDummy(node_rulevariable)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.termVars(clauseentry)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleClauseCode.main(string)
com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame.nextMatch(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame.init(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.TripleMatchFrame.close()
com.hp.hpl.jena.reasoner.rulesys.impl.GenericTripleMatchFrame.bindResult(lpinterpreter, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.GenericTripleMatchFrame.functorMatch(lpinterpreter, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.GenericTripleMatchFrame.init(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEClauseFilter.compile(int, list, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEClauseFilter.setContinuation(retesinknode)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEClauseFilter.fire(boolean, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEClauseFilter.getTripleValue(byte, functor, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEClauseFilter.clone(map, reterulecontext)
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.moveForward()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.notifyBlockedOn(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.notifyFinished(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.setReady(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.isReady()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.close()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.hasNext()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.next()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.checkCME()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.checkClosed()
com.hp.hpl.jena.reasoner.rulesys.impl.LPTopGoalIterator.remove()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.getEnv()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.getEnvStack()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.getGraph()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.getRule()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.setRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.addTriple(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.add(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.flushPending()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.contains(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.contains(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.find(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.getNextTriple()
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.resetEnv(int)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.silentAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BFRuleContext.remove(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.WrappedReasonerFactory.create(resource)
com.hp.hpl.jena.reasoner.rulesys.impl.WrappedReasonerFactory.loadSchemas(model, resource)
com.hp.hpl.jena.reasoner.rulesys.impl.WrappedReasonerFactory.getCapabilities()
com.hp.hpl.jena.reasoner.rulesys.impl.WrappedReasonerFactory.getURI()
com.hp.hpl.jena.reasoner.rulesys.impl.StateFlag.toString()
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.getEnv()
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.getGraph()
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.getEngine()
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.getRule()
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.setRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.setEnv(bindingenvironment)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.contains(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.contains(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.find(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.silentAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.remove(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.add(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.shouldFire(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext.shouldStillFire()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.getEnvironment()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.getBinding(node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.getGroundVersion(node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.bind(int, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.bind(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.partInstantiate(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.instantiate(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.toString()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.unify(int, triplepattern, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.unify(node, node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.equals(object)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingVector.hashCode()
com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame.nextMatch(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.TopLevelTripleMatchFrame.close()
com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook.run(fbruleinfgraph, finder, graph)
com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook.translateIntersectionList(finder, list, node)
com.hp.hpl.jena.reasoner.rulesys.impl.OWLRuleTranslationHook.needsRerun(fbruleinfgraph, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.init(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.preserveState(list)
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.restoreState(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.nextMatch(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.isReady()
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.setReady()
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.setFinished()
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.pump()
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.getGenerator()
com.hp.hpl.jena.reasoner.rulesys.impl.ConsumerChoicePointFrame.getConsumingContext()
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation.noteMatch(int, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation.getResult()
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation.getMatchList()
com.hp.hpl.jena.reasoner.rulesys.impl.EnvironmentFrameWithDerivation.initDerivationRecord(node)
com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache.getTemp(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache.getFirst()
com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache.getSecond()
com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache.equals(object)
com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache.hashCode()
com.hp.hpl.jena.reasoner.rulesys.impl.GenericChoiceFrame.init(lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.GenericChoiceFrame.setContinuation(int, int)
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame.init(list, lpinterpreter)
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame.hasNext()
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame.nextClause()
com.hp.hpl.jena.reasoner.rulesys.impl.ChoicePointFrame.noteSuccess()
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.addAll(lprulestore)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.tablePredicate(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.codeFor(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.codeFor(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.isIndexedPredicate(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.isTabled(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.isTabled(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.compileAll()
com.hp.hpl.jena.reasoner.rulesys.impl.LPRuleStore.doAddRemoveRule(boolean, rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.addAll(rulestore)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.addRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.deleteRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.addRemoveRule(boolean, rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.doAddRemoveRule(boolean, rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.rulesFor(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.getAllRules()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.deleteAllRules()
com.hp.hpl.jena.reasoner.rulesys.impl.RuleStore.checkAll(iterator, list, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject.linkTo(frameobject)
com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject.fastLinkTo(frameobject)
com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject.getLink()
com.hp.hpl.jena.reasoner.rulesys.impl.FrameObject.close()
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.contains(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.contains(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.find(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.getEnv()
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.setEnv(bindingenvironment)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.getGraph()
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.getRule()
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.setRule(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.silentAdd(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.add(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.remove(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.BBRuleContext.getTemp(node, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.push()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.unwind()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.commit()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.reset(int)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.getEnvironment()
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.getBinding(node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.getGroundVersion(node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.bind(int, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.bind(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.bindNoCheck(node, node_rulevariable)
com.hp.hpl.jena.reasoner.rulesys.impl.BindingStack.instantiate(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph.find(triplematch)
com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph.find(node, node, node, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph.getRawGraph()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.init(boolean, finder)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.fastInit(finder)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.add(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.delete(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.getNRulesFired()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.shouldTrace()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.getRuleStore()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.setRuleStore(object)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.requestRuleFiring(bindingenvironment, boolean, rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.compile(boolean, list)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.recordPredicatePattern(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.createTerminal(rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.addTriple(boolean, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.deleteTriple(boolean, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.incRuleCount()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.nextAddTriple()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.nextDeleteTriple()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.runAll()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.inject(boolean, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.testTripleInsert(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.findAndProcessAxioms()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.findAndProcessActions()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine.getClause()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.init(boolean, finder)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.fastInit(finder)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.add(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.delete(triple)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.getNRulesFired()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.shouldTrace()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.setDerivationLogging(boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.getRuleStore()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.setRuleStore(object)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.addSet(bfrulecontext)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.compile(boolean, list)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.findAndProcessAxioms()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.findAndProcessActions()
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.matchRuleBody(bfrulecontext, int)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.matchClauseList(bfrulecontext, list)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.scoreNodeBoundness(bindingenvironment, node)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.match(bindingstack, triple, triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.match(bindingstack, node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.FRuleEngine.getClause()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.setSibling(retequeue)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.setContinuation(retesinknode)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.fire(bindingvector, boolean)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.getCount()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.inc()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.dec()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.setCount(int)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEQueue.clone(map, reterulecontext)
com.hp.hpl.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook.run(fbruleinfgraph, finder, graph)
com.hp.hpl.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook.translateIntersectionList(finder, list, node)
com.hp.hpl.jena.reasoner.rulesys.impl.OWLExptRuleTranslationHook.needsRerun(fbruleinfgraph, triple)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet.add(bindingenvironment, boolean, rule)
com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet.isEmpty()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet.fireOne()
com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet.execute(boolean, reterulecontext)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.setTopInterpreter(lpinterpretercontext)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.close()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.setState(lpinterpreterstate)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.next()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.getEngine()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.getChoiceFrame()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.getContext()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.run()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.getArgTrace()
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.setupTripleMatchCall(int, int)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.setupClauseCall(boolean, int, int, list)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.setupTabledCall(int, int)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.preserveState(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.restoreState(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.unify(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.bind(node, node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.unwindTrail(int)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.deref(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.isGrounded(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.deref(triplepattern)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.derefPossFunctor(node)
com.hp.hpl.jena.reasoner.rulesys.impl.LPInterpreter.standardize(map, node)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.numResults()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.isReady()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.setReady(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.isComplete()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.setComplete()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.addConsumer(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.removeConsumer(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.notifyResults()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.notifyBlockedOn(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.notifyFinished(consumerchoicepointframe)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.pump()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.pump(lpinterpreterstate)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.getGenerator()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.checkForCompletions()
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.checkForCompletions(collection)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.runCompletionCheck(set)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.postCompletionCheckScan(set)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.propagateLive(set)
com.hp.hpl.jena.reasoner.rulesys.impl.Generator.toString()
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.getURI()
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.checkArgs(int, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.isSafe()
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.isMonotonic()
com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin.getArg(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.LessThan.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.LessThan.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.LessThan.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Quotient.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Quotient.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Quotient.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NotLiteral.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotLiteral.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotLiteral.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NotDType.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotDType.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotDType.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Regex.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Regex.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Regex.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Regex.getString(node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.StrConcat.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.StrConcat.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.StrConcat.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.StrConcat.lex(node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.AddOne.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.AddOne.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.AddOne.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Drop.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Drop.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Drop.isMonotonic()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsLiteral.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsLiteral.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsLiteral.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Product.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Product.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Product.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Now.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Now.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Now.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.AssertDisjointPairs.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.AssertDisjointPairs.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.AssertDisjointPairs.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.UriConcat.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.UriConcat.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NotFunctor.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotFunctor.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotFunctor.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeInstance.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeInstance.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Remove.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Remove.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Remove.isMonotonic()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListLength.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListLength.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListLength.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListLength.getLength(node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Table.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Table.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Difference.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Difference.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Difference.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NotBNode.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotBNode.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotBNode.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListContains.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListContains.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListContains.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListContains.listContains(node, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Print.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Print.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Print.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Print.print(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsFunctor.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Sum.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Sum.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Sum.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.LE.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.LE.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.LE.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NotEqual.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotEqual.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.NotEqual.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Max.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Max.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Max.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.IsDType.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsDType.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsDType.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.IsDType.isTypeOK(node, node)
com.hp.hpl.jena.reasoner.rulesys.builtins.Unbound.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Unbound.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Min.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Min.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Min.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual.listEqual(node, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.TableAll.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.TableAll.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotContains.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotContains.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotContains.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeTemp.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeTemp.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeTemp.headAction(node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEntry.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEntry.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEntry.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListEntry.getEntry(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.MakeSkolem.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.CountLiteralValues.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.CountLiteralValues.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.CountLiteralValues.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Bound.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Bound.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NoValue.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.NoValue.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.NoValue.isMonotonic()
com.hp.hpl.jena.reasoner.rulesys.builtins.GreaterThan.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.GreaterThan.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.GreaterThan.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Equal.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Equal.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.Equal.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Hide.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.Hide.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Hide.headAction(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.Hide.doHide(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotEqual.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotEqual.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListNotEqual.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.IsBNode.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsBNode.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.IsBNode.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.GE.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.GE.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.GE.bodyCall(int, node, rulecontext)
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsSubject.getName()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsSubject.getArgLength()
com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsSubject.headAction(int, node, rulecontext)
com.hp.hpl.jena.n3.N3JenaWriterTriples.writeModel(model)
com.hp.hpl.jena.n3.N3JenaWriterTriples.padCol(string)
com.hp.hpl.jena.n3.N3JenaWriter.chooseWriter()
com.hp.hpl.jena.n3.N3JenaWriter.write(model, string, writer)
com.hp.hpl.jena.n3.N3JenaWriter.write(model, outputstream, string)
com.hp.hpl.jena.n3.N3JenaWriter.setProperty(object, string)
com.hp.hpl.jena.n3.N3JenaWriter.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.n3.N3JenaWriterCommon.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.n3.N3JenaWriterCommon.setProperty(object, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.write(model, string, writer)
com.hp.hpl.jena.n3.N3JenaWriterCommon.write(model, outputstream, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.startWriting()
com.hp.hpl.jena.n3.N3JenaWriterCommon.finishWriting()
com.hp.hpl.jena.n3.N3JenaWriterCommon.prepare(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.processModel(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeModel(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.listSubjects(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeOneGraphNode(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writePropertiesForSubject(closableiterator, resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.skipThisSubject(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeSubject(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeHeader(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.getOutput()
com.hp.hpl.jena.n3.N3JenaWriterCommon.getPrefixes()
com.hp.hpl.jena.n3.N3JenaWriterCommon.writePrefixes(model)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeObjectList(property, resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.formatNode(rdfnode)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeObject(rdfnode)
com.hp.hpl.jena.n3.N3JenaWriterCommon.writeLiteral(literal)
com.hp.hpl.jena.n3.N3JenaWriterCommon.preparePropertiesForSubject(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.formatResource(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.formatLiteral(literal)
com.hp.hpl.jena.n3.N3JenaWriterCommon.formatProperty(property)
com.hp.hpl.jena.n3.N3JenaWriterCommon.formatURI(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.splitIdx(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkPrefixedName(string, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkPrefixPart(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkNamePart(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkNameTail(characteriterator)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkNameStartChar(char)
com.hp.hpl.jena.n3.N3JenaWriterCommon.checkNameChar(char)
com.hp.hpl.jena.n3.N3JenaWriterCommon.string(boolean, string, stringbuffer)
com.hp.hpl.jena.n3.N3JenaWriterCommon.calcPropertyPadding(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.pad(int)
com.hp.hpl.jena.n3.N3JenaWriterCommon.countProperties(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.countProperties(property, resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.countArcsTo(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.countArcsTo(property, resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.rdfListIterator(resource)
com.hp.hpl.jena.n3.N3JenaWriterCommon.getStringValue(string, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.getBooleanValue(boolean, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.getIntValue(int, string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.getPropValue(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.absolutePropName(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.localPropName(string)
com.hp.hpl.jena.n3.N3JenaWriterCommon.isOpaque(string)
com.hp.hpl.jena.n3.N3IndentedWriter.getWriter()
com.hp.hpl.jena.n3.N3IndentedWriter.getRow()
com.hp.hpl.jena.n3.N3IndentedWriter.getCol()
com.hp.hpl.jena.n3.N3IndentedWriter.getIndent()
com.hp.hpl.jena.n3.N3IndentedWriter.incIndent(int)
com.hp.hpl.jena.n3.N3IndentedWriter.decIndent(int)
com.hp.hpl.jena.n3.N3IndentedWriter.setIndent(int)
com.hp.hpl.jena.n3.N3IndentedWriter.print(string)
com.hp.hpl.jena.n3.N3IndentedWriter.println(string)
com.hp.hpl.jena.n3.N3IndentedWriter.println()
com.hp.hpl.jena.n3.N3IndentedWriter.padTo()
com.hp.hpl.jena.n3.N3IndentedWriter.flush()
com.hp.hpl.jena.n3.N3IndentedWriter.close()
com.hp.hpl.jena.n3.JenaReaderBase.read(model, reader, string)
com.hp.hpl.jena.n3.JenaReaderBase.read(java, model)
com.hp.hpl.jena.n3.JenaReaderBase.read(inputstream, model, string)
com.hp.hpl.jena.n3.JenaReaderBase.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.n3.JenaReaderBase.setProperty(object, string)
com.hp.hpl.jena.n3.JenaReaderBase.checkReader(reader)
com.hp.hpl.jena.n3.JenaReaderBase.readImpl(model, reader, string)
com.hp.hpl.jena.n3.JenaReaderBase.readWorker(model, reader, string)
com.hp.hpl.jena.n3.IRIResolver.resolveFileURL(string)
com.hp.hpl.jena.n3.IRIResolver.resolve(string, string)
com.hp.hpl.jena.n3.IRIResolver.resolveIRI(string, string)
com.hp.hpl.jena.n3.IRIResolver.getBaseIRI()
com.hp.hpl.jena.n3.IRIResolver.resolve(string)
com.hp.hpl.jena.n3.IRIResolver.exceptions(iri)
com.hp.hpl.jena.n3.IRIResolver.suppressExceptions()
com.hp.hpl.jena.n3.IRIResolver.resolveGlobal(string)
com.hp.hpl.jena.n3.IRIResolver.chooseBaseURI()
com.hp.hpl.jena.n3.IRIResolver.chooseBaseURI(string)
com.hp.hpl.jena.n3.N3JenaWriterPP.prepare(model)
com.hp.hpl.jena.n3.N3JenaWriterPP.prepareLists(model)
com.hp.hpl.jena.n3.N3JenaWriterPP.checkListElement(resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.prepareOneRefBNodes(model)
com.hp.hpl.jena.n3.N3JenaWriterPP.testOneRefBNode(rdfnode)
com.hp.hpl.jena.n3.N3JenaWriterPP.preparePropertiesForSubject(resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.skipThisSubject(resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.startWriting()
com.hp.hpl.jena.n3.N3JenaWriterPP.finishWriting()
com.hp.hpl.jena.n3.N3JenaWriterPP.writeObjectList(property, resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.isSimpleObject(rdfnode)
com.hp.hpl.jena.n3.N3JenaWriterPP.writeObject(rdfnode)
com.hp.hpl.jena.n3.N3JenaWriterPP.writeList(resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.writeListUnpretty(resource)
com.hp.hpl.jena.n3.N3JenaWriterPP.writeStatement(statement)
com.hp.hpl.jena.n3.N3JenaWriterPP.allocateDatastructures()
com.hp.hpl.jena.n3.N3JenaWriterPP.clearDatastructures()
com.hp.hpl.jena.n3.turtle.ParserTurtle.parse(graph, inputstream, string)
com.hp.hpl.jena.n3.turtle.ParserTurtle.parse(graph, reader, string)
com.hp.hpl.jena.n3.turtle.TurtleEventNull.triple(int, int, triple)
com.hp.hpl.jena.n3.turtle.TurtleEventNull.startFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleEventNull.endFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleEventNull.prefix(int, int, string, string)
com.hp.hpl.jena.n3.turtle.LabelToNodeMap.asNode(string)
com.hp.hpl.jena.n3.turtle.LabelToNodeMap.allocNode()
com.hp.hpl.jena.n3.turtle.LabelToNodeMap.clear()
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.triple(int, int, triple)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.outputNode(node)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.startFormula(int, int)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.endFormula(int, int)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.prefix(int, int, string, string)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.writeString(printwriter, string)
com.hp.hpl.jena.n3.turtle.Turtle2NTriples.outputEsc(string)
com.hp.hpl.jena.n3.turtle.ParserBase.getBaseURI()
com.hp.hpl.jena.n3.turtle.ParserBase.setBaseURI(string)
com.hp.hpl.jena.n3.turtle.ParserBase.setBase(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.getPrefixMapping()
com.hp.hpl.jena.n3.turtle.ParserBase.setEventHandler(turtleeventhandler)
com.hp.hpl.jena.n3.turtle.ParserBase.emitTriple(int, int, triple)
com.hp.hpl.jena.n3.turtle.ParserBase.startFormula(int, int)
com.hp.hpl.jena.n3.turtle.ParserBase.endFormula(int, int)
com.hp.hpl.jena.n3.turtle.ParserBase.setPrefix(int, int, string, string)
com.hp.hpl.jena.n3.turtle.ParserBase.makePositiveInteger(string)
com.hp.hpl.jena.n3.turtle.ParserBase.createLiteralInteger(string)
com.hp.hpl.jena.n3.turtle.ParserBase.createLiteralDouble(string)
com.hp.hpl.jena.n3.turtle.ParserBase.createLiteralDecimal(string)
com.hp.hpl.jena.n3.turtle.ParserBase.createLiteral(node, string, string)
com.hp.hpl.jena.n3.turtle.ParserBase.createLiteral(string, string, string)
com.hp.hpl.jena.n3.turtle.ParserBase.integerValue(string)
com.hp.hpl.jena.n3.turtle.ParserBase.doubleValue(string)
com.hp.hpl.jena.n3.turtle.ParserBase.stripQuotes(string)
com.hp.hpl.jena.n3.turtle.ParserBase.stripQuotes3(string)
com.hp.hpl.jena.n3.turtle.ParserBase.stripChars(int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.resolveQuotedIRI(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.resolveIRI(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase._resolveIRI(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.resolvePName(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.myExpandPrefix(prefixmapping, string)
com.hp.hpl.jena.n3.turtle.ParserBase.createListNode()
com.hp.hpl.jena.n3.turtle.ParserBase.createBNode()
com.hp.hpl.jena.n3.turtle.ParserBase.createBNode(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.createVariable(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.createNode(string)
com.hp.hpl.jena.n3.turtle.ParserBase.isBNodeIRI(string)
com.hp.hpl.jena.n3.turtle.ParserBase.throwParseException(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.fixupPrefix(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.unescapeStr(string)
com.hp.hpl.jena.n3.turtle.ParserBase.unescapeStr(int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.unescape(boolean, char, int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.hex(int, int, int, int, string)
com.hp.hpl.jena.n3.turtle.ParserBase.exMsg(int, int, string)
com.hp.hpl.jena.n3.turtle.TurtleRDFGraphInserter.triple(int, int, triple)
com.hp.hpl.jena.n3.turtle.TurtleRDFGraphInserter.startFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleRDFGraphInserter.endFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleRDFGraphInserter.prefix(int, int, string, string)
com.hp.hpl.jena.n3.turtle.TurtleReader.readWorker(model, reader, string)
com.hp.hpl.jena.n3.turtle.TurtleEventDump.triple(int, int, triple)
com.hp.hpl.jena.n3.turtle.TurtleEventDump.startFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleEventDump.endFormula(int, int)
com.hp.hpl.jena.n3.turtle.TurtleEventDump.mark(int, int)
com.hp.hpl.jena.n3.turtle.TurtleEventDump.prefix(int, int, string, string)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.hexval(char)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.setTabSize(int)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getTabSize(int)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ExpandBuff(boolean)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.FillBuff()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReadByte()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.BeginToken()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.AdjustBuffSize()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.UpdateLineColumn(char)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.readChar()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getColumn()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getLine()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getEndColumn()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getEndLine()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getBeginColumn()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.getBeginLine()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.backup(int)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, int, java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, int, java, string)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, int, java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, java, string)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(int, int, java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(java, string)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.ReInit(java)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.GetImage()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.GetSuffix(int)
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.Done()
com.hp.hpl.jena.n3.turtle.parser.JavaCharStream.adjustBeginLineColumn(int, int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.setDebugStream(java)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjStopAtPos(int, int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa0_0()
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa1_0(long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa2_0(long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa3_0(long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa4_0(long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa5_0(long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveStringLiteralDfa6_0(long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjMoveNfa_0(int, int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCanMove_0(int, int, int, long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCanMove_1(int, int, int, long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCanMove_2(int, int, int, long, long)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.ReInit(javacharstream)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.ReInitRounds()
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.ReInit(int, javacharstream)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.SwitchTo(int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjFillToken()
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.getNextToken()
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCheckNAdd(int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjAddStates(int, int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCheckNAddTwoStates(int, int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParserTokenManager.jjCheckNAddStates(int, int)
com.hp.hpl.jena.n3.turtle.parser.TokenMgrError.addEscapes(string)
com.hp.hpl.jena.n3.turtle.parser.TokenMgrError.LexicalError(boolean, char, int, int, int, string)
com.hp.hpl.jena.n3.turtle.parser.TokenMgrError.getMessage()
com.hp.hpl.jena.n3.turtle.parser.ParseException.initialise(int, string, token)
com.hp.hpl.jena.n3.turtle.parser.ParseException.add_escapes(string)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.parse()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Statement()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Directive()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.TriplesSameSubject()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.PropertyList(node)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.PropertyListNotEmpty(node)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.ObjectList(node, node)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Object(node, node)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Verb()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.TriplesNode()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.BlankNodePropertyList()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Collection()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.GraphNode()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.VarOrTerm()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Formula()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Var()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.GraphTerm()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.NumericLiteral()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.RDFLiteral()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.Langtag()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.AnyDirective()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.BooleanLiteral()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.String()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.IRIref()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.PrefixedName()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.BlankNode()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.IRI_REF()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.jj_la1_init_0()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.jj_la1_init_1()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.jj_la1_init_2()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.ReInit(java)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.ReInit(java, string)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.ReInit(java)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.ReInit(turtleparsertokenmanager)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.jj_consume_token(int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.getNextToken()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.getToken(int)
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.jj_ntk()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.generateParseException()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.enable_tracing()
com.hp.hpl.jena.n3.turtle.parser.TurtleParser.disable_tracing()
com.hp.hpl.jena.n3.turtle.parser.Token.getValue()
com.hp.hpl.jena.n3.turtle.parser.Token.toString()
com.hp.hpl.jena.n3.turtle.parser.Token.newToken(int, string)
com.hp.hpl.jena.n3.turtle.parser.Token.newToken(int)
com.hp.hpl.jena.xmloutput.impl.Basic.writeBody(boolean, model, printwriter, string)
com.hp.hpl.jena.xmloutput.impl.Basic.setSpaceFromTabCount()
com.hp.hpl.jena.xmloutput.impl.Basic.writeSpace(printwriter)
com.hp.hpl.jena.xmloutput.impl.Basic.writeRDFHeader(model, printwriter)
com.hp.hpl.jena.xmloutput.impl.Basic.writeRDFStatements(model, printwriter)
com.hp.hpl.jena.xmloutput.impl.Basic.writeRDFTrailer(printwriter, string)
com.hp.hpl.jena.xmloutput.impl.Basic.writeRDFStatements(model, printwriter, resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writeDescriptionHeader(printwriter, resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writePredicate(printwriter, statement)
com.hp.hpl.jena.xmloutput.impl.Basic.unblockAll()
com.hp.hpl.jena.xmloutput.impl.Basic.blockRule(resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writeDescriptionTrailer(printwriter, resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writeResourceId(printwriter, resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writeResourceReference(printwriter, resource)
com.hp.hpl.jena.xmloutput.impl.Basic.writeLiteral(literal, printwriter)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.warn(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.warn(exception, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setLogger(simplelogger)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.unblockAll()
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.blockRule(resource)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.writeBody(boolean, model, printwriter, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.anonId(resource)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.shortAnonId(resource)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.longAnonId(resource)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.addNameSpace(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.isDefaultNamespace(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.addNameSpaces(model)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.primeNamespace(model)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setupMaps()
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.workOutNamespaces()
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setFromWriterSystemProperties(map, set)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setFromGivenNamespaces(map, set)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setNsPrefix(string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.getPrefixFor(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.xmlnsDecl()
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.rdfEl(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.startElementTag(string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.startElementTag(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.attributeTag(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.attributeTag(string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.rdfAt(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.endElementTag(string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.endElementTag(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.splitTag(int, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.tag(boolean, int, string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.cookUpAttribution(int, string, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.write(model, outputstream, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.write(model, string, writer)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setupNamespaces(model, model)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.writeXMLBody(model, printwriter, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.isPredefinedEntityName(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.attributeQuoted(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.substitutedAttribute(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.generateDoctypeDeclaration(model, printwriter)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.strForPrefix(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.usesPrefix(model, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.writeXMLDeclaration(printwriter, writer)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.escapedId(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.escape(char, stringbuffer)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setProperty(object, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setAttributeQuoteChar(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setWidth(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setTab(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setShowDoctypeDeclaration(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setShowXmlDeclaration(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.getBoolean(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.getBooleanValue(boolean, object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.stringToBoolean(boolean, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setTypes(resource)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.setBlockRules(object)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.relativize(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.relativize(iri, string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.checkURI(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.checkLegalPrefix(string)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.flags2str(int)
com.hp.hpl.jena.xmloutput.impl.BaseXMLWriter.str2flags(string)
com.hp.hpl.jena.xmloutput.impl.PairEntry.equals(object)
com.hp.hpl.jena.xmloutput.impl.PairEntry.getKey()
com.hp.hpl.jena.xmloutput.impl.PairEntry.getValue()
com.hp.hpl.jena.xmloutput.impl.PairEntry.hashCode()
com.hp.hpl.jena.xmloutput.impl.PairEntry.setValue(object)
com.hp.hpl.jena.xmloutput.impl.Unparser.accept(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.setLocalName(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.write()
com.hp.hpl.jena.xmloutput.impl.Unparser.setTopLevelTypes(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.setXMLBase(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.wRDF()
com.hp.hpl.jena.xmloutput.impl.Unparser.wObjStar()
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyElt(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltCompact(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltLiteral(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltDatatype(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltResource(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltValue(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltValueString(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wValueString(literal)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltValueObj(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltDamlCollection(property, rdfnode, statement, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropAttrAll(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropAttrSome(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wObj(boolean, resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeStart(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeEnd(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeStart(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeEnd(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeStart(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeEnd(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wDescription(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypedNode(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypedNodeOrDescription(resource, resource, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypedNodeOrDescriptionCompact(list, resource, resource, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypedNodeNoProperties(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypedNodeOrDescriptionLong(list, resource, resource, wtype)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropertyEltStar(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wLiEltStar(iterator)
com.hp.hpl.jena.xmloutput.impl.Unparser.wIdAboutAttrOpt(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wIdAttrOpt(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wAboutAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wURIreference(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.wURIreference(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wIdRefAttrOpt(resource, statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.wIdAttrReified(statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.wResourceNodeIDAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wNodeIDAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wResourceAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wQNameAttr(property)
com.hp.hpl.jena.xmloutput.impl.Unparser.printRdfAt(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropAttr(property, rdfnode)
com.hp.hpl.jena.xmloutput.impl.Unparser.wTypeAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wPropAttrString(literal, property)
com.hp.hpl.jena.xmloutput.impl.Unparser.wParseDamlCollection()
com.hp.hpl.jena.xmloutput.impl.Unparser.wParseCollection()
com.hp.hpl.jena.xmloutput.impl.Unparser.wParseLiteral()
com.hp.hpl.jena.xmloutput.impl.Unparser.wDatatype(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.wParseResource()
com.hp.hpl.jena.xmloutput.impl.Unparser.printNameSpaceDefn()
com.hp.hpl.jena.xmloutput.impl.Unparser.filler(int)
com.hp.hpl.jena.xmloutput.impl.Unparser.tab()
com.hp.hpl.jena.xmloutput.impl.Unparser.maybeNewline()
com.hp.hpl.jena.xmloutput.impl.Unparser.quote(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.q(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.print(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.indentPlus()
com.hp.hpl.jena.xmloutput.impl.Unparser.indentMinus()
com.hp.hpl.jena.xmloutput.impl.Unparser.error(string)
com.hp.hpl.jena.xmloutput.impl.Unparser.addTypeNameSpaces()
com.hp.hpl.jena.xmloutput.impl.Unparser.getNameSpace(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.isGenuineAnon(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.isLocalReference(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.getLocalName(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.increaseObjectCount(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wantReification(statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.wantReification(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.wantReification(resource, statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.reification(statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.hasProperties(resource, statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.listProperties(resource, statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.canBeAttribute(set, statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.allPropsAreAttr(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.done(statement)
com.hp.hpl.jena.xmloutput.impl.Unparser.getDamlList(rdfnode)
com.hp.hpl.jena.xmloutput.impl.Unparser.getRDFList(rdfnode)
com.hp.hpl.jena.xmloutput.impl.Unparser.getList(property, property, rdfnode, resource, resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.getType(resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.isOKType(rdfnode)
com.hp.hpl.jena.xmloutput.impl.Unparser.findInfiniteCycles()
com.hp.hpl.jena.xmloutput.impl.Unparser.allInfiniteLeft()
com.hp.hpl.jena.xmloutput.impl.Unparser.pleasingTypeIterator(set)
com.hp.hpl.jena.xmloutput.impl.Unparser.listSubjects(resource, resource, resource, resource, resource)
com.hp.hpl.jena.xmloutput.impl.Unparser.closeAllResIterators()
com.hp.hpl.jena.xmloutput.impl.Unparser.modelListSubjects()
com.hp.hpl.jena.xmloutput.impl.Abbreviated.unblockAll()
com.hp.hpl.jena.xmloutput.impl.Abbreviated.blockRule(resource)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.setTypes(resource)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.write(model, string, writer)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.writeBody(boolean, model, printwriter, string)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.error(exception)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.warning(exception)
com.hp.hpl.jena.xmloutput.impl.Abbreviated.fatalError(exception)
com.hp.hpl.jena.xmloutput.impl.Relation.set(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.set11(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.set1N(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.setN1(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.setNN(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.clear(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.clearX(set, t)
com.hp.hpl.jena.xmloutput.impl.Relation.clearX(set, t)
com.hp.hpl.jena.xmloutput.impl.Relation.innerAdd(map, t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.innerClear(map, t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.get(t, t)
com.hp.hpl.jena.xmloutput.impl.Relation.transitiveClosure()
com.hp.hpl.jena.xmloutput.impl.Relation.getDiagonal()
com.hp.hpl.jena.xmloutput.impl.Relation.copy()
com.hp.hpl.jena.xmloutput.impl.Relation.forward(t)
com.hp.hpl.jena.xmloutput.impl.Relation.backward(t)
com.hp.hpl.jena.xmloutput.impl.Relation.inner(x, x)
com.hp.hpl.jena.xmloutput.impl.Relation.pairEntry(map)
com.hp.hpl.jena.xmloutput.impl.Relation.iterator(entry)
com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException.constructMessage(class, enhnode)
com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException.getBadGraph()
com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException.getBadClass()
com.hp.hpl.jena.enhanced.UnsupportedPolymorphismException.getBadNode()
com.hp.hpl.jena.enhanced.Personality.add(class, implementation)
com.hp.hpl.jena.enhanced.Personality.copy()
com.hp.hpl.jena.enhanced.Personality.getImplementation(class)
com.hp.hpl.jena.enhanced.Personality.add(personality)
com.hp.hpl.jena.enhanced.Personality.newInstance(class, enhgraph, node)
com.hp.hpl.jena.enhanced.Personality.getMap()
com.hp.hpl.jena.enhanced.BuiltinPersonalities.listPersonalities(printwriter)
com.hp.hpl.jena.enhanced.EnhNode.asNode()
com.hp.hpl.jena.enhanced.EnhNode.getGraph()
com.hp.hpl.jena.enhanced.EnhNode.isAnon()
com.hp.hpl.jena.enhanced.EnhNode.isLiteral()
com.hp.hpl.jena.enhanced.EnhNode.isURIResource()
com.hp.hpl.jena.enhanced.EnhNode.isResource()
com.hp.hpl.jena.enhanced.EnhNode.viewAs(class)
com.hp.hpl.jena.enhanced.EnhNode.as(class)
com.hp.hpl.jena.enhanced.EnhNode.canAs(class)
com.hp.hpl.jena.enhanced.EnhNode.hashCode()
com.hp.hpl.jena.enhanced.EnhNode.equals(object)
com.hp.hpl.jena.enhanced.EnhNode.isValid()
com.hp.hpl.jena.enhanced.EnhNode.convertTo(class)
com.hp.hpl.jena.enhanced.EnhNode.canSupport(class)
com.hp.hpl.jena.enhanced.EnhNode.getPersonality()
com.hp.hpl.jena.enhanced.Polymorphic.getPersonality()
com.hp.hpl.jena.enhanced.Polymorphic.supports(class)
com.hp.hpl.jena.enhanced.Polymorphic.asInternal(class)
com.hp.hpl.jena.enhanced.Polymorphic.findExistingView(class)
com.hp.hpl.jena.enhanced.Polymorphic.alreadyHasView(class)
com.hp.hpl.jena.enhanced.Polymorphic.isValid()
com.hp.hpl.jena.enhanced.Polymorphic.convertTo(class)
com.hp.hpl.jena.enhanced.Polymorphic.canSupport(class)
com.hp.hpl.jena.enhanced.Polymorphic.equals(object)
com.hp.hpl.jena.enhanced.Polymorphic.addView(polymorphic)
com.hp.hpl.jena.enhanced.Implementation.wrap(enhgraph, node)
com.hp.hpl.jena.enhanced.Implementation.canWrap(enhgraph, node)
com.hp.hpl.jena.enhanced.EnhGraph.asGraph()
com.hp.hpl.jena.enhanced.EnhGraph.hashCode()
com.hp.hpl.jena.enhanced.EnhGraph.equals(object)
com.hp.hpl.jena.enhanced.EnhGraph.isIsomorphicWith(enhgraph)
com.hp.hpl.jena.enhanced.EnhGraph.getNodeAs(class, node)
com.hp.hpl.jena.enhanced.EnhGraph.getNodeCacheControl()
com.hp.hpl.jena.enhanced.EnhGraph.setNodeCache(cache)
com.hp.hpl.jena.enhanced.EnhGraph.getPersonality()
com.hp.hpl.jena.rdf.model.Util.map1(statement)
com.hp.hpl.jena.rdf.model.Util.map1(statement)
com.hp.hpl.jena.rdf.model.Util.map1(statement)
com.hp.hpl.jena.rdf.model.SimpleSelector.literal(string, string)
com.hp.hpl.jena.rdf.model.SimpleSelector.getSubject()
com.hp.hpl.jena.rdf.model.SimpleSelector.getPredicate()
com.hp.hpl.jena.rdf.model.SimpleSelector.getObject()
com.hp.hpl.jena.rdf.model.SimpleSelector.isSimple()
com.hp.hpl.jena.rdf.model.SimpleSelector.test(statement)
com.hp.hpl.jena.rdf.model.SimpleSelector.selects(statement)
com.hp.hpl.jena.rdf.model.AnonId.create()
com.hp.hpl.jena.rdf.model.AnonId.create(string)
com.hp.hpl.jena.rdf.model.AnonId.equals(object)
com.hp.hpl.jena.rdf.model.AnonId.toString()
com.hp.hpl.jena.rdf.model.AnonId.getLabelString()
com.hp.hpl.jena.rdf.model.AnonId.hashCode()
com.hp.hpl.jena.rdf.model.StatementTripleBoundary.stopAt(statement)
com.hp.hpl.jena.rdf.model.StatementTripleBoundary.asTripleBoundary(model)
com.hp.hpl.jena.rdf.model.ModelExtract.extract(model, resource)
com.hp.hpl.jena.rdf.model.ModelExtract.extractInto(model, model, resource)
com.hp.hpl.jena.rdf.model.ModelExtract.getGraphExtract(tripleboundary)
com.hp.hpl.jena.rdf.model.StatementBoundaryBase.stopAt(statement)
com.hp.hpl.jena.rdf.model.StatementBoundaryBase.continueWith(statement)
com.hp.hpl.jena.rdf.model.StatementBoundaryBase.asTripleBoundary(model)
com.hp.hpl.jena.rdf.model.StatementBoundaryBase.convert(model, statementboundary, triple)
com.hp.hpl.jena.rdf.model.ResourceFactory.getInstance()
com.hp.hpl.jena.rdf.model.ResourceFactory.setInstance(interface)
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource()
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createPlainLiteral(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(rdfdatatype, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(object)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createStatement(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource()
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createPlainLiteral(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(rdfdatatype, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(object)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createStatement(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource()
com.hp.hpl.jena.rdf.model.ResourceFactory.createResource(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createPlainLiteral(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(rdfdatatype, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createTypedLiteral(object)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty(string, string)
com.hp.hpl.jena.rdf.model.ResourceFactory.createStatement(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.ModelFactoryBase.gp(string)
com.hp.hpl.jena.rdf.model.ModelFactoryBase.gp(string, string)
com.hp.hpl.jena.rdf.model.ModelFactory.setDefaultModelPrefixes(prefixmapping)
com.hp.hpl.jena.rdf.model.ModelFactory.getDefaultModelPrefixes()
com.hp.hpl.jena.rdf.model.ModelFactory.assembleModelFrom(model)
com.hp.hpl.jena.rdf.model.ModelFactory.findAssemblerRoots(model)
com.hp.hpl.jena.rdf.model.ModelFactory.assembleModelFrom(resource)
com.hp.hpl.jena.rdf.model.ModelFactory.createDefaultModel()
com.hp.hpl.jena.rdf.model.ModelFactory.createDefaultModel(reificationstyle)
com.hp.hpl.jena.rdf.model.ModelFactory.withHiddenStatements(model)
com.hp.hpl.jena.rdf.model.ModelFactory.createNonreifyingModel()
com.hp.hpl.jena.rdf.model.ModelFactory.createModelForGraph(graph)
com.hp.hpl.jena.rdf.model.ModelFactory.createFileModelMaker(string)
com.hp.hpl.jena.rdf.model.ModelFactory.createFileModelMaker(reificationstyle, string)
com.hp.hpl.jena.rdf.model.ModelFactory.createMemModelMaker()
com.hp.hpl.jena.rdf.model.ModelFactory.createMemModelMaker(reificationstyle)
com.hp.hpl.jena.rdf.model.ModelFactory.createRDFSModel(model)
com.hp.hpl.jena.rdf.model.ModelFactory.createRDFSModel(model, model)
com.hp.hpl.jena.rdf.model.ModelFactory.createInfModel(model, reasoner)
com.hp.hpl.jena.rdf.model.ModelFactory.createInfModel(model, model, reasoner)
com.hp.hpl.jena.rdf.model.ModelFactory.createInfModel(infgraph)
com.hp.hpl.jena.rdf.model.ModelFactory.createOntologyModel()
com.hp.hpl.jena.rdf.model.ModelFactory.createOntologyModel(string)
com.hp.hpl.jena.rdf.model.ModelFactory.createOntologyModel(model, modelmaker, ontmodelspec)
com.hp.hpl.jena.rdf.model.ModelFactory.createOntologyModel(model, ontmodelspec)
com.hp.hpl.jena.rdf.model.ModelFactory.createOntologyModel(ontmodelspec)
com.hp.hpl.jena.rdf.model.ModelFactory.createUnion(model, model)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.visitWith(rdfvisitor)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.asResource()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.asLiteral()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.inModel(model)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.fresh(string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getId()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getURI()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getNameSpace()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getLocalName()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasURI(string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.toString()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.mustHaveModel()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getRequiredProperty(property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getProperty(property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.listProperties(property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.listProperties()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(boolean, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(long, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(long, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(char, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(float, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(double, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(double, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(float, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(property, string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(property, string, string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(property, rdfdatatype, string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(object, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addLiteral(literal, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.addProperty(property, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasProperty(property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(boolean, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(long, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(char, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(double, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(float, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasProperty(property, string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasProperty(property, string, string)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasLiteral(object, property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.hasProperty(property, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.removeProperties()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.removeAll(property)
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.begin()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.abort()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.commit()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getModel()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getModelCom()
com.hp.hpl.jena.rdf.model.impl.ResourceImpl.getPropertyResourceValue(property)
com.hp.hpl.jena.rdf.model.impl.BagImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.BagImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorFactoryImpl.createIterator(container, iterator, object)
com.hp.hpl.jena.rdf.model.impl.Util.splitNamespace(string)
com.hp.hpl.jena.rdf.model.impl.Util.notNameChar(char)
com.hp.hpl.jena.rdf.model.impl.Util.substituteStandardEntities(string)
com.hp.hpl.jena.rdf.model.impl.Util.substituteEntitiesInEntityValue(string)
com.hp.hpl.jena.rdf.model.impl.Util.substituteEntitiesInElementContent(string)
com.hp.hpl.jena.rdf.model.impl.Util.replace(string, string, string)
com.hp.hpl.jena.rdf.model.impl.Util.XgetProperty(string)
com.hp.hpl.jena.rdf.model.impl.Util.XgetProperty(string, string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.getModel()
com.hp.hpl.jena.rdf.model.impl.StatementBase.replace(rdfnode)
com.hp.hpl.jena.rdf.model.impl.StatementBase.getLiteral()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getResource()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getSubject()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getPredicate()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getObject()
com.hp.hpl.jena.rdf.model.impl.StatementBase.stringReplace(boolean, string, string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.stringReplace(string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(boolean)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(long)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(char)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(double)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(float)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeLiteralObject(int)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeObject(string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeObject(boolean, string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeObject(string, string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeObject(boolean, string, string)
com.hp.hpl.jena.rdf.model.impl.StatementBase.changeObject(rdfnode)
com.hp.hpl.jena.rdf.model.impl.StatementBase.getBoolean()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getByte()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getShort()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getInt()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getLong()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getChar()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getFloat()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getDouble()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getString()
com.hp.hpl.jena.rdf.model.impl.StatementBase.mustBeResource(rdfnode)
com.hp.hpl.jena.rdf.model.impl.StatementBase.getLanguage()
com.hp.hpl.jena.rdf.model.impl.StatementBase.getWellFormed()
com.hp.hpl.jena.rdf.model.impl.StatementBase.hasWellFormedXML()
com.hp.hpl.jena.rdf.model.impl.StatementBase.toString()
com.hp.hpl.jena.rdf.model.impl.StatementBase.objectString(rdfnode)
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.getInfGraph()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.getRawModel()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.getReasoner()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.rebind()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.prepare()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.reset()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.validate()
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.listStatements(model, property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.setDerivationLogging(boolean)
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.getDerivation(statement)
com.hp.hpl.jena.rdf.model.impl.InfModelImpl.getDeductionsModel()
com.hp.hpl.jena.rdf.model.impl.NodeIteratorImpl.nextNode()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.is(resource)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.isAlt()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.isBag()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.isSeq()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(boolean)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(long)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(char)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(float)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(double)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(object)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(string)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.add(string, string)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(boolean)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(long)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(char)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(float)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(double)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(object)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(string)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.contains(string, string)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.literal(string, string)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.iterator()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.size()
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.remove(statement)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.remove(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.listContainerMembers(nodeiteratorfactory)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.containerIndexOf(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ContainerImpl.containerContains(rdfnode)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getResource(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getLiteral(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getObject(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getBoolean(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getByte(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getShort(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getInt(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getLong(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getChar(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getFloat(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getDouble(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getString(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getLanguage(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getResource(int, resourcef)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getBag(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getAlt(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.getSeq(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(boolean, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(int, long)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(float, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(double, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(char, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(int, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(int, string, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.set(int, object)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(boolean, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(int, long)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(char, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(float, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(double, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(int, object)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(int, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(int, string, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.add(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.iterator()
com.hp.hpl.jena.rdf.model.impl.SeqImpl.remove(statement)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.remove(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.remove(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(rdfnode)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(boolean)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(long)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(char)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(float)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(double)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(object)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.indexOf(string, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.literal(string, string)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.shiftUp(int, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.shiftDown(int, int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.checkIndex(int)
com.hp.hpl.jena.rdf.model.impl.SeqImpl.checkIndex(int, int)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.visitWith(rdfvisitor)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.inModel(model)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.asLiteral()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.asResource()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getModel()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.toString()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getValue()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getDatatype()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getDatatypeURI()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.isPlainLiteral()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getLexicalForm()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getBoolean()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getByte()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getShort()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getInt()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getLong()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getChar()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getFloat()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getDouble()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getString()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getLanguage()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.isWellFormedXML()
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.sameValueAs(literal)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.asNumber(object)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.byteValue(number)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.shortValue(number)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.intValue(number)
com.hp.hpl.jena.rdf.model.impl.LiteralImpl.getIntegralValueInRange(long, long, number)
com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl.next()
com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl.hasNext()
com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl.nextNode()
com.hp.hpl.jena.rdf.model.impl.ContNodeIteratorImpl.remove()
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddArray(graph, triple)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyDeleteArray(graph, triple)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddTriple(graph, triple)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddList(graph, list)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddIterator(graph, iterator)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddGraph(graph, graph)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyDeleteIterator(graph, iterator)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyDeleteTriple(graph, triple)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyAddIterator(graph, list)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyDeleteList(graph, list)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyDeleteGraph(graph, graph)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.notifyEvent(graph, object)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.equals(object)
com.hp.hpl.jena.rdf.model.impl.ModelListenerAdapter.sameAs(modellisteneradapter)
com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl.next()
com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl.remove()
com.hp.hpl.jena.rdf.model.impl.StmtIteratorImpl.nextStatement()
com.hp.hpl.jena.rdf.model.impl.SelectorImpl.isSimple()
com.hp.hpl.jena.rdf.model.impl.ModelReifier.getReificationStyle()
com.hp.hpl.jena.rdf.model.impl.ModelReifier.withHiddenStatements(model)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.getHiddenTriples(model, triplematch)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.getHiddenStatements()
com.hp.hpl.jena.rdf.model.impl.ModelReifier.createReifiedStatement(statement)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.createReifiedStatement(statement, string)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.getAnyReifiedStatement(statement)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.isReified(frontstriple)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.removeAllReifications(frontstriple)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.removeReification(reifiedstatement)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.listReifiedStatements()
com.hp.hpl.jena.rdf.model.impl.ModelReifier.listReifiedStatements(frontstriple)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.noteIfReified(rdfnode, rdfnode, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.noteIfReified(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.map1(node)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.findReifiedStatements()
com.hp.hpl.jena.rdf.model.impl.ModelReifier.findReifiedStatements(triple)
com.hp.hpl.jena.rdf.model.impl.ModelReifier.getRS(node)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.assertStatement(statement)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.getStatement()
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.getTriple(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.getReifier()
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.isValid()
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.installInReifier()
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.create(statement)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.create(modelcom, statement, string)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.create(enhgraph, node, statement)
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.toString()
com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl.createExistingReifiedStatement(modelcom, node)
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.inModel(model)
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.checkLocalName()
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.isProperty()
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.getOrdinal()
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.computeOrdinal()
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.parseInt(string)
com.hp.hpl.jena.rdf.model.impl.PropertyImpl.checkOrdinal()
com.hp.hpl.jena.rdf.model.impl.NsIteratorImpl.nextNs()
com.hp.hpl.jena.rdf.model.impl.AltImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.AltImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.AltImpl.needDefaultStatement()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefault()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultResource()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultLiteral()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultBoolean()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultByte()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultShort()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultInt()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultLong()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultChar()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultFloat()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultDouble()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultString()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultLanguage()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultResource(resourcef)
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultAlt()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultBag()
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultSeq()
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(rdfnode)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(boolean)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(long)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(char)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(float)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(double)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(object)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(string)
com.hp.hpl.jena.rdf.model.impl.AltImpl.setDefault(string, string)
com.hp.hpl.jena.rdf.model.impl.AltImpl.getDefaultStatement()
com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler.warning(exception)
com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler.error(exception)
com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler.fatalError(exception)
com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorImpl.hasNext()
com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorImpl.next()
com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorImpl.nextNode()
com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorImpl.remove()
com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl.getWriter()
com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl.getWriter(string)
com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl.setWriterClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.RDFWriterFImpl.setBaseWriterClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.RSIteratorImpl.nextRS()
com.hp.hpl.jena.rdf.model.impl.SeqNodeIteratorFactoryImpl.createIterator(container, iterator, object)
com.hp.hpl.jena.rdf.model.impl.MemoryModelGetter.getModel(string)
com.hp.hpl.jena.rdf.model.impl.MemoryModelGetter.getModel(modelreader, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getDefaultModelPrefixes()
com.hp.hpl.jena.rdf.model.impl.ModelCom.setDefaultModelPrefixes(prefixmapping)
com.hp.hpl.jena.rdf.model.impl.ModelCom.queryHandler()
com.hp.hpl.jena.rdf.model.impl.ModelCom.getGraph()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createWorkModel()
com.hp.hpl.jena.rdf.model.impl.ModelCom.asRDFNode(node)
com.hp.hpl.jena.rdf.model.impl.ModelCom.wrapAsResource(node)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getResource(resourcef, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(boolean, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(long, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(int, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(char, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(float, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(double, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(boolean, property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(boolean, property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(property, rdfdatatype, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.literal(boolean, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.literal(rdfdatatype, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(object, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addLiteral(literal, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asObject(object)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(boolean, model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getReader()
com.hp.hpl.jena.rdf.model.impl.ModelCom.getReader(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.setReaderClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(reader, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(inputstream, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(string, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(reader, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.read(inputstream, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getWriter()
com.hp.hpl.jena.rdf.model.impl.ModelCom.getWriter(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.setWriterClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(writer)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(string, writer)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(string, string, writer)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(outputstream)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(outputstream, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.write(outputstream, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(boolean, model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.removeAll()
com.hp.hpl.jena.rdf.model.impl.ModelCom.removeAll(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(boolean, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(long, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(int, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(char, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(float, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(double, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.contains(property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.contains(property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsLiteral(object, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAny(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAll(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAnyThenClose(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAllThenClose(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAny(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsAll(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements(node, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements(property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements(property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listLiteralStatements(boolean, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listLiteralStatements(long, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listLiteralStatements(char, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listLiteralStatements(float, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listLiteralStatements(double, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(boolean, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(char, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(long, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(float, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(double, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(object, property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjectsWithProperty(property, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjectsWithProperty(property, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjectsWithProperty(property, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(resourcef)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(anonid)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(resourcef, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(boolean)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(int)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(long)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(char)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(float)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(double)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(calendar)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(rdfdatatype, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(object, rdfdatatype)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(object, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createTypedLiteral(object)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteral(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteral(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteral(boolean, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteral(boolean, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(boolean, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(long, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(int, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(char, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(float, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(double, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createStatement(property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createLiteralStatement(object, property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createStatement(boolean, property, resource, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createStatement(property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createStatement(boolean, property, resource, string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createBag()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createAlt()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createSeq()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createList()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createList(iterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createList(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getRDFNode(node)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getResource(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getProperty(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getProperty(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getSeq(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getSeq(resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getBag(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getBag(resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.makeURI(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getAlt(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getAlt(resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.size()
com.hp.hpl.jena.rdf.model.impl.ModelCom.isEmpty()
com.hp.hpl.jena.rdf.model.impl.ModelCom.updateNamespace(iterator, set)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listPredicates()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listTypes()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listNameSpaces()
com.hp.hpl.jena.rdf.model.impl.ModelCom.getPrefixMapping()
com.hp.hpl.jena.rdf.model.impl.ModelCom.samePrefixMappingAs(prefixmapping)
com.hp.hpl.jena.rdf.model.impl.ModelCom.lock()
com.hp.hpl.jena.rdf.model.impl.ModelCom.setNsPrefix(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.removeNsPrefix(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.setNsPrefixes(prefixmapping)
com.hp.hpl.jena.rdf.model.impl.ModelCom.setNsPrefixes(map)
com.hp.hpl.jena.rdf.model.impl.ModelCom.withDefaultMappings(prefixmapping)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getNsPrefixURI(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getNsURIPrefix(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getNsPrefixMap()
com.hp.hpl.jena.rdf.model.impl.ModelCom.expandPrefix(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.qnameFor(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.shortForm(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addNamespaces(map, model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements()
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getBulkUpdateHandler()
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(list)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asTriples(list)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asTriples(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.map1(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.remove(list)
com.hp.hpl.jena.rdf.model.impl.ModelCom.add(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getReificationStyle()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listReifiedStatements()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listReifiedStatements(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.isReified(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getAnyReifiedStatement(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.removeAllReifications(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.removeReification(reifiedstatement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createReifiedStatement(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createReifiedStatement(statement, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.contains(statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.containsResource(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.contains(property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.contains(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getRequiredProperty(property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getProperty(property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asNode(rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listObjectsFor(rdfnode, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjectsFor(rdfnode, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjects()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listSubjectsWithProperty(property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listResourcesWithProperty(property, rdfnode)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listObjects()
com.hp.hpl.jena.rdf.model.impl.ModelCom.listObjectsOfProperty(property)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listObjectsOfProperty(property, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listStatements(selector)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asFilter(selector, statement)
com.hp.hpl.jena.rdf.model.impl.ModelCom.findTriplesFrom(selector)
com.hp.hpl.jena.rdf.model.impl.ModelCom.supportsTransactions()
com.hp.hpl.jena.rdf.model.impl.ModelCom.begin()
com.hp.hpl.jena.rdf.model.impl.ModelCom.abort()
com.hp.hpl.jena.rdf.model.impl.ModelCom.commit()
com.hp.hpl.jena.rdf.model.impl.ModelCom.executeInTransaction(command)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getTransactionHandler()
com.hp.hpl.jena.rdf.model.impl.ModelCom.independent()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource()
com.hp.hpl.jena.rdf.model.impl.ModelCom.createResource(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createProperty(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createProperty(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createStatement(property, rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createBag(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createAlt(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.createSeq(string)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asStatement(triple)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asStatements(triple)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asStatements(list)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asModel(graph)
com.hp.hpl.jena.rdf.model.impl.ModelCom.asStatements(iterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.map1(triple)
com.hp.hpl.jena.rdf.model.impl.ModelCom.listBySubject(container)
com.hp.hpl.jena.rdf.model.impl.ModelCom.close()
com.hp.hpl.jena.rdf.model.impl.ModelCom.isClosed()
com.hp.hpl.jena.rdf.model.impl.ModelCom.supportsSetOperations()
com.hp.hpl.jena.rdf.model.impl.ModelCom.query(selector)
com.hp.hpl.jena.rdf.model.impl.ModelCom.union(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.intersection(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.intersect(model, model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.addCommon(model, model, stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.difference(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.toString()
com.hp.hpl.jena.rdf.model.impl.ModelCom.reifiedToString()
com.hp.hpl.jena.rdf.model.impl.ModelCom.statementsToString(stmtiterator)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getHiddenStatements()
com.hp.hpl.jena.rdf.model.impl.ModelCom.isIsomorphicWith(model)
com.hp.hpl.jena.rdf.model.impl.ModelCom.getModelLock()
com.hp.hpl.jena.rdf.model.impl.ModelCom.getLock()
com.hp.hpl.jena.rdf.model.impl.ModelCom.enterCriticalSection(boolean)
com.hp.hpl.jena.rdf.model.impl.ModelCom.leaveCriticalSection()
com.hp.hpl.jena.rdf.model.impl.ModelCom.register(modelchangedlistener)
com.hp.hpl.jena.rdf.model.impl.ModelCom.unregister(modelchangedlistener)
com.hp.hpl.jena.rdf.model.impl.ModelCom.adapt(modelchangedlistener)
com.hp.hpl.jena.rdf.model.impl.ModelCom.notifyEvent(object)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.toStatement(modelcom, triple)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getSubject()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getPredicate()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getObject()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getStatementProperty(property)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getResource()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getResource(resourcef)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getProperty(property)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getLiteral()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getBag()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getAlt()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.getSeq()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.replace(rdfnode)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.equals(object)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.sameAs(statement)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.hashCode()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.asResource()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.remove()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.removeReification()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.asTriple()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.asTriples(statement)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.isReified()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.createReifiedStatement()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.createReifiedStatement(string)
com.hp.hpl.jena.rdf.model.impl.StatementImpl.listReifiedStatements()
com.hp.hpl.jena.rdf.model.impl.StatementImpl.createObject(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.read(inputstream, model, string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.read(model, reader, string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.read(model, string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.setProperty(object, string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readRDF()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.unwrappedReadRDF()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readResource()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readNode()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readLiteral(boolean)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readUnicode4Escape()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.deprecated(string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.syntaxError(string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readLang()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.badEOF()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readURI()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.readName()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.expect(string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.skipWhiteSpace()
com.hp.hpl.jena.rdf.model.impl.NTripleReader.lookupResource(string)
com.hp.hpl.jena.rdf.model.impl.NTripleReader.syntaxErrorMessage(int, int, string, string)
com.hp.hpl.jena.rdf.model.impl.IStream.readChar()
com.hp.hpl.jena.rdf.model.impl.IStream.nextChar()
com.hp.hpl.jena.rdf.model.impl.IStream.eof()
com.hp.hpl.jena.rdf.model.impl.IStream.getLinepos()
com.hp.hpl.jena.rdf.model.impl.IStream.getCharpos()
com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl.getReader()
com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl.getReader(string)
com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl.setReaderClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.RDFReaderFImpl.setBaseReaderClassName(string, string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.getGraphMaker()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.close()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.openModel()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.makeModel(graph)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.openModelIfPresent(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.openModel(boolean, string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.openModel(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.createModel(boolean, string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.createModel(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.createModelOver(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.createFreshModel()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.createDefaultModel()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.removeModel(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.hasModel(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.listModels()
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.getModel(string)
com.hp.hpl.jena.rdf.model.impl.ModelMakerImpl.getModel(modelreader, string)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.wrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.canWrap(enhgraph, node)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.listType()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.listNil()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.listFirst()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.listRest()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.listAbstractionClass()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.size()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.getHead()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.setHead(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.getTail()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.setTail(rdflist)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.isEmpty()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.cons(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.add(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.with(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.get(int)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.replace(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.contains(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.indexOf(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.indexOf(int, rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.append(iterator)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.append(rdflist)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.concatenate(rdflist)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.concatenate(iterator)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.copy()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.apply(applyfn)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.reduce(object, reducefn)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.mapWith(map1)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.removeHead()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.remove(rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.removeAll()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.removeList()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.collectStatements()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.iterator()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.asJavaList()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.sameListAs(rdflist)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.getStrict()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.setStrict(boolean)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.isValid()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.getValidityErrorMessage()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.newListCell(rdfnode, resource)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.checkValid()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.checkValidProperty(property, rdfnode)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.checkNotNil(string)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.findElement(boolean, int)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.copy(iterator)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.setTailAux(property, resource, resource)
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.hasNext()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.next()
com.hp.hpl.jena.rdf.model.impl.RDFListImpl.remove()
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asStmtIterator(iterator, modelcom, triple)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asResIterator(iterator, modelcom, node)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asRDFNodeIterator(iterator, modelcom, node)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asResource(modelcom, node)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asProperty(modelcom, node)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asLiteral(modelcom, node)
com.hp.hpl.jena.rdf.model.impl.IteratorFactory.asResource(class, modelcom, node)
com.hp.hpl.jena.rdf.model.impl.ResIteratorImpl.nextResource()
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.write(model, outputstream, string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.write(model, string, writer)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.setProperty(object, string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.setNsPrefix(string, string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.getPrefixFor(string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.write(model, printwriter)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.writeResource(printwriter, resource)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.writeURIString(printwriter, string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.writeString(printwriter, string)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.writeLiteral(literal, printwriter)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.writeNode(printwriter, rdfnode)
com.hp.hpl.jena.rdf.model.impl.NTripleWriter.anonName(anonid)
com.hp.hpl.jena.rdf.arp.SAX2RDF.create(string)
com.hp.hpl.jena.rdf.arp.SAX2RDF.create(string, string)
com.hp.hpl.jena.rdf.arp.SAX2RDF.startPrefixMapping(string, string)
com.hp.hpl.jena.rdf.arp.SAX2RDF.getHandlers()
com.hp.hpl.jena.rdf.arp.SAX2RDF.setHandlersWith(arphandlers)
com.hp.hpl.jena.rdf.arp.SAX2RDF.getOptions()
com.hp.hpl.jena.rdf.arp.SAX2RDF.setOptionsWith(arpoptions)
com.hp.hpl.jena.rdf.arp.SAX2RDF.installHandlers(xmlhandler, xmlreader)
com.hp.hpl.jena.rdf.arp.StAX2Model.read(model, xmlstreamreader)
com.hp.hpl.jena.rdf.arp.StAX2Model.read(model, string, xmlstreamreader)
com.hp.hpl.jena.rdf.arp.StAX2Model.read(model, xmleventreader)
com.hp.hpl.jena.rdf.arp.StAX2Model.read(model, string, xmleventreader)
com.hp.hpl.jena.rdf.arp.StAX2SAX.parse(xmlstreamreader)
com.hp.hpl.jena.rdf.arp.StAX2SAX.parse(xmleventreader)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitSE(startelement)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitEE(endelement)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitPi(processinginstruction)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitChars(characters)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitAttr(attribute)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitEnt(entitydeclaration)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitNS(namespace)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitNSGone(namespace)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitComment(comment)
com.hp.hpl.jena.rdf.arp.StAX2SAX.emitDTD(dtd)
com.hp.hpl.jena.rdf.arp.StAX2SAX.convertAttrs(iterator)
com.hp.hpl.jena.rdf.arp.StAX2SAX.qnameToS(qname)
com.hp.hpl.jena.rdf.arp.StAX2SAX.getPublicId()
com.hp.hpl.jena.rdf.arp.StAX2SAX.getSystemId()
com.hp.hpl.jena.rdf.arp.StAX2SAX.getLineNumber()
com.hp.hpl.jena.rdf.arp.StAX2SAX.getColumnNumber()
com.hp.hpl.jena.rdf.arp.StAX2SAX.startDTD(string, string, string)
com.hp.hpl.jena.rdf.arp.StAX2SAX.endDTD()
com.hp.hpl.jena.rdf.arp.StAX2SAX.startEntity(string)
com.hp.hpl.jena.rdf.arp.StAX2SAX.endEntity(string)
com.hp.hpl.jena.rdf.arp.StAX2SAX.startCDATA()
com.hp.hpl.jena.rdf.arp.StAX2SAX.endCDATA()
com.hp.hpl.jena.rdf.arp.StAX2SAX.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.SAX2Model.create(model, string)
com.hp.hpl.jena.rdf.arp.SAX2Model.create(model, string, string)
com.hp.hpl.jena.rdf.arp.SAX2Model.startPrefixMapping(string, string)
com.hp.hpl.jena.rdf.arp.SAX2Model.initHandler(model)
com.hp.hpl.jena.rdf.arp.SAX2Model.close()
com.hp.hpl.jena.rdf.arp.SAX2Model.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.rdf.arp.SAX2Model.setProperty(object, string)
com.hp.hpl.jena.rdf.arp.SAX2Model.setArpProperty(object, string)
com.hp.hpl.jena.rdf.arp.JenaHandler.modelToPrefixMapping(model)
com.hp.hpl.jena.rdf.arp.JenaHandler.useWith(arphandlers)
com.hp.hpl.jena.rdf.arp.JenaHandler.statement(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.JenaHandler.statement(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.JenaHandler.bulkUpdate()
com.hp.hpl.jena.rdf.arp.JenaHandler.startPrefixMapping(string, string)
com.hp.hpl.jena.rdf.arp.JenaHandler.endPrefixMapping(string)
com.hp.hpl.jena.rdf.arp.ParseException.getErrorNumber()
com.hp.hpl.jena.rdf.arp.ParseException.isSyntaxError()
com.hp.hpl.jena.rdf.arp.ParseException.rootCause()
com.hp.hpl.jena.rdf.arp.ParseException.promote()
com.hp.hpl.jena.rdf.arp.ParseException.getMessage()
com.hp.hpl.jena.rdf.arp.ParseException.formatMessage(exception)
com.hp.hpl.jena.rdf.arp.ParseException.isPromoted()
com.hp.hpl.jena.rdf.arp.ParseException.errorCodeName(int)
com.hp.hpl.jena.rdf.arp.ParseException.errorCode(string)
com.hp.hpl.jena.rdf.arp.NTriple.main(string)
com.hp.hpl.jena.rdf.arp.NTriple.mainEh(arpeventhandler, errorhandler, string)
com.hp.hpl.jena.rdf.arp.NTriple.getSH(boolean)
com.hp.hpl.jena.rdf.arp.NTriple.lineNumber()
com.hp.hpl.jena.rdf.arp.NTriple.usage()
com.hp.hpl.jena.rdf.arp.NTriple.processOpts(aliteral, aresource, aresource, aresource, aresource, aresource, saxparseexception, saxparseexception, saxparseexception, string, string)
com.hp.hpl.jena.rdf.arp.NTriple.setErrorMode(int, string)
com.hp.hpl.jena.rdf.arp.NTriple.process(string)
com.hp.hpl.jena.rdf.arp.NTriple.process(inputstream, string, string)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.statement(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.NTriple.print(string)
com.hp.hpl.jena.rdf.arp.NTriple.resource(aresource)
com.hp.hpl.jena.rdf.arp.NTriple.escapeNTriple(string)
com.hp.hpl.jena.rdf.arp.NTriple.escapeUTF8(string)
com.hp.hpl.jena.rdf.arp.NTriple.escape(string)
com.hp.hpl.jena.rdf.arp.NTriple.escapeURI(string)
com.hp.hpl.jena.rdf.arp.NTriple.literal(aliteral)
com.hp.hpl.jena.rdf.arp.ARPOptions.createNewOptions()
com.hp.hpl.jena.rdf.arp.ARPOptions.setErrorMode(int, int)
com.hp.hpl.jena.rdf.arp.ARPOptions.setDefaultErrorMode()
com.hp.hpl.jena.rdf.arp.ARPOptions.setLaxErrorMode()
com.hp.hpl.jena.rdf.arp.ARPOptions.setStrictErrorMode()
com.hp.hpl.jena.rdf.arp.ARPOptions.setStrictErrorMode(int)
com.hp.hpl.jena.rdf.arp.ARPOptions.copy()
com.hp.hpl.jena.rdf.arp.ARPOptions.setEmbedding(boolean)
com.hp.hpl.jena.rdf.arp.ARPOptions.getErrorMode(int)
com.hp.hpl.jena.rdf.arp.ARPOptions.getEmbedding()
com.hp.hpl.jena.rdf.arp.ARPOptions.setIRIFactory(irifactory)
com.hp.hpl.jena.rdf.arp.ARPOptions.getIRIFactory()
com.hp.hpl.jena.rdf.arp.ARPOptions.setIRIFactoryGlobal(irifactory)
com.hp.hpl.jena.rdf.arp.ARPOptions.getIRIFactoryGlobal()
com.hp.hpl.jena.rdf.arp.JenaReader.read(model, string)
com.hp.hpl.jena.rdf.arp.JenaReader.convert(aliteral)
com.hp.hpl.jena.rdf.arp.JenaReader.convert(aresource)
com.hp.hpl.jena.rdf.arp.JenaReader.convert(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.JenaReader.convert(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.JenaReader.read(inputsource, model, string)
com.hp.hpl.jena.rdf.arp.JenaReader.read(graph, inputsource, model, string)
com.hp.hpl.jena.rdf.arp.JenaReader.read(model, reader, string)
com.hp.hpl.jena.rdf.arp.JenaReader.read(graph, reader, string)
com.hp.hpl.jena.rdf.arp.JenaReader.read(inputstream, model, string)
com.hp.hpl.jena.rdf.arp.JenaReader.read(graph, inputstream, string)
com.hp.hpl.jena.rdf.arp.JenaReader.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.rdf.arp.JenaReader.setProperty(object, string)
com.hp.hpl.jena.rdf.arp.JenaReader.setArpProperty(object, string)
com.hp.hpl.jena.rdf.arp.JenaReader.getOptions()
com.hp.hpl.jena.rdf.arp.JenaReader.setOptionsWith(arpoptions)
com.hp.hpl.jena.rdf.arp.JenaReader.processArpOptions(arpoptions, object, rdferrorhandler, string)
com.hp.hpl.jena.rdf.arp.ARP.getLocator()
com.hp.hpl.jena.rdf.arp.ARP.load(reader, string)
com.hp.hpl.jena.rdf.arp.ARP.load(inputsource)
com.hp.hpl.jena.rdf.arp.ARP.load(inputstream, string)
com.hp.hpl.jena.rdf.arp.ARP.load(inputstream)
com.hp.hpl.jena.rdf.arp.ARP.load(reader)
com.hp.hpl.jena.rdf.arp.ARP.getHandlers()
com.hp.hpl.jena.rdf.arp.ARP.setHandlersWith(arphandlers)
com.hp.hpl.jena.rdf.arp.ARP.getOptions()
com.hp.hpl.jena.rdf.arp.ARP.setOptionsWith(arpoptions)
com.hp.hpl.jena.rdf.arp.ARP.setBadStatementHandler(statementhandler)
com.hp.hpl.jena.rdf.arp.ARPHandlers.createNewHandlers()
com.hp.hpl.jena.rdf.arp.ARPHandlers.startPrefixMapping(string, string)
com.hp.hpl.jena.rdf.arp.ARPHandlers.endPrefixMapping(string)
com.hp.hpl.jena.rdf.arp.ARPHandlers.setExtendedHandler(extendedhandler)
com.hp.hpl.jena.rdf.arp.ARPHandlers.setNamespaceHandler(namespacehandler)
com.hp.hpl.jena.rdf.arp.ARPHandlers.setStatementHandler(statementhandler)
com.hp.hpl.jena.rdf.arp.ARPHandlers.setErrorHandler(errorhandler)
com.hp.hpl.jena.rdf.arp.ARPHandlers.getErrorHandler()
com.hp.hpl.jena.rdf.arp.ARPHandlers.getNamespaceHandler()
com.hp.hpl.jena.rdf.arp.ARPHandlers.getExtendedHandler()
com.hp.hpl.jena.rdf.arp.ARPHandlers.getStatementHandler()
com.hp.hpl.jena.rdf.arp.DOM2Model.createD2M(model, string)
com.hp.hpl.jena.rdf.arp.DOM2Model.createD2M(model, string, string)
com.hp.hpl.jena.rdf.arp.DOM2Model.load(node)
com.hp.hpl.jena.rdf.arp.impl.UntaintableURIReference.taint()
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.idsUsed()
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkIdSymbol(absxmlcontext, string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkXMLName(string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkString(string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkComposingChar(string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkComposingChar(char, int, int, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.checkEncoding(string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.warning(int, string, taint)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.isWhite(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.isWhite(stringbuffer)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.isWhite(char)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.triple(anode, anode, anode)
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.getXMLContext()
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.getXMLHandler()
com.hp.hpl.jena.rdf.arp.impl.ParserSupport.resolve(absxmlcontext, string, taint)
com.hp.hpl.jena.rdf.arp.impl.WrappedException.throwMe()
com.hp.hpl.jena.rdf.arp.impl.ARPLocation.toString()
com.hp.hpl.jena.rdf.arp.impl.ARPLocation.getSystemId()
com.hp.hpl.jena.rdf.arp.impl.ARPLocation.getLineNumber()
com.hp.hpl.jena.rdf.arp.impl.ARPLocation.getColumnNumber()
com.hp.hpl.jena.rdf.arp.impl.ARPLocation.getPublicId()
com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral.isWellFormedXML()
com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral.getParseType()
com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral.toString()
com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral.getDatatypeURI()
com.hp.hpl.jena.rdf.arp.impl.ARPDatatypeLiteral.getLang()
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.initTaint(iri, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.withBase(string, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.keepDocument(xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.withLang(string, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.clone(iri, string, taint, taint)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.getLang(taint)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.resolveAsURI(string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.resolveAsURI(boolean, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.checkBaseUse(iri, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.checkURI(iri, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.resolve(string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext.checkXMLLang(string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.URIReference.toString()
com.hp.hpl.jena.rdf.arp.impl.URIReference.isAnonymous()
com.hp.hpl.jena.rdf.arp.impl.URIReference.getAnonymousID()
com.hp.hpl.jena.rdf.arp.impl.URIReference.getURI()
com.hp.hpl.jena.rdf.arp.impl.URIReference.getUserData()
com.hp.hpl.jena.rdf.arp.impl.URIReference.setUserData(object)
com.hp.hpl.jena.rdf.arp.impl.URIReference.equals(object)
com.hp.hpl.jena.rdf.arp.impl.URIReference.hashCode()
com.hp.hpl.jena.rdf.arp.impl.URIReference.hasNodeID()
com.hp.hpl.jena.rdf.arp.impl.URIReference.setHasBeenUsed()
com.hp.hpl.jena.rdf.arp.impl.URIReference.getHasBeenUsed()
com.hp.hpl.jena.rdf.arp.impl.URIReference.fromID(absxmlcontext, frame, string)
com.hp.hpl.jena.rdf.arp.impl.URIReference.resolve(absxmlcontext, frame, string)
com.hp.hpl.jena.rdf.arp.impl.URIReference.fromQName(frame, string, string)
com.hp.hpl.jena.rdf.arp.impl.URIReference.createNoChecks(string)
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.endCDATA()
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.endDTD()
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.startCDATA()
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.endEntity(string)
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.startEntity(string)
com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl.startDTD(string, string, string)
com.hp.hpl.jena.rdf.arp.impl.DefaultErrorHandler.error(org)
com.hp.hpl.jena.rdf.arp.impl.DefaultErrorHandler.fatalError(org)
com.hp.hpl.jena.rdf.arp.impl.DefaultErrorHandler.warning(org)
com.hp.hpl.jena.rdf.arp.impl.CharacterModel.isNormalFormC(string)
com.hp.hpl.jena.rdf.arp.impl.CharacterModel.startsWithComposingCharacter(string)
com.hp.hpl.jena.rdf.arp.impl.CharacterModel.isFullyNormalizedConstruct(string)
com.hp.hpl.jena.rdf.arp.impl.CharacterModel.isComposingChar(char)
com.hp.hpl.jena.rdf.arp.impl.CharacterModel.isCombining(int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.triple(anode, anode, anode)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.startPrefixMapping(string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endPrefixMapping(string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getLocator()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.setDocumentLocator(locator)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endElement(string, string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getSimpleName(class)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.ignorableWhitespace(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.setUserData(object, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getUserData(string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.processingInstruction(string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.warning(int, string, taint)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.warning(arplocation, int, string, taint)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.generalError(exception, int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.warning(int, saxparseexception, taint)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.error(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.warning(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.fatalError(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endLocalScope(anode)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endRDF()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.startRDF()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.ignoring(int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.isError(int)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.initialContext(string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.initialContextWithBase(string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getStatementHandler()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getHandlers()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.getOptions()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.setOptionsWith(arpoptions)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.setHandlersWith(arphandlers)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.initParse(string, string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.afterParse()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endBnodeScope()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.location()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.iriFactory()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.checkNamespaceURI(string)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.allowRelativeURIs()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.sameDocRef()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.setBadStatementHandler(statementhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.statement(aresource, aresource, aresource)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.statement(aliteral, aresource, aresource)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endBNodeScope(aresource)
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.startRDF()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.endRDF()
com.hp.hpl.jena.rdf.arp.impl.XMLHandler.discardNodesWithNodeID()
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.xml(int, string)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.isInRdfns(taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.error(int, taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.deprecatedAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.getLocalName()
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.getUri()
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.getQName()
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.rdf(int, string, taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.lookup(taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.bagIDAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.lookupNoMsg(taint)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.isMemberProperty(string)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.isKnownRDFProperty(string)
com.hp.hpl.jena.rdf.arp.impl.QNameLexer.isKnownNonMemberRDFProperty(string)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.processSpecials(attributes, taint)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.xml(absxmlcontext)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.computeXml(absxmlcontext)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.isInRdfns(taint)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.error(int, taint)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.deprecatedAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.getLocalName()
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.getUri()
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.value()
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.getXMLBase()
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.value(string, taint)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.getQName()
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.done(int)
com.hp.hpl.jena.rdf.arp.impl.AttributeLexer.bagIDAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.initParse(string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endCDATA()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endDTD()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.startCDATA()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endEntity(string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.startEntity(string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.startDTD(string, string, string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endDocument()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.startDocument()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.ignorableWhitespace(char, int, int)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endPrefixMapping(string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.skippedEntity(string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.processingInstruction(string, string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.endElement(string, string, string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.close()
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.error(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.fatalError(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.SAX2RDFImpl.warning(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.ARPResource.isAnonymous()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.getAnonymousID()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.getURI()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.toString()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.hashCode()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.equals(object)
com.hp.hpl.jena.rdf.arp.impl.ARPResource.getUserData()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.setUserData(object)
com.hp.hpl.jena.rdf.arp.impl.ARPResource.hasNodeID()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.setHasBeenUsed()
com.hp.hpl.jena.rdf.arp.impl.ARPResource.getHasBeenUsed()
com.hp.hpl.jena.rdf.arp.impl.ARPString.toString()
com.hp.hpl.jena.rdf.arp.impl.ARPString.isWellFormedXML()
com.hp.hpl.jena.rdf.arp.impl.ARPString.getParseType()
com.hp.hpl.jena.rdf.arp.impl.ARPString.getLang()
com.hp.hpl.jena.rdf.arp.impl.ARPString.getDatatypeURI()
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.clone(iri, string, taint, taint)
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.withBase(string, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.keepDocument(xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.isSameAsDocument()
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.baseUsed(string, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext.checkBaseUse(iri, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.TaintImpl.taint()
com.hp.hpl.jena.rdf.arp.impl.TaintImpl.isTainted()
com.hp.hpl.jena.rdf.arp.impl.XMLContext.keepDocument(xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLContext.isSameAsDocument()
com.hp.hpl.jena.rdf.arp.impl.XMLContext.clone(iri, string, taint, taint)
com.hp.hpl.jena.rdf.arp.impl.XMLContext.baseUsed(string, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.XMLContext.checkBaseUse(iri, string, taint, xmlhandler)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.getSAXParser()
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.xmlDecl(augmentations, string, string, string)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.setRdfXmlParser(rdfxmlparser)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.getRdfXmlParser()
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.create()
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.parse(inputsource)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.parse(inputsource, string)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.initEncodingChecks(inputsource)
com.hp.hpl.jena.rdf.arp.impl.RDFXMLParser.setEncoding(string)
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.isInRdfns(taint)
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.error(int, taint)
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.deprecatedAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.getLocalName()
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.getUri()
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.getQName()
com.hp.hpl.jena.rdf.arp.impl.ElementLexer.bagIDAttribute(int, taint)
com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler.error(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler.warning(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler.fatalError(saxparseexception)
com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler.setErrorHandler(rdferrorhandler)
com.hp.hpl.jena.rdf.arp.lang.IanaLanguageTag.find(languagetag)
com.hp.hpl.jena.rdf.arp.lang.Iso3166.find(string)
com.hp.hpl.jena.rdf.arp.lang.LanguageTag.tagType()
com.hp.hpl.jena.rdf.arp.lang.LanguageTag.errorMessage()
com.hp.hpl.jena.rdf.arp.lang.Iso639.find(string)
com.hp.hpl.jena.rdf.arp.lang.Iso639.put(iso639, string)
com.hp.hpl.jena.rdf.arp.states.LookingForRDF.suggestParsetypeLiteral()
com.hp.hpl.jena.rdf.arp.states.LookingForRDF.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.LookingForRDF.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.setBuf(stringbuffer)
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.getBuf()
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.bufIsSet()
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsWantLiteralValueOrDescription.processingInstruction(string, string)
com.hp.hpl.jena.rdf.arp.states.WantEmpty.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.WantEmpty.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.Collection.startElement(anode, attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.Collection.restTriple(anode, anode)
com.hp.hpl.jena.rdf.arp.states.Collection.firstTriple(anode, anode)
com.hp.hpl.jena.rdf.arp.states.Collection.nil()
com.hp.hpl.jena.rdf.arp.states.Collection.endElement()
com.hp.hpl.jena.rdf.arp.states.Collection.abort()
com.hp.hpl.jena.rdf.arp.states.WantTopLevelDescription.suggestParsetypeLiteral()
com.hp.hpl.jena.rdf.arp.states.WantTopLevelDescription.endElement()
com.hp.hpl.jena.rdf.arp.states.WantTopLevelDescription.abort()
com.hp.hpl.jena.rdf.arp.states.Frame.getParent()
com.hp.hpl.jena.rdf.arp.states.Frame.warning(int, string)
com.hp.hpl.jena.rdf.arp.states.Frame.afterChild()
com.hp.hpl.jena.rdf.arp.states.Frame.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.states.Frame.endElement()
com.hp.hpl.jena.rdf.arp.states.Frame.processingInstruction(string, string)
com.hp.hpl.jena.rdf.arp.states.Frame.processPropertyAttributes(absxmlcontext, attributelexer, attributes)
com.hp.hpl.jena.rdf.arp.states.Frame.abort()
com.hp.hpl.jena.rdf.arp.states.Frame.rdfStartElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.Frame.suggestParsetypeLiteral()
com.hp.hpl.jena.rdf.arp.states.Frame.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral.endElement()
com.hp.hpl.jena.rdf.arp.states.WantTypedLiteral.afterChild()
com.hp.hpl.jena.rdf.arp.states.StartStateRDForDescription.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.StartStateRDForDescription.abort()
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.suggestParsetypeLiteral()
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.prefix(string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.append(string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.append(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.append(char)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.useNameSpace(map, string, string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.endElement()
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.startLitElement(map, string, string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.appendAttrValue(string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.comment(char, int, int)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.processingInstruction(string, string)
com.hp.hpl.jena.rdf.arp.states.AbsXMLLiteral.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.WantLiteralValueOrDescription.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.WantLiteralValueOrDescription.characters(char, int, int)
com.hp.hpl.jena.rdf.arp.states.WantLiteralValueOrDescription.endElement()
com.hp.hpl.jena.rdf.arp.states.WantDescription.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.WantDescription.clearSubject()
com.hp.hpl.jena.rdf.arp.states.WantDescription.aPredAndObj(anode, anode)
com.hp.hpl.jena.rdf.arp.states.WantDescription.makeSubjectReificationWith(anode)
com.hp.hpl.jena.rdf.arp.states.WantDescription.endElement()
com.hp.hpl.jena.rdf.arp.states.WantDescription.abort()
com.hp.hpl.jena.rdf.arp.states.DAMLCollection.restTriple(anode, anode)
com.hp.hpl.jena.rdf.arp.states.DAMLCollection.firstTriple(anode, anode)
com.hp.hpl.jena.rdf.arp.states.DAMLCollection.nil()
com.hp.hpl.jena.rdf.arp.states.OuterXMLLiteral.endElement()
com.hp.hpl.jena.rdf.arp.states.InnerXMLLiteral.endElement()
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.startElement(attributes, string, string, string)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.mustBeEmpty(attributelexer, attributes, int)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.nextFrame(absxmlcontext, attributelexer, attributes, int, int)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.withParsetype(absxmlcontext, string)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.suggestParsetypeLiteral()
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.aPredAndObj(anode, anode)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.makeSubjectReificationWith(anode)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.theObject(anode)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.endElement()
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.abort()
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.clearObject()
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.rdf_n(int)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.badStateCode(int)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.errorNumber(int)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.descriptionOfCases(attributelexer, int, string)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.pairwiseIncompatibleErrorMessage(attributelexer, int, string)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.complicatedErrorMessage(attributelexer, int, string)
com.hp.hpl.jena.rdf.arp.states.WantPropertyElement.propertyAttributeDescription(attributelexer, attributes, int)
com.hp.hpl.jena.rdf.arp.states.RDFCollection.nil()
com.hp.hpl.jena.rdf.arp.states.RDFCollection.restTriple(anode, anode)
com.hp.hpl.jena.rdf.arp.states.RDFCollection.firstTriple(anode, anode)
com.hp.hpl.jena.rdf.listeners.ObjectListener.added(object)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removed(object)
com.hp.hpl.jena.rdf.listeners.ObjectListener.addedStatement(statement)
com.hp.hpl.jena.rdf.listeners.ObjectListener.addedStatements(statement)
com.hp.hpl.jena.rdf.listeners.ObjectListener.addedStatements(list)
com.hp.hpl.jena.rdf.listeners.ObjectListener.addedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.ObjectListener.addedStatements(model)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removedStatement(statement)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removedStatements(statement)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removedStatements(list)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.ObjectListener.removedStatements(model)
com.hp.hpl.jena.rdf.listeners.ObjectListener.notifyEvent(model, object)
com.hp.hpl.jena.rdf.listeners.StatementListener.addedStatement(statement)
com.hp.hpl.jena.rdf.listeners.StatementListener.removedStatement(statement)
com.hp.hpl.jena.rdf.listeners.StatementListener.addedStatements(statement)
com.hp.hpl.jena.rdf.listeners.StatementListener.addedStatements(list)
com.hp.hpl.jena.rdf.listeners.StatementListener.addedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.StatementListener.addedStatements(model)
com.hp.hpl.jena.rdf.listeners.StatementListener.removedStatements(statement)
com.hp.hpl.jena.rdf.listeners.StatementListener.removedStatements(list)
com.hp.hpl.jena.rdf.listeners.StatementListener.removedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.StatementListener.removedStatements(model)
com.hp.hpl.jena.rdf.listeners.StatementListener.notifyEvent(model, object)
com.hp.hpl.jena.rdf.listeners.NullListener.addedStatement(statement)
com.hp.hpl.jena.rdf.listeners.NullListener.addedStatements(statement)
com.hp.hpl.jena.rdf.listeners.NullListener.addedStatements(list)
com.hp.hpl.jena.rdf.listeners.NullListener.addedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.NullListener.addedStatements(model)
com.hp.hpl.jena.rdf.listeners.NullListener.removedStatement(statement)
com.hp.hpl.jena.rdf.listeners.NullListener.removedStatements(statement)
com.hp.hpl.jena.rdf.listeners.NullListener.removedStatements(list)
com.hp.hpl.jena.rdf.listeners.NullListener.removedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.NullListener.removedStatements(model)
com.hp.hpl.jena.rdf.listeners.NullListener.notifyEvent(model, object)
com.hp.hpl.jena.rdf.listeners.ChangedListener.setChanged()
com.hp.hpl.jena.rdf.listeners.ChangedListener.hasChanged()
com.hp.hpl.jena.rdf.listeners.ChangedListener.addedStatement(statement)
com.hp.hpl.jena.rdf.listeners.ChangedListener.addedStatements(statement)
com.hp.hpl.jena.rdf.listeners.ChangedListener.addedStatements(list)
com.hp.hpl.jena.rdf.listeners.ChangedListener.addedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.ChangedListener.addedStatements(model)
com.hp.hpl.jena.rdf.listeners.ChangedListener.removedStatement(statement)
com.hp.hpl.jena.rdf.listeners.ChangedListener.removedStatements(statement)
com.hp.hpl.jena.rdf.listeners.ChangedListener.removedStatements(list)
com.hp.hpl.jena.rdf.listeners.ChangedListener.removedStatements(stmtiterator)
com.hp.hpl.jena.rdf.listeners.ChangedListener.removedStatements(model)
com.hp.hpl.jena.rdf.listeners.ChangedListener.notifyEvent(model, object)
com.hp.hpl.jena.vocabulary.RDFTest.getURI()
com.hp.hpl.jena.vocabulary.XSD.getURI()
com.hp.hpl.jena.vocabulary.RDFS.resource(string)
com.hp.hpl.jena.vocabulary.RDFS.property(string)
com.hp.hpl.jena.vocabulary.RDFS.getURI()
com.hp.hpl.jena.vocabulary.OWLResults.getURI()
com.hp.hpl.jena.vocabulary.OWL.getURI()
com.hp.hpl.jena.vocabulary.LocationMappingVocab.getURI()
com.hp.hpl.jena.vocabulary.ReasonerVocabulary.jenaReasonerProperty(string)
com.hp.hpl.jena.vocabulary.ReasonerVocabulary.ruleReasonerProperty(string)
com.hp.hpl.jena.vocabulary.ReasonerVocabulary.makeDirect(property)
com.hp.hpl.jena.vocabulary.ReasonerVocabulary.getRBNamespace()
com.hp.hpl.jena.vocabulary.ReasonerVocabulary.getJenaReasonerNS()
com.hp.hpl.jena.vocabulary.RDF.getURI()
com.hp.hpl.jena.vocabulary.RDF.resource(string)
com.hp.hpl.jena.vocabulary.RDF.property(string)
com.hp.hpl.jena.vocabulary.RDF.li(int)
com.hp.hpl.jena.vocabulary.VCARD.getURI()
com.hp.hpl.jena.vocabulary.OntEventsVocab.getURI()
com.hp.hpl.jena.vocabulary.DCTerms.getURI()
com.hp.hpl.jena.vocabulary.DAML_OIL.getNamespace()
com.hp.hpl.jena.vocabulary.DAML_OIL.getInstance()
com.hp.hpl.jena.vocabulary.DAML_OIL.NAMESPACE_DAML()
com.hp.hpl.jena.vocabulary.DAML_OIL.List()
com.hp.hpl.jena.vocabulary.DAML_OIL.UniqueProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.TransitiveProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.UnambiguousProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.Restriction()
com.hp.hpl.jena.vocabulary.DAML_OIL.Ontology()
com.hp.hpl.jena.vocabulary.DAML_OIL.nil()
com.hp.hpl.jena.vocabulary.DAML_OIL.Thing()
com.hp.hpl.jena.vocabulary.DAML_OIL.Nothing()
com.hp.hpl.jena.vocabulary.DAML_OIL.Literal()
com.hp.hpl.jena.vocabulary.DAML_OIL.Class()
com.hp.hpl.jena.vocabulary.DAML_OIL.Datatype()
com.hp.hpl.jena.vocabulary.DAML_OIL.DatatypeProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.ObjectProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.versionInfo()
com.hp.hpl.jena.vocabulary.DAML_OIL.imports()
com.hp.hpl.jena.vocabulary.DAML_OIL.disjointWith()
com.hp.hpl.jena.vocabulary.DAML_OIL.disjointUnionOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.sameClassAs()
com.hp.hpl.jena.vocabulary.DAML_OIL.samePropertyAs()
com.hp.hpl.jena.vocabulary.DAML_OIL.oneOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.intersectionOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.unionOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.complementOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.equivalentTo()
com.hp.hpl.jena.vocabulary.DAML_OIL.onProperty()
com.hp.hpl.jena.vocabulary.DAML_OIL.toClass()
com.hp.hpl.jena.vocabulary.DAML_OIL.hasValue()
com.hp.hpl.jena.vocabulary.DAML_OIL.hasClass()
com.hp.hpl.jena.vocabulary.DAML_OIL.hasClassQ()
com.hp.hpl.jena.vocabulary.DAML_OIL.cardinality()
com.hp.hpl.jena.vocabulary.DAML_OIL.minCardinality()
com.hp.hpl.jena.vocabulary.DAML_OIL.maxCardinality()
com.hp.hpl.jena.vocabulary.DAML_OIL.cardinalityQ()
com.hp.hpl.jena.vocabulary.DAML_OIL.minCardinalityQ()
com.hp.hpl.jena.vocabulary.DAML_OIL.maxCardinalityQ()
com.hp.hpl.jena.vocabulary.DAML_OIL.inverseOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.first()
com.hp.hpl.jena.vocabulary.DAML_OIL.rest()
com.hp.hpl.jena.vocabulary.DAML_OIL.item()
com.hp.hpl.jena.vocabulary.DAML_OIL.subPropertyOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.type()
com.hp.hpl.jena.vocabulary.DAML_OIL.value()
com.hp.hpl.jena.vocabulary.DAML_OIL.subClassOf()
com.hp.hpl.jena.vocabulary.DAML_OIL.domain()
com.hp.hpl.jena.vocabulary.DAML_OIL.range()
com.hp.hpl.jena.vocabulary.DAML_OIL.label()
com.hp.hpl.jena.vocabulary.DAML_OIL.comment()
com.hp.hpl.jena.vocabulary.DAML_OIL.seeAlso()
com.hp.hpl.jena.vocabulary.DAML_OIL.isDefinedBy()
com.hp.hpl.jena.vocabulary.DAML_OIL.sameIndividualAs()
com.hp.hpl.jena.vocabulary.DAML_OIL.differentIndividualFrom()
com.hp.hpl.jena.vocabulary.DAML_OIL.Property()
com.hp.hpl.jena.vocabulary.TestManifestX.getURI()
com.hp.hpl.jena.vocabulary.DC_10.getURI()
com.hp.hpl.jena.vocabulary.DC_10.cp(string)
com.hp.hpl.jena.vocabulary.DCTypes.getURI()
com.hp.hpl.jena.vocabulary.TestManifest.getURI()
com.hp.hpl.jena.vocabulary.RSS.getURI()
com.hp.hpl.jena.vocabulary.DC_11.getURI()
com.hp.hpl.jena.vocabulary.RDFSyntax.getURI()
com.hp.hpl.jena.vocabulary.OWLTest.getURI()
com.hp.hpl.jena.vocabulary.OntDocManagerVocab.getURI()
com.hp.hpl.jena.vocabulary.DB.getURI()
com.hp.hpl.jena.vocabulary.OWL2.getURI()
com.hp.hpl.jena.vocabulary.OWL2.resource(string)
com.hp.hpl.jena.vocabulary.OWL2.property(string)
com.hp.hpl.jena.mem.MatchOrBind.createSP(domain, processedtriple, triple)
com.hp.hpl.jena.mem.MatchOrBind.createPO(domain, processedtriple, triple)
com.hp.hpl.jena.mem.MatchOrBind.matches(triple)
com.hp.hpl.jena.mem.MatchOrBind.reset(domain)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.add(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.remove(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.iterator(hashcommon, object)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.contains(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.domain()
com.hp.hpl.jena.mem.NodeToTriplesMapBase.getIndexField(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.clear()
com.hp.hpl.jena.mem.NodeToTriplesMapBase.size()
com.hp.hpl.jena.mem.NodeToTriplesMapBase.removedOneViaIterator()
com.hp.hpl.jena.mem.NodeToTriplesMapBase.isEmpty()
com.hp.hpl.jena.mem.NodeToTriplesMapBase.iterator(node, node, node)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.iteratorForIndexed(object)
com.hp.hpl.jena.mem.NodeToTriplesMapBase.iterateAll()
com.hp.hpl.jena.mem.HashedBunchMap.newKeyArray(int)
com.hp.hpl.jena.mem.HashedBunchMap.clear()
com.hp.hpl.jena.mem.HashedBunchMap.size()
com.hp.hpl.jena.mem.HashedBunchMap.get(object)
com.hp.hpl.jena.mem.HashedBunchMap.put(object, triplebunch)
com.hp.hpl.jena.mem.HashedBunchMap.grow()
com.hp.hpl.jena.mem.HashedBunchMap.removeAssociatedValues(int)
com.hp.hpl.jena.mem.HashedBunchMap.moveAssociatedValues(int, int)
com.hp.hpl.jena.mem.GraphTripleStoreBase.close()
com.hp.hpl.jena.mem.GraphTripleStoreBase.add(triple)
com.hp.hpl.jena.mem.GraphTripleStoreBase.delete(triple)
com.hp.hpl.jena.mem.GraphTripleStoreBase.clear()
com.hp.hpl.jena.mem.GraphTripleStoreBase.size()
com.hp.hpl.jena.mem.GraphTripleStoreBase.isEmpty()
com.hp.hpl.jena.mem.GraphTripleStoreBase.listSubjects()
com.hp.hpl.jena.mem.GraphTripleStoreBase.listPredicates()
com.hp.hpl.jena.mem.GraphTripleStoreBase.expectOnlyNodes(iterator)
com.hp.hpl.jena.mem.GraphTripleStoreBase.map1(object)
com.hp.hpl.jena.mem.GraphTripleStoreBase.listObjects(object)
com.hp.hpl.jena.mem.GraphTripleStoreBase.contains(triple)
com.hp.hpl.jena.mem.GraphTripleStoreBase.containsByEquality(triple)
com.hp.hpl.jena.mem.GraphTripleStoreBase.find(triplematch)
com.hp.hpl.jena.mem.NodeToTriplesMap.add(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.baseSet()
com.hp.hpl.jena.mem.NodeToTriplesMap.createSetBunch()
com.hp.hpl.jena.mem.NodeToTriplesMap.remove(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.iterator(hashcommon, object)
com.hp.hpl.jena.mem.NodeToTriplesMap.contains(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.equalsObjectOK(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.slowContains(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.iterateAll(triple)
com.hp.hpl.jena.mem.NodeToTriplesMap.iterator(node, node, node)
com.hp.hpl.jena.mem.NodeToTriplesMap.iteratorForIndexed(object)
com.hp.hpl.jena.mem.NodeToTriplesMap.get(object)
com.hp.hpl.jena.mem.ObjectIterator.iteratorFor(object)
com.hp.hpl.jena.mem.ObjectIterator.hasNext()
com.hp.hpl.jena.mem.ObjectIterator.next()
com.hp.hpl.jena.mem.ObjectIterator.refillPending()
com.hp.hpl.jena.mem.ObjectIterator.remove()
com.hp.hpl.jena.mem.ArrayBunch.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.ArrayBunch.contains(triple)
com.hp.hpl.jena.mem.ArrayBunch.size()
com.hp.hpl.jena.mem.ArrayBunch.add(triple)
com.hp.hpl.jena.mem.ArrayBunch.grow()
com.hp.hpl.jena.mem.ArrayBunch.remove(triple)
com.hp.hpl.jena.mem.ArrayBunch.app(domain, matchorbind, stageelement)
com.hp.hpl.jena.mem.ArrayBunch.iterator()
com.hp.hpl.jena.mem.ArrayBunch.iterator(hashcommon)
com.hp.hpl.jena.mem.HashCommon.newKeyArray(int)
com.hp.hpl.jena.mem.HashCommon.emptied()
com.hp.hpl.jena.mem.HashCommon.emptied()
com.hp.hpl.jena.mem.HashCommon.removeAssociatedValues(int)
com.hp.hpl.jena.mem.HashCommon.moveAssociatedValues(int, int)
com.hp.hpl.jena.mem.HashCommon.getItemForTestingAt(int)
com.hp.hpl.jena.mem.HashCommon.initialIndexFor(object)
com.hp.hpl.jena.mem.HashCommon.improveHashCode(int)
com.hp.hpl.jena.mem.HashCommon.findSlot(key)
com.hp.hpl.jena.mem.HashCommon.remove(key)
com.hp.hpl.jena.mem.HashCommon.primitiveRemove(key)
com.hp.hpl.jena.mem.HashCommon.growCapacityAndThreshold()
com.hp.hpl.jena.mem.HashCommon.nextSize(int)
com.hp.hpl.jena.mem.HashCommon.removeFrom(int)
com.hp.hpl.jena.mem.HashCommon.showkeys()
com.hp.hpl.jena.mem.HashCommon.keyIterator()
com.hp.hpl.jena.mem.HashCommon.keyIterator(notifyempty)
com.hp.hpl.jena.mem.HashCommon.hasNext()
com.hp.hpl.jena.mem.HashCommon.next()
com.hp.hpl.jena.mem.HashCommon.remove()
com.hp.hpl.jena.mem.HashCommon.hasNext()
com.hp.hpl.jena.mem.HashCommon.next()
com.hp.hpl.jena.mem.HashCommon.remove()
com.hp.hpl.jena.mem.GraphMemQueryHandler.patternStage(expressionset, mapping, triple)
com.hp.hpl.jena.mem.WrappedHashMap.clear()
com.hp.hpl.jena.mem.WrappedHashMap.size()
com.hp.hpl.jena.mem.WrappedHashMap.get(object)
com.hp.hpl.jena.mem.WrappedHashMap.put(object, triplebunch)
com.hp.hpl.jena.mem.WrappedHashMap.remove(object)
com.hp.hpl.jena.mem.WrappedHashMap.keyIterator()
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.objectsFor(node, node)
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.predicatesFor(node, node)
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.subjectsFor(node, node)
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.bothANY(node, node)
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.findPredicates()
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.findObjects()
com.hp.hpl.jena.mem.GraphMemBaseQueryHandler.findSubjects()
com.hp.hpl.jena.mem.NodeToTriplesMapMem.add(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.remove(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.iterator(hashcommon, object)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.emptied()
com.hp.hpl.jena.mem.NodeToTriplesMapMem.contains(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.iterator(node, node, node)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.createFixedOApplyer(domain, matcher, processedtriple, stageelement)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.createBoundOApplyer(domain, matcher, processedtriple, stageelement)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.createBoundSApplyer(domain, matcher, processedtriple, stageelement)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.createFixedSApplyer(domain, matcher, processedtriple, stageelement)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.get(object)
com.hp.hpl.jena.mem.NodeToTriplesMapMem.iteratorForIndexed(object)
com.hp.hpl.jena.mem.GraphMemBulkUpdateHandler.removeAll()
com.hp.hpl.jena.mem.GraphMemBulkUpdateHandler.clearComponents()
com.hp.hpl.jena.mem.TrackingTripleIterator.next()
com.hp.hpl.jena.mem.GraphTripleStoreMem.getSubjects()
com.hp.hpl.jena.mem.GraphTripleStoreMem.getPredicates()
com.hp.hpl.jena.mem.GraphTripleStoreMem.getObjects()
com.hp.hpl.jena.mem.GraphTripleStoreMem.createApplyer(processedtriple)
com.hp.hpl.jena.mem.GraphTripleStoreMem.containsApplyer(domain, matcher, processedtriple, stageelement)
com.hp.hpl.jena.mem.GraphTripleStoreMem.varSvarOApplyer(domain, domain, matcher, querytriple, stageelement)
com.hp.hpl.jena.mem.GraphMem.createTripleStore()
com.hp.hpl.jena.mem.GraphMem.destroy()
com.hp.hpl.jena.mem.GraphMem.performAdd(triple)
com.hp.hpl.jena.mem.GraphMem.performDelete(triple)
com.hp.hpl.jena.mem.GraphMem.graphBaseSize()
com.hp.hpl.jena.mem.GraphMem.queryHandler()
com.hp.hpl.jena.mem.GraphMem.createStatisticsHandler()
com.hp.hpl.jena.mem.GraphMem.getStatistic(node, node, node)
com.hp.hpl.jena.mem.GraphMem.countsInMap(node, node, nodetotriplesmapmem, nodetotriplesmapmem)
com.hp.hpl.jena.mem.GraphMem.countInMap(node, nodetotriplesmapmem)
com.hp.hpl.jena.mem.GraphMem.graphBaseFind(triplematch)
com.hp.hpl.jena.mem.GraphMem.createApplyer(processedtriple)
com.hp.hpl.jena.mem.GraphMem.hasReifications()
com.hp.hpl.jena.mem.GraphMem.matchesReification(querytriple)
com.hp.hpl.jena.mem.GraphMem.withReification(applyer, domain, matcher, querytriple, stageelement)
com.hp.hpl.jena.mem.GraphMem.graphBaseContains(triple)
com.hp.hpl.jena.mem.GraphMem.clear()
com.hp.hpl.jena.mem.StoreTripleIterator.remove()
com.hp.hpl.jena.mem.SetBunch.equalsObjectOK(triple)
com.hp.hpl.jena.mem.SetBunch.contains(triple)
com.hp.hpl.jena.mem.SetBunch.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.SetBunch.slowContains(triple)
com.hp.hpl.jena.mem.SetBunch.size()
com.hp.hpl.jena.mem.SetBunch.add(triple)
com.hp.hpl.jena.mem.SetBunch.remove(triple)
com.hp.hpl.jena.mem.SetBunch.iterator(hashcommon)
com.hp.hpl.jena.mem.SetBunch.iterator()
com.hp.hpl.jena.mem.SetBunch.app(domain, matchorbind, stageelement)
com.hp.hpl.jena.mem.ProcessedTriple.createTriple(querynode, querynode, querynode)
com.hp.hpl.jena.mem.ProcessedTriple.createArray(int)
com.hp.hpl.jena.mem.ProcessedTriple.createApplyer(graph)
com.hp.hpl.jena.mem.ProcessedTriple.hasNoVariables()
com.hp.hpl.jena.mem.GraphMemBase.createTripleStore()
com.hp.hpl.jena.mem.GraphMemBase.openAgain()
com.hp.hpl.jena.mem.GraphMemBase.destroy()
com.hp.hpl.jena.mem.GraphMemBase.close()
com.hp.hpl.jena.mem.GraphMemBase.clear()
com.hp.hpl.jena.mem.GraphMemBase.getBulkUpdateHandler()
com.hp.hpl.jena.mem.GraphMemBase.isSafeForEquality(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.newKeyArray(int)
com.hp.hpl.jena.mem.HashedTripleBunch.contains(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.findSlotBySameValueAs(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.containsBySameValueAs(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.size()
com.hp.hpl.jena.mem.HashedTripleBunch.currentCapacity()
com.hp.hpl.jena.mem.HashedTripleBunch.add(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.grow()
com.hp.hpl.jena.mem.HashedTripleBunch.remove(triple)
com.hp.hpl.jena.mem.HashedTripleBunch.iterator()
com.hp.hpl.jena.mem.HashedTripleBunch.iterator(notifyempty)
com.hp.hpl.jena.mem.HashedTripleBunch.app(domain, matchorbind, stageelement)
