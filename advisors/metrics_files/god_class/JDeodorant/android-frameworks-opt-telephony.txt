com.android.internal.telephony.SmsUsageMonitor	[com.android.internal.telephony.SmsUsageMonitor::android.content.Context mContext, com.android.internal.telephony.SmsUsageMonitor::getPatternMatcherFromResource(java.lang.String):com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher, com.android.internal.telephony.SmsUsageMonitor::getPatternMatcherFromXmlParser(org.xmlpull.v1.XmlPullParser, java.lang.String):com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher, com.android.internal.telephony.SmsUsageMonitor::java.io.File mPatternFile, com.android.internal.telephony.SmsUsageMonitor::getPatternMatcherFromFile(java.lang.String):com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher, com.android.internal.telephony.SmsUsageMonitor::checkDestination(java.lang.String, java.lang.String):int, com.android.internal.telephony.SmsUsageMonitor::java.lang.String mCurrentCountry, com.android.internal.telephony.SmsUsageMonitor::com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher mCurrentPatternMatcher, com.android.internal.telephony.SmsUsageMonitor::java.util.concurrent.atomic.AtomicBoolean mCheckEnabled, com.android.internal.telephony.SmsUsageMonitor::com.android.internal.telephony.SmsUsageMonitor.SettingsObserverHandler mSettingsObserverHandler, com.android.internal.telephony.SmsUsageMonitor::long mPatternFileLastModified]
com.android.internal.telephony.SmsUsageMonitor	[com.android.internal.telephony.SmsUsageMonitor::int mCheckPeriod, com.android.internal.telephony.SmsUsageMonitor::int mMaxAllowed, com.android.internal.telephony.SmsUsageMonitor::isUnderLimit(java.util.ArrayList<java.lang.Long>, int):boolean, com.android.internal.telephony.SmsUsageMonitor::removeExpiredTimestamps():void, com.android.internal.telephony.SmsUsageMonitor::java.util.HashMap<java.lang.String,java.util.ArrayList<java.lang.Long>> mSmsStamp, com.android.internal.telephony.SmsUsageMonitor::check(java.lang.String, int):boolean, com.android.internal.telephony.SmsUsageMonitor::dispose():void]
com.android.internal.telephony.SmsUsageMonitor	[com.android.internal.telephony.SmsUsageMonitor::android.util.AtomicFile mPolicyFile, com.android.internal.telephony.SmsUsageMonitor::loadPremiumSmsPolicyDb():void, com.android.internal.telephony.SmsUsageMonitor::java.util.HashMap<java.lang.String,java.lang.Integer> mPremiumSmsPolicy, com.android.internal.telephony.SmsUsageMonitor::setPremiumSmsPermission(java.lang.String, int):void, com.android.internal.telephony.SmsUsageMonitor::getPremiumSmsPermission(java.lang.String):int, com.android.internal.telephony.SmsUsageMonitor::writePremiumSmsPolicyDb():void]
com.android.internal.telephony.SmsUsageMonitor	[com.android.internal.telephony.SmsUsageMonitor::android.content.Context mContext, com.android.internal.telephony.SmsUsageMonitor::getPatternMatcherFromResource(java.lang.String):com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher, com.android.internal.telephony.SmsUsageMonitor::getPatternMatcherFromXmlParser(org.xmlpull.v1.XmlPullParser, java.lang.String):com.android.internal.telephony.SmsUsageMonitor.ShortCodePatternMatcher]
com.android.internal.telephony.SmsUsageMonitor	[com.android.internal.telephony.SmsUsageMonitor::int mCheckPeriod, com.android.internal.telephony.SmsUsageMonitor::int mMaxAllowed, com.android.internal.telephony.SmsUsageMonitor::isUnderLimit(java.util.ArrayList<java.lang.Long>, int):boolean, com.android.internal.telephony.SmsUsageMonitor::removeExpiredTimestamps():void]
com.android.internal.telephony.cdma.EriManager	[com.android.internal.telephony.cdma.EriManager::android.content.Context mContext, com.android.internal.telephony.cdma.EriManager::boolean isEriFileLoaded, com.android.internal.telephony.cdma.EriManager::dispose():void, com.android.internal.telephony.cdma.EriManager::com.android.internal.telephony.cdma.EriManager.EriFile mEriFile, com.android.internal.telephony.cdma.EriManager::getEriFileVersion():int, com.android.internal.telephony.cdma.EriManager::getEriNumberOfEntries():int, com.android.internal.telephony.cdma.EriManager::getEriFileType():int, com.android.internal.telephony.cdma.EriManager::getEriInfo(int):com.android.internal.telephony.cdma.EriInfo, com.android.internal.telephony.cdma.EriManager::getEriDisplayInformation(int, int):com.android.internal.telephony.cdma.EriManager.EriDisplayInformation, com.android.internal.telephony.cdma.EriManager::loadEriFileFromXml():void, com.android.internal.telephony.cdma.EriManager::getCdmaEriIconIndex(int, int):int, com.android.internal.telephony.cdma.EriManager::getCdmaEriIconMode(int, int):int, com.android.internal.telephony.cdma.EriManager::getCdmaEriText(int, int):java.lang.String]
com.android.internal.telephony.cdma.EriManager	[com.android.internal.telephony.cdma.EriManager::int mEriFileSource, com.android.internal.telephony.cdma.EriManager::loadEriFile():void, com.android.internal.telephony.cdma.EriManager::loadEriFileFromModem():void, com.android.internal.telephony.cdma.EriManager::loadEriFileFromFileSystem():void]
com.android.internal.telephony.PhoneStateIntentReceiver	[com.android.internal.telephony.PhoneStateIntentReceiver::android.content.Context mContext, com.android.internal.telephony.PhoneStateIntentReceiver::unregisterIntent():void, com.android.internal.telephony.PhoneStateIntentReceiver::registerIntent():void, com.android.internal.telephony.PhoneStateIntentReceiver::android.content.IntentFilter mFilter]
com.android.internal.telephony.PhoneStateIntentReceiver	[com.android.internal.telephony.PhoneStateIntentReceiver::android.content.Context mContext, com.android.internal.telephony.PhoneStateIntentReceiver::unregisterIntent():void, com.android.internal.telephony.PhoneStateIntentReceiver::registerIntent():void, com.android.internal.telephony.PhoneStateIntentReceiver::android.content.IntentFilter mFilter, com.android.internal.telephony.PhoneStateIntentReceiver::int mPhoneStateEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifyPhoneCallState(int):void, com.android.internal.telephony.PhoneStateIntentReceiver::int mServiceStateEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifyServiceState(int):void, com.android.internal.telephony.PhoneStateIntentReceiver::int mAsuEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifySignalStrength(int):void]
com.android.internal.telephony.PhoneStateIntentReceiver	[com.android.internal.telephony.PhoneStateIntentReceiver::int mPhoneStateEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifyPhoneCallState(int):void, com.android.internal.telephony.PhoneStateIntentReceiver::int mServiceStateEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifyServiceState(int):void, com.android.internal.telephony.PhoneStateIntentReceiver::int mAsuEventWhat, com.android.internal.telephony.PhoneStateIntentReceiver::notifySignalStrength(int):void]
com.android.internal.telephony.RetryManager	[com.android.internal.telephony.RetryManager::parseNonNegativeInt(java.lang.String, java.lang.String):android.util.Pair<java.lang.Boolean,java.lang.Integer>, com.android.internal.telephony.RetryManager::validateNonNegativeInt(java.lang.String, int):boolean, com.android.internal.telephony.RetryManager::log(java.lang.String):void]
com.android.internal.telephony.SmsStorageMonitor	[com.android.internal.telephony.SmsStorageMonitor::android.content.Context mContext, com.android.internal.telephony.SmsStorageMonitor::android.os.PowerManager.WakeLock mWakeLock, com.android.internal.telephony.SmsStorageMonitor::createWakelock():void, com.android.internal.telephony.SmsStorageMonitor::handleIccFull():void]
com.android.internal.telephony.cat.CommandParamsFactory	[com.android.internal.telephony.cat.CommandParamsFactory::processCommandDetails(java.util.List<com.android.internal.telephony.cat.ComprehensionTlv>):com.android.internal.telephony.cat.CommandDetails, com.android.internal.telephony.cat.CommandParamsFactory::searchForTag(com.android.internal.telephony.cat.ComprehensionTlvTag, java.util.List<com.android.internal.telephony.cat.ComprehensionTlv>):com.android.internal.telephony.cat.ComprehensionTlv, com.android.internal.telephony.cat.CommandParamsFactory::searchForNextTag(com.android.internal.telephony.cat.ComprehensionTlvTag, java.util.Iterator<com.android.internal.telephony.cat.ComprehensionTlv>):com.android.internal.telephony.cat.ComprehensionTlv]
com.android.internal.telephony.gsm.GsmServiceStateTracker	[com.android.internal.telephony.gsm.GsmServiceStateTracker::long mSavedTime, com.android.internal.telephony.gsm.GsmServiceStateTracker::long mSavedAtTime, com.android.internal.telephony.gsm.GsmServiceStateTracker::saveNitzTime(long):void]
com.android.internal.telephony.uicc.AdnRecordCache	[com.android.internal.telephony.uicc.AdnRecordCache::android.util.SparseArray<android.os.Message> userWriteResponse, com.android.internal.telephony.uicc.AdnRecordCache::clearUserWriters():void, com.android.internal.telephony.uicc.AdnRecordCache::sendErrorResponse(android.os.Message, java.lang.String):void]
com.android.internal.telephony.uicc.AdnRecordCache	[com.android.internal.telephony.uicc.AdnRecordCache::android.util.SparseArray<java.util.ArrayList<android.os.Message>> adnLikeWaiters, com.android.internal.telephony.uicc.AdnRecordCache::clearWaiters():void, com.android.internal.telephony.uicc.AdnRecordCache::notifyWaiters(java.util.ArrayList<android.os.Message>, android.os.AsyncResult):void]
android.telephony.SmsCbEtwsInfo	[android.telephony.SmsCbEtwsInfo::byte[] mWarningSecurityInformation, android.telephony.SmsCbEtwsInfo::getPrimaryNotificationTimestamp():long, android.telephony.SmsCbEtwsInfo::getPrimaryNotificationSignature():byte[]]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mPreciseCallStateRegistrants, com.android.internal.telephony.CallManager::registerForPreciseCallStateChanged(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForPreciseCallStateChanged(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mSuppServiceFailedRegistrants, com.android.internal.telephony.CallManager::registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForSuppServiceFailed(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mResendIncallMuteRegistrants, com.android.internal.telephony.CallManager::registerForResendIncallMute(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForResendIncallMute(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mMmiInitiateRegistrants, com.android.internal.telephony.CallManager::registerForMmiInitiate(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForMmiInitiate(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mInCallVoicePrivacyOffRegistrants, com.android.internal.telephony.CallManager::registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForInCallVoicePrivacyOff(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mRingbackToneRegistrants, com.android.internal.telephony.CallManager::registerForRingbackTone(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForRingbackTone(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mDisplayInfoRegistrants, com.android.internal.telephony.CallManager::registerForDisplayInfo(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForDisplayInfo(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mNewRingingConnectionRegistrants, com.android.internal.telephony.CallManager::registerForNewRingingConnection(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForNewRingingConnection(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mPostDialCharacterRegistrants, com.android.internal.telephony.CallManager::registerForPostDialCharacter(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForPostDialCharacter(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mEcmTimerResetRegistrants, com.android.internal.telephony.CallManager::registerForEcmTimerReset(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForEcmTimerReset(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mMmiCompleteRegistrants, com.android.internal.telephony.CallManager::registerForMmiComplete(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForMmiComplete(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mInCallVoicePrivacyOnRegistrants, com.android.internal.telephony.CallManager::registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForInCallVoicePrivacyOn(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::java.util.ArrayList<com.android.internal.telephony.Phone> mPhones, com.android.internal.telephony.CallManager::getAllPhones():java.util.List<com.android.internal.telephony.Phone>, com.android.internal.telephony.CallManager::getState():com.android.internal.telephony.PhoneConstants.State, com.android.internal.telephony.CallManager::getServiceState():int, com.android.internal.telephony.CallManager::clearDisconnected():void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mSignalInfoRegistrants, com.android.internal.telephony.CallManager::registerForSignalInfo(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForSignalInfo(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mDisconnectRegistrants, com.android.internal.telephony.CallManager::registerForDisconnect(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForDisconnect(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mCallWaitingRegistrants, com.android.internal.telephony.CallManager::registerForCallWaiting(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForCallWaiting(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mCdmaOtaStatusChangeRegistrants, com.android.internal.telephony.CallManager::registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForCdmaOtaStatusChange(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mIncomingRingRegistrants, com.android.internal.telephony.CallManager::registerForIncomingRing(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForIncomingRing(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mServiceStateChangedRegistrants, com.android.internal.telephony.CallManager::registerForServiceStateChanged(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForServiceStateChanged(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.Handler mHandler, com.android.internal.telephony.CallManager::registerForPhoneStates(com.android.internal.telephony.Phone):void, com.android.internal.telephony.CallManager::unregisterForPhoneStates(com.android.internal.telephony.Phone):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mUnknownConnectionRegistrants, com.android.internal.telephony.CallManager::registerForUnknownConnection(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForUnknownConnection(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::android.os.RegistrantList mSubscriptionInfoReadyRegistrants, com.android.internal.telephony.CallManager::registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.CallManager::unregisterForSubscriptionInfoReady(android.os.Handler):void]
com.android.internal.telephony.CallManager	[com.android.internal.telephony.CallManager::java.util.ArrayList<com.android.internal.telephony.Call> mRingingCalls, com.android.internal.telephony.CallManager::getRingingCalls():java.util.List<com.android.internal.telephony.Call>, com.android.internal.telephony.CallManager::com.android.internal.telephony.Phone mDefaultPhone, com.android.internal.telephony.CallManager::java.util.ArrayList<com.android.internal.telephony.Call> mBackgroundCalls, com.android.internal.telephony.CallManager::getBackgroundCalls():java.util.List<com.android.internal.telephony.Call>, com.android.internal.telephony.CallManager::java.util.ArrayList<com.android.internal.telephony.Call> mForegroundCalls, com.android.internal.telephony.CallManager::getForegroundCalls():java.util.List<com.android.internal.telephony.Call>, com.android.internal.telephony.CallManager::getContext():android.content.Context, com.android.internal.telephony.CallManager::hasActiveFgCall():boolean, com.android.internal.telephony.CallManager::hasActiveBgCall():boolean, com.android.internal.telephony.CallManager::hasActiveRingingCall():boolean, com.android.internal.telephony.CallManager::hasDisconnectedFgCall():boolean, com.android.internal.telephony.CallManager::hasDisconnectedBgCall():boolean, com.android.internal.telephony.CallManager::getFirstActiveCall(java.util.ArrayList<com.android.internal.telephony.Call>):com.android.internal.telephony.Call, com.android.internal.telephony.CallManager::getFirstNonIdleCall(java.util.List<com.android.internal.telephony.Call>):com.android.internal.telephony.Call, com.android.internal.telephony.CallManager::getFirstCallOfState(java.util.ArrayList<com.android.internal.telephony.Call>, com.android.internal.telephony.Call.State):com.android.internal.telephony.Call, com.android.internal.telephony.CallManager::getActiveFgCallState():com.android.internal.telephony.Call.State]
com.android.internal.telephony.cdma.CdmaCallTracker	[com.android.internal.telephony.cdma.CdmaCallTracker::android.os.RegistrantList callWaitingRegistrants, com.android.internal.telephony.cdma.CdmaCallTracker::registerForCallWaiting(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.cdma.CdmaCallTracker::unregisterForCallWaiting(android.os.Handler):void, com.android.internal.telephony.cdma.CdmaCallTracker::notifyCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification):void]
com.android.internal.telephony.cdma.CdmaServiceStateTracker	[com.android.internal.telephony.cdma.CdmaServiceStateTracker::android.content.ContentResolver cr, com.android.internal.telephony.cdma.CdmaServiceStateTracker::getAutoTime():boolean, com.android.internal.telephony.cdma.CdmaServiceStateTracker::getAutoTimeZone():boolean]
com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager	[com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager::android.os.RegistrantList mCdmaSubscriptionSourceChangedRegistrants, com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager::registerForCdmaSubscriptionSourceChanged(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager::getInstance(android.content.Context, com.android.internal.telephony.CommandsInterface, android.os.Handler, int, java.lang.Object):com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager]
com.android.internal.telephony.gsm.SmsCbHeader	[com.android.internal.telephony.gsm.SmsCbHeader::int format, com.android.internal.telephony.gsm.SmsCbHeader::isEtwsPrimaryNotification():boolean, com.android.internal.telephony.gsm.SmsCbHeader::isUmtsFormat():boolean]
com.android.internal.telephony.gsm.SmsCbHeader	[com.android.internal.telephony.gsm.SmsCbHeader::int serialNumber, com.android.internal.telephony.gsm.SmsCbHeader::isEtwsPopupAlert():boolean, com.android.internal.telephony.gsm.SmsCbHeader::isEtwsEmergencyUserAlert():boolean]
com.android.internal.telephony.gsm.SmsCbHeader	[com.android.internal.telephony.gsm.SmsCbHeader::int messageIdentifier, com.android.internal.telephony.gsm.SmsCbHeader::isEmergencyMessage():boolean, com.android.internal.telephony.gsm.SmsCbHeader::isEtwsMessage():boolean, com.android.internal.telephony.gsm.SmsCbHeader::isCmasMessage():boolean, com.android.internal.telephony.gsm.SmsCbHeader::getEtwsWarningType():int, com.android.internal.telephony.gsm.SmsCbHeader::getCmasMessageClass():int, com.android.internal.telephony.gsm.SmsCbHeader::getCmasSeverity():int, com.android.internal.telephony.gsm.SmsCbHeader::getCmasUrgency():int, com.android.internal.telephony.gsm.SmsCbHeader::getCmasCertainty():int]
com.android.internal.telephony.test.ModelInterpreter	[com.android.internal.telephony.test.ModelInterpreter::java.io.OutputStream out, com.android.internal.telephony.test.ModelInterpreter::println(java.lang.String):void, com.android.internal.telephony.test.ModelInterpreter::print(java.lang.String):void]
com.android.internal.telephony.uicc.UiccController	[com.android.internal.telephony.uicc.UiccController::android.os.RegistrantList mIccChangedRegistrants, com.android.internal.telephony.uicc.UiccController::registerForIccChanged(android.os.Handler, int, java.lang.Object):void, com.android.internal.telephony.uicc.UiccController::unregisterForIccChanged(android.os.Handler):void]
com.android.internal.telephony.gsm.UsimPhoneBookManager	[com.android.internal.telephony.gsm.UsimPhoneBookManager::java.util.ArrayList<com.android.internal.telephony.uicc.AdnRecord> mPhoneBookRecords, com.android.internal.telephony.gsm.UsimPhoneBookManager::java.util.ArrayList<byte[]> mIapFileRecord, com.android.internal.telephony.gsm.UsimPhoneBookManager::java.util.ArrayList<byte[]> mEmailFileRecord, com.android.internal.telephony.gsm.UsimPhoneBookManager::java.util.Map<java.lang.Integer,java.util.ArrayList<java.lang.String>> mEmailsForAdnRec, com.android.internal.telephony.gsm.UsimPhoneBookManager::updatePhoneAdnRecord():void, com.android.internal.telephony.gsm.UsimPhoneBookManager::parseType1EmailFile(int):void, com.android.internal.telephony.gsm.UsimPhoneBookManager::readEmailRecord(int):java.lang.String]
com.android.internal.telephony.ApnContext	[com.android.internal.telephony.ApnContext::java.util.concurrent.atomic.AtomicBoolean mDataEnabled, com.android.internal.telephony.ApnContext::isEnabled():boolean, com.android.internal.telephony.ApnContext::isReady():boolean, com.android.internal.telephony.ApnContext::java.util.concurrent.atomic.AtomicBoolean mDependencyMet, com.android.internal.telephony.ApnContext::getDependencyMet():boolean, com.android.internal.telephony.ApnContext::setEnabled(boolean):void, com.android.internal.telephony.ApnContext::setDependencyMet(boolean):void]
com.android.internal.telephony.DataConnectionAc	[com.android.internal.telephony.DataConnectionAc::java.lang.String mLogTag, com.android.internal.telephony.DataConnectionAc::log(java.lang.String):void, com.android.internal.telephony.DataConnectionAc::reqIsInactive():void]
com.android.internal.telephony.DataConnectionAc	[com.android.internal.telephony.DataConnectionAc::java.lang.String mLogTag, com.android.internal.telephony.DataConnectionAc::log(java.lang.String):void, com.android.internal.telephony.DataConnectionAc::reqIsInactive():void, com.android.internal.telephony.DataConnectionAc::rspIsInactive(android.os.Message):boolean, com.android.internal.telephony.DataConnectionAc::isInactiveSync():boolean, com.android.internal.telephony.DataConnectionAc::reqCid():void, com.android.internal.telephony.DataConnectionAc::rspCid(android.os.Message):int, com.android.internal.telephony.DataConnectionAc::getCidSync():int, com.android.internal.telephony.DataConnectionAc::reqRefCount():void, com.android.internal.telephony.DataConnectionAc::rspRefCount(android.os.Message):int, com.android.internal.telephony.DataConnectionAc::getRefCountSync():int, com.android.internal.telephony.DataConnectionAc::reqApnSetting():void, com.android.internal.telephony.DataConnectionAc::rspApnSetting(android.os.Message):com.android.internal.telephony.ApnSetting, com.android.internal.telephony.DataConnectionAc::getApnSettingSync():com.android.internal.telephony.ApnSetting, com.android.internal.telephony.DataConnectionAc::reqLinkProperties():void]
com.android.internal.telephony.DataConnectionAc	[com.android.internal.telephony.DataConnectionAc::java.lang.String mLogTag, com.android.internal.telephony.DataConnectionAc::log(java.lang.String):void, com.android.internal.telephony.DataConnectionAc::reqIsInactive():void, com.android.internal.telephony.DataConnectionAc::rspIsInactive(android.os.Message):boolean, com.android.internal.telephony.DataConnectionAc::isInactiveSync():boolean, com.android.internal.telephony.DataConnectionAc::reqCid():void, com.android.internal.telephony.DataConnectionAc::rspCid(android.os.Message):int, com.android.internal.telephony.DataConnectionAc::getCidSync():int, com.android.internal.telephony.DataConnectionAc::reqRefCount():void, com.android.internal.telephony.DataConnectionAc::rspRefCount(android.os.Message):int, com.android.internal.telephony.DataConnectionAc::getRefCountSync():int, com.android.internal.telephony.DataConnectionAc::reqApnSetting():void]
com.android.internal.telephony.DataConnectionAc	[com.android.internal.telephony.DataConnectionAc::java.lang.String mLogTag, com.android.internal.telephony.DataConnectionAc::log(java.lang.String):void, com.android.internal.telephony.DataConnectionAc::reqIsInactive():void, com.android.internal.telephony.DataConnectionAc::rspIsInactive(android.os.Message):boolean, com.android.internal.telephony.DataConnectionAc::isInactiveSync():boolean, com.android.internal.telephony.DataConnectionAc::reqCid():void, com.android.internal.telephony.DataConnectionAc::rspCid(android.os.Message):int, com.android.internal.telephony.DataConnectionAc::getCidSync():int, com.android.internal.telephony.DataConnectionAc::reqRefCount():void]
com.android.internal.telephony.DataConnectionAc	[com.android.internal.telephony.DataConnectionAc::java.lang.String mLogTag, com.android.internal.telephony.DataConnectionAc::log(java.lang.String):void, com.android.internal.telephony.DataConnectionAc::reqIsInactive():void, com.android.internal.telephony.DataConnectionAc::rspIsInactive(android.os.Message):boolean, com.android.internal.telephony.DataConnectionAc::isInactiveSync():boolean, com.android.internal.telephony.DataConnectionAc::reqCid():void]
com.android.internal.telephony.DataConnectionTracker	[com.android.internal.telephony.DataConnectionTracker::int mFailDataSetupCounter, com.android.internal.telephony.DataConnectionTracker::isDataSetupCompleteOk(android.os.AsyncResult):boolean, com.android.internal.telephony.DataConnectionTracker::com.android.internal.telephony.DataConnection.FailCause mFailDataSetupFailCause]
com.android.internal.telephony.cdma.CdmaMmiCode	[com.android.internal.telephony.cdma.CdmaMmiCode::java.lang.String sc, com.android.internal.telephony.cdma.CdmaMmiCode::getScString():java.lang.CharSequence, com.android.internal.telephony.cdma.CdmaMmiCode::isPukCommand():boolean]
com.android.internal.telephony.test.SimulatedGsmCallState	[com.android.internal.telephony.test.SimulatedGsmCallState::onAnswer():boolean, com.android.internal.telephony.test.SimulatedGsmCallState::switchActiveAndHeldOrWaiting():boolean, com.android.internal.telephony.test.SimulatedGsmCallState::releaseHeldOrUDUB():boolean, com.android.internal.telephony.test.SimulatedGsmCallState::releaseActiveAcceptHeldOrWaiting():boolean, com.android.internal.telephony.test.SimulatedGsmCallState::separateCall(int):boolean, com.android.internal.telephony.test.SimulatedGsmCallState::countActiveLines():int, com.android.internal.telephony.test.SimulatedGsmCallState::conference():boolean]
com.android.internal.telephony.cat.IconLoader	[com.android.internal.telephony.cat.IconLoader::int mState, com.android.internal.telephony.cat.IconLoader::android.os.Message mEndMsg, com.android.internal.telephony.cat.IconLoader::int[] mRecordNumbers, com.android.internal.telephony.cat.IconLoader::int mCurrentRecordIndex, com.android.internal.telephony.cat.IconLoader::android.graphics.Bitmap[] mIcons, com.android.internal.telephony.cat.IconLoader::loadIcons(int[], android.os.Message):void, com.android.internal.telephony.cat.IconLoader::postIcon():void, com.android.internal.telephony.cat.IconLoader::loadIcon(int, android.os.Message):void]
