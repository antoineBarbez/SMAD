org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::boolean isPixelsValid, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::needsGeneration():boolean, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::regenerateDiagram():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer.OutsideGamutHandling outsideGamutHandling, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::toRGB(float[], float[]):void]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::java.awt.color.ColorSpace colorSpace, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::getColorLocation(java.awt.Color):java.awt.Point, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::getColorLocation(float[]):java.awt.Point]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::boolean isPixelsValid, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::needsGeneration():boolean, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::regenerateDiagram():void]
org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer	[org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int[] pixels, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::generateImage():void, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int h, org.jhotdraw.color.CIEXYChromaticityDiagramImageProducer::int w]
org.jhotdraw.gui.plaf.palette.PaletteToolBarUI	[org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::java.util.HashMap<javax.swing.AbstractButton,javax.swing.border.Border> borderTable, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::java.util.Hashtable<javax.swing.AbstractButton,java.lang.Boolean> rolloverTable, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToNonRollover(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToNormal(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setBorderToRollover(java.awt.Component):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installNonRolloverBorders(javax.swing.JComponent):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installNormalBorders(javax.swing.JComponent):void, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::getRolloverBorder(javax.swing.AbstractButton):javax.swing.border.Border, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::installRolloverBorders(javax.swing.JComponent):void]
org.jhotdraw.gui.plaf.palette.PaletteToolBarUI	[org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::int floatingX, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::int floatingY, org.jhotdraw.gui.plaf.palette.PaletteToolBarUI::setFloatingLocation(int, int):void]
org.jhotdraw.text.JavaNumberFormatter	[org.jhotdraw.text.JavaNumberFormatter::java.text.DecimalFormat decimalFormat, org.jhotdraw.text.JavaNumberFormatter::java.text.DecimalFormat scientificFormat, org.jhotdraw.text.JavaNumberFormatter::int minIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::initFormats():void, org.jhotdraw.text.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumFractionDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::int minFractionDigits, org.jhotdraw.text.JavaNumberFormatter::setMinimumFractionDigits(int):void]
org.jhotdraw.text.JavaNumberFormatter	[org.jhotdraw.text.JavaNumberFormatter::java.text.DecimalFormat decimalFormat, org.jhotdraw.text.JavaNumberFormatter::java.text.DecimalFormat scientificFormat, org.jhotdraw.text.JavaNumberFormatter::int minIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::initFormats():void, org.jhotdraw.text.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumFractionDigits(int):void]
org.jhotdraw.text.JavaNumberFormatter	[org.jhotdraw.text.JavaNumberFormatter::int minIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMinimumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::initFormats():void, org.jhotdraw.text.JavaNumberFormatter::int maxIntDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumIntegerDigits(int):void, org.jhotdraw.text.JavaNumberFormatter::int maxFractionDigits, org.jhotdraw.text.JavaNumberFormatter::setMaximumFractionDigits(int):void]
org.jhotdraw.samples.svg.io.ClientHttpRequest	[org.jhotdraw.samples.svg.io.ClientHttpRequest::java.net.URLConnection _connection, org.jhotdraw.samples.svg.io.ClientHttpRequest::java.io.OutputStream _os, org.jhotdraw.samples.svg.io.ClientHttpRequest::write(char):void, org.jhotdraw.samples.svg.io.ClientHttpRequest::connect():void, org.jhotdraw.samples.svg.io.ClientHttpRequest::write(java.lang.String):void, org.jhotdraw.samples.svg.io.ClientHttpRequest::newline():void, org.jhotdraw.samples.svg.io.ClientHttpRequest::writeln(java.lang.String):void]
org.jhotdraw.samples.svg.io.ClientHttpRequest	[org.jhotdraw.samples.svg.io.ClientHttpRequest::java.util.Map<java.lang.String,java.lang.String> _cookies, org.jhotdraw.samples.svg.io.ClientHttpRequest::setCookie(java.lang.String, java.lang.String):void, org.jhotdraw.samples.svg.io.ClientHttpRequest::setCookies(java.util.Map<java.lang.String,java.lang.String>):void]
org.jhotdraw.samples.svg.io.ClientHttpRequest	[org.jhotdraw.samples.svg.io.ClientHttpRequest::java.io.OutputStream _os, org.jhotdraw.samples.svg.io.ClientHttpRequest::write(char):void, org.jhotdraw.samples.svg.io.ClientHttpRequest::connect():void, org.jhotdraw.samples.svg.io.ClientHttpRequest::write(java.lang.String):void]
org.jhotdraw.samples.odg.ODGPropertiesPanel	[org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.DrawingEditor editor, org.jhotdraw.samples.odg.ODGPropertiesPanel::setEditor(org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGPropertiesPanel::setView(org.jhotdraw.draw.DrawingView):void, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler opacityFieldHandler, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler opacitySliderHandler, org.jhotdraw.samples.odg.ODGPropertiesPanel::org.jhotdraw.draw.event.FigureAttributeEditorHandler linkFieldHandler]
org.jhotdraw.samples.svg.io.ImageMapOutputFormat	[org.jhotdraw.samples.svg.io.ImageMapOutputFormat::java.awt.geom.AffineTransform drawingTransform, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::java.awt.Rectangle bounds, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writeCircleAttributes(net.n3.nanoxml.IXMLElement, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.geom.Ellipse2D.Double):boolean, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writePolyAttributes(net.n3.nanoxml.IXMLElement, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.Shape):boolean, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writeRectAttributes(net.n3.nanoxml.IXMLElement, org.jhotdraw.samples.svg.figures.SVGFigure, java.awt.geom.Rectangle2D.Double):boolean, org.jhotdraw.samples.svg.io.ImageMapOutputFormat::writeHrefAttribute(net.n3.nanoxml.IXMLElement, org.jhotdraw.samples.svg.figures.SVGFigure):void]
org.jhotdraw.io.StreamPosTokenizer	[org.jhotdraw.io.StreamPosTokenizer::java.io.Reader reader, org.jhotdraw.io.StreamPosTokenizer::int readpos, org.jhotdraw.io.StreamPosTokenizer::java.util.Vector<java.lang.Integer> unread, org.jhotdraw.io.StreamPosTokenizer::read():int, org.jhotdraw.io.StreamPosTokenizer::unread(int):void]
org.jhotdraw.io.StreamPosTokenizer	[org.jhotdraw.io.StreamPosTokenizer::char[] slashStar, org.jhotdraw.io.StreamPosTokenizer::char[] starSlash, org.jhotdraw.io.StreamPosTokenizer::setSlashStarTokens(java.lang.String, java.lang.String):void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::javax.swing.JSlider zoomSlider, org.jhotdraw.samples.mini.BezierDemo::getZoomFactor():double, org.jhotdraw.samples.mini.BezierDemo::getError():double, org.jhotdraw.samples.mini.BezierDemo::getSquaredError():double]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::java.util.ArrayList<org.jhotdraw.samples.mini.BezierDemo.Example> examples, org.jhotdraw.samples.mini.BezierDemo::eraseButtonActionPerformed(java.awt.event.ActionEvent):void, org.jhotdraw.samples.mini.BezierDemo::org.jhotdraw.samples.mini.BezierDemo.Canvas canvas, org.jhotdraw.samples.mini.BezierDemo::zoomChanged(javax.swing.event.ChangeEvent):void, org.jhotdraw.samples.mini.BezierDemo::checkboxPerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::org.jhotdraw.samples.mini.BezierDemo.Canvas canvas, org.jhotdraw.samples.mini.BezierDemo::zoomChanged(javax.swing.event.ChangeEvent):void, org.jhotdraw.samples.mini.BezierDemo::checkboxPerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.mini.BezierDemo	[org.jhotdraw.samples.mini.BezierDemo::javax.swing.JDialog dumpDialog, org.jhotdraw.samples.mini.BezierDemo::javax.swing.JTextArea dumpArea, org.jhotdraw.samples.mini.BezierDemo::dumpButtonActionPerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.svg.SVGCreateFromFileTool	[org.jhotdraw.samples.svg.SVGCreateFromFileTool::java.awt.FileDialog fileDialog, org.jhotdraw.samples.svg.SVGCreateFromFileTool::getFileDialog():java.awt.FileDialog, org.jhotdraw.samples.svg.SVGCreateFromFileTool::setUseFileDialog(boolean):void, org.jhotdraw.samples.svg.SVGCreateFromFileTool::javax.swing.JFileChooser fileChooser, org.jhotdraw.samples.svg.SVGCreateFromFileTool::getFileChooser():javax.swing.JFileChooser, org.jhotdraw.samples.svg.SVGCreateFromFileTool::boolean useFileDialog]
org.jhotdraw.samples.svg.io.SVGOutputFormat	[org.jhotdraw.samples.svg.io.SVGOutputFormat::int nextId, org.jhotdraw.samples.svg.io.SVGOutputFormat::getId(net.n3.nanoxml.IXMLElement):java.lang.String, org.jhotdraw.samples.svg.io.SVGOutputFormat::java.util.HashMap<net.n3.nanoxml.IXMLElement,java.lang.String> identifiedElements, org.jhotdraw.samples.svg.io.SVGOutputFormat::initStorageContext(net.n3.nanoxml.IXMLElement):void, org.jhotdraw.samples.svg.io.SVGOutputFormat::java.util.HashMap<org.jhotdraw.samples.svg.Gradient,java.lang.String> gradientToIDMap]
org.jhotdraw.app.action.AbstractViewAction	[org.jhotdraw.app.action.AbstractViewAction::java.lang.String propertyName, org.jhotdraw.app.action.AbstractViewAction::setPropertyName(java.lang.String):void, org.jhotdraw.app.action.AbstractViewAction::updateView():void]
org.jhotdraw.app.osx.OSXPaletteHandler	[org.jhotdraw.app.osx.OSXPaletteHandler::java.util.HashMap<java.awt.Window,org.jhotdraw.app.View> windows, org.jhotdraw.app.osx.OSXPaletteHandler::java.awt.event.WindowFocusListener focusHandler, org.jhotdraw.app.osx.OSXPaletteHandler::add(java.awt.Window, org.jhotdraw.app.View):void, org.jhotdraw.app.osx.OSXPaletteHandler::remove(java.awt.Window):void, org.jhotdraw.app.osx.OSXPaletteHandler::addWindow(java.awt.Window):void, org.jhotdraw.app.osx.OSXPaletteHandler::removeWindow(java.awt.Window):void]
org.jhotdraw.app.osx.OSXPaletteHandler	[org.jhotdraw.app.osx.OSXPaletteHandler::java.util.HashSet<java.awt.Window> palettes, org.jhotdraw.app.osx.OSXPaletteHandler::getPalettes():java.util.Set<java.awt.Window>, org.jhotdraw.app.osx.OSXPaletteHandler::showPalettes():void]
org.jhotdraw.samples.color.JMixer	[org.jhotdraw.samples.color.JMixer::javax.swing.JToggleButton disclosureButton, org.jhotdraw.samples.color.JMixer::javax.swing.JPanel mixerPanel, org.jhotdraw.samples.color.JMixer::mixerDisclosurePerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.color.WheelsAndSlidersMain	[org.jhotdraw.samples.color.WheelsAndSlidersMain::java.util.LinkedList<org.jhotdraw.color.ColorSliderModel> models, org.jhotdraw.samples.color.WheelsAndSlidersMain::org.jhotdraw.samples.color.WheelsAndSlidersMain.Handler handler, org.jhotdraw.samples.color.WheelsAndSlidersMain::createSliderChooser(java.awt.color.ColorSpace, boolean):javax.swing.JPanel, org.jhotdraw.samples.color.WheelsAndSlidersMain::createColorWheelChooser(java.awt.color.ColorSpace, int, int, int, org.jhotdraw.color.JColorWheel.Type, boolean, boolean):javax.swing.JPanel]
org.jhotdraw.samples.odg.ODGApplicationModel	[org.jhotdraw.samples.odg.ODGApplicationModel::addAttributesButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGApplicationModel::addStrokeButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.odg.ODGApplicationModel::addColorButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void]
org.jhotdraw.xml.css.CSSRule	[org.jhotdraw.xml.css.CSSRule::java.lang.String selector, org.jhotdraw.xml.css.CSSRule::org.jhotdraw.xml.css.CSSRule.SelectorType type, org.jhotdraw.xml.css.CSSRule::setSelector(java.lang.String):void, org.jhotdraw.xml.css.CSSRule::matches(org.w3c.dom.Element):boolean]
org.jhotdraw.draw.AbstractAttributedCompositeFigure	[org.jhotdraw.draw.AbstractAttributedCompositeFigure::java.util.HashSet<org.jhotdraw.draw.AttributeKey> forbiddenAttributes, org.jhotdraw.draw.AbstractAttributedCompositeFigure::setAttributeEnabled(org.jhotdraw.draw.AttributeKey, boolean):void, org.jhotdraw.draw.AbstractAttributedCompositeFigure::isAttributeEnabled(org.jhotdraw.draw.AttributeKey):boolean]
org.jhotdraw.draw.AbstractAttributedFigure	[org.jhotdraw.draw.AbstractAttributedFigure::java.util.HashSet<org.jhotdraw.draw.AttributeKey> forbiddenAttributes, org.jhotdraw.draw.AbstractAttributedFigure::setAttributeEnabled(org.jhotdraw.draw.AttributeKey, boolean):void, org.jhotdraw.draw.AbstractAttributedFigure::isAttributeEnabled(org.jhotdraw.draw.AttributeKey):boolean]
org.jhotdraw.draw.text.FloatingTextArea	[org.jhotdraw.draw.text.FloatingTextArea::javax.swing.JTextArea textArea, org.jhotdraw.draw.text.FloatingTextArea::requestFocus():void, org.jhotdraw.draw.text.FloatingTextArea::getText():java.lang.String, org.jhotdraw.draw.text.FloatingTextArea::getPreferredSize(int):java.awt.Dimension]
org.jhotdraw.draw.text.FloatingTextArea	[org.jhotdraw.draw.text.FloatingTextArea::javax.swing.JScrollPane editScrollContainer, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.DrawingView view, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.TextHolderFigure editedFigure, org.jhotdraw.draw.text.FloatingTextArea::org.jhotdraw.draw.event.FigureListener figureHandler, org.jhotdraw.draw.text.FloatingTextArea::createOverlay(org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.TextHolderFigure):void, org.jhotdraw.draw.text.FloatingTextArea::endOverlay():void, org.jhotdraw.draw.text.FloatingTextArea::setBounds(java.awt.geom.Rectangle2D.Double, java.lang.String):void]
org.jhotdraw.gui.JLifeFormattedTextArea	[org.jhotdraw.gui.JLifeFormattedTextArea::org.jhotdraw.gui.JLifeFormattedTextField formattedTextFieldAdapter, org.jhotdraw.gui.JLifeFormattedTextArea::setFormatterFactory(javax.swing.JFormattedTextField.AbstractFormatterFactory):void, org.jhotdraw.gui.JLifeFormattedTextArea::getFormatterFactory():javax.swing.JFormattedTextField.AbstractFormatterFactory]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JOptionPane, int, java.lang.Object, java.lang.Object):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JFileChooser, int):void, org.jhotdraw.gui.JSheet::fireOptionSelected(org.jhotdraw.gui.URIChooser, int):void]
org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel	[org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::javax.swing.JTabbedPane tabbedPane, org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::addColorChooserPanel(javax.swing.colorchooser.AbstractColorChooserPanel):void, org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorChooserMainPanel::removeAllColorChooserPanels():void]
org.jhotdraw.samples.odg.io.ODGInputFormat	[org.jhotdraw.samples.odg.io.ODGInputFormat::toEnhancedPath(java.lang.String):org.jhotdraw.samples.odg.geom.EnhancedPath, org.jhotdraw.samples.odg.io.ODGInputFormat::toTransform(java.lang.String):java.awt.geom.AffineTransform, org.jhotdraw.samples.odg.io.ODGInputFormat::toPath(java.lang.String):org.jhotdraw.geom.BezierPath[], org.jhotdraw.samples.odg.io.ODGInputFormat::nextEnhancedCoordinate(org.jhotdraw.io.StreamPosTokenizer, java.lang.String):java.lang.Object]
org.jhotdraw.samples.odg.io.ODGInputFormat	[org.jhotdraw.samples.odg.io.ODGInputFormat::java.util.LinkedList<org.jhotdraw.draw.Figure> figures, org.jhotdraw.samples.odg.io.ODGInputFormat::readPageElement(net.n3.nanoxml.IXMLElement):void, org.jhotdraw.samples.odg.io.ODGInputFormat::readDrawingElement(net.n3.nanoxml.IXMLElement):void, org.jhotdraw.samples.odg.io.ODGInputFormat::readFiguresFromDocumentContent(java.io.InputStream, org.jhotdraw.draw.Drawing, boolean):void, org.jhotdraw.samples.odg.io.ODGInputFormat::readGElement(net.n3.nanoxml.IXMLElement):org.jhotdraw.samples.odg.figures.ODGFigure, org.jhotdraw.samples.odg.io.ODGInputFormat::net.n3.nanoxml.IXMLElement document, org.jhotdraw.samples.odg.io.ODGInputFormat::createGroupFigure():org.jhotdraw.draw.CompositeFigure]
org.jhotdraw.samples.svg.gui.ActionsToolBar	[org.jhotdraw.samples.svg.gui.ActionsToolBar::java.util.ArrayList<javax.swing.Action> actions, org.jhotdraw.samples.svg.gui.ActionsToolBar::setPopupActions(java.util.List<javax.swing.Action>):void, org.jhotdraw.samples.svg.gui.ActionsToolBar::getPopupActions():java.util.List<javax.swing.Action>]
org.jhotdraw.samples.svg.gui.MessagePanel	[org.jhotdraw.samples.svg.gui.MessagePanel::javax.swing.event.EventListenerList listeners, org.jhotdraw.samples.svg.gui.MessagePanel::addActionListener(java.awt.event.ActionListener):void, org.jhotdraw.samples.svg.gui.MessagePanel::removeActionListener(java.awt.event.ActionListener):void, org.jhotdraw.samples.svg.gui.MessagePanel::closePerformed(java.awt.event.ActionEvent):void]
org.jhotdraw.samples.svg.gui.ProgressIndicator	[org.jhotdraw.samples.svg.gui.ProgressIndicator::javax.swing.BoundedRangeModel progressModel, org.jhotdraw.samples.svg.gui.ProgressIndicator::getMinimum():int, org.jhotdraw.samples.svg.gui.ProgressIndicator::setMinimum(int):void, org.jhotdraw.samples.svg.gui.ProgressIndicator::setProgress(int):void, org.jhotdraw.samples.svg.gui.ProgressIndicator::getMaximum():int, org.jhotdraw.samples.svg.gui.ProgressIndicator::setMaximum(int):void]
org.jhotdraw.samples.teddy.CharacterSetAccessory	[org.jhotdraw.samples.teddy.CharacterSetAccessory::javax.swing.JComboBox charSetCombo, org.jhotdraw.samples.teddy.CharacterSetAccessory::getCharacterSet():java.lang.String, org.jhotdraw.samples.teddy.CharacterSetAccessory::getLineSeparator():java.lang.String]
org.jhotdraw.text.FontFormatter	[org.jhotdraw.text.FontFormatter::java.util.HashMap<java.lang.String,java.awt.Font> genericFontFamilies, org.jhotdraw.text.FontFormatter::clearGenericFontFamilies():void, org.jhotdraw.text.FontFormatter::putGenericFontFamily(java.lang.String, java.awt.Font):void]
org.jhotdraw.undo.UndoRedoManager	[org.jhotdraw.undo.UndoRedoManager::java.beans.PropertyChangeSupport propertySupport, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, boolean, boolean):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, int, int):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):void]
org.jhotdraw.samples.mini.SVGDrawingPanelSample	[org.jhotdraw.samples.mini.SVGDrawingPanelSample::javax.swing.JFileChooser openChooser, org.jhotdraw.samples.mini.SVGDrawingPanelSample::java.util.HashMap<javax.swing.filechooser.FileFilter,org.jhotdraw.draw.io.InputFormat> fileFilterInputFormatMap, org.jhotdraw.samples.mini.SVGDrawingPanelSample::open(java.awt.event.ActionEvent):void, org.jhotdraw.samples.mini.SVGDrawingPanelSample::org.jhotdraw.samples.svg.SVGDrawingPanel svgPanel, org.jhotdraw.samples.mini.SVGDrawingPanelSample::java.util.HashMap<javax.swing.filechooser.FileFilter,org.jhotdraw.draw.io.OutputFormat> fileFilterOutputFormatMap, org.jhotdraw.samples.mini.SVGDrawingPanelSample::saveAs(java.awt.event.ActionEvent):void, org.jhotdraw.samples.mini.SVGDrawingPanelSample::java.io.File file, org.jhotdraw.samples.mini.SVGDrawingPanelSample::javax.swing.JFileChooser saveChooser, org.jhotdraw.samples.mini.SVGDrawingPanelSample::getOpenChooser():javax.swing.JFileChooser, org.jhotdraw.samples.mini.SVGDrawingPanelSample::getSaveChooser():javax.swing.JFileChooser]
org.jhotdraw.gui.JFontChooser	[org.jhotdraw.gui.JFontChooser::javax.swing.tree.TreePath selectionPath, org.jhotdraw.gui.JFontChooser::org.jhotdraw.gui.fontchooser.FontChooserModel model, org.jhotdraw.gui.JFontChooser::java.awt.Font selectedFont, org.jhotdraw.gui.JFontChooser::javax.swing.event.TreeModelListener modelHandler, org.jhotdraw.gui.JFontChooser::setModel(org.jhotdraw.gui.fontchooser.FontChooserModel):void, org.jhotdraw.gui.JFontChooser::setSelectedFont(java.awt.Font):void, org.jhotdraw.gui.JFontChooser::setSelectionPath(javax.swing.tree.TreePath):void, org.jhotdraw.gui.JFontChooser::updateSelectionPath(java.awt.Font):void]
org.jhotdraw.gui.JFontChooser	[org.jhotdraw.gui.JFontChooser::int returnValue, org.jhotdraw.gui.JFontChooser::javax.swing.JDialog dialog, org.jhotdraw.gui.JFontChooser::approveSelection():void, org.jhotdraw.gui.JFontChooser::cancelSelection():void, org.jhotdraw.gui.JFontChooser::fireActionPerformed(java.lang.String):void]
org.jhotdraw.draw.action.AbstractSelectedAction	[org.jhotdraw.draw.action.AbstractSelectedAction::org.jhotdraw.draw.DrawingEditor editor, org.jhotdraw.draw.action.AbstractSelectedAction::org.jhotdraw.draw.DrawingView activeView, org.jhotdraw.draw.action.AbstractSelectedAction::org.jhotdraw.draw.action.AbstractSelectedAction.EventHandler eventHandler, org.jhotdraw.draw.action.AbstractSelectedAction::setUpdateEnabledState(boolean):void, org.jhotdraw.draw.action.AbstractSelectedAction::setEditor(org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.draw.action.AbstractSelectedAction::isUpdatEnabledState():boolean, org.jhotdraw.draw.action.AbstractSelectedAction::unregisterEventHandler():void, org.jhotdraw.draw.action.AbstractSelectedAction::registerEventHandler():void]
org.jhotdraw.draw.action.AbstractSelectedAction	[org.jhotdraw.draw.action.AbstractSelectedAction::getView():org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.action.AbstractSelectedAction::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.draw.action.AbstractSelectedAction::fireUndoableEditHappened(javax.swing.undo.UndoableEdit):void]
org.jhotdraw.draw.AbstractFigure	[org.jhotdraw.draw.AbstractFigure::boolean isSelectable, org.jhotdraw.draw.AbstractFigure::setSelectable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isRemovable, org.jhotdraw.draw.AbstractFigure::setRemovable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isTransformable, org.jhotdraw.draw.AbstractFigure::setTransformable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isConnectable, org.jhotdraw.draw.AbstractFigure::setConnectable(boolean):void]
org.jhotdraw.draw.AbstractFigure	[org.jhotdraw.draw.AbstractFigure::boolean isSelectable, org.jhotdraw.draw.AbstractFigure::setSelectable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isRemovable, org.jhotdraw.draw.AbstractFigure::setRemovable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isTransformable, org.jhotdraw.draw.AbstractFigure::setTransformable(boolean):void]
org.jhotdraw.draw.AbstractFigure	[org.jhotdraw.draw.AbstractFigure::boolean isSelectable, org.jhotdraw.draw.AbstractFigure::setSelectable(boolean):void, org.jhotdraw.draw.AbstractFigure::boolean isRemovable, org.jhotdraw.draw.AbstractFigure::setRemovable(boolean):void]
org.jhotdraw.samples.svg.io.SVGInputFormat	[org.jhotdraw.samples.svg.io.SVGInputFormat::readInheritAttribute(net.n3.nanoxml.IXMLElement, java.lang.String, java.lang.String):java.lang.String, org.jhotdraw.samples.svg.io.SVGInputFormat::readInheritColorAttribute(net.n3.nanoxml.IXMLElement, java.lang.String, java.lang.String):java.lang.String, org.jhotdraw.samples.svg.io.SVGInputFormat::readInheritFontSizeAttribute(net.n3.nanoxml.IXMLElement, java.lang.String, java.lang.String):double, org.jhotdraw.samples.svg.io.SVGInputFormat::readAttribute(net.n3.nanoxml.IXMLElement, java.lang.String, java.lang.String):java.lang.String]
org.jhotdraw.app.AbstractApplicationModel	[org.jhotdraw.app.AbstractApplicationModel::java.lang.String name, org.jhotdraw.app.AbstractApplicationModel::setName(java.lang.String):void, org.jhotdraw.app.AbstractApplicationModel::java.lang.String version, org.jhotdraw.app.AbstractApplicationModel::setVersion(java.lang.String):void, org.jhotdraw.app.AbstractApplicationModel::java.lang.String copyright, org.jhotdraw.app.AbstractApplicationModel::setCopyright(java.lang.String):void]
org.jhotdraw.app.AbstractApplicationModel	[org.jhotdraw.app.AbstractApplicationModel::java.lang.String name, org.jhotdraw.app.AbstractApplicationModel::setName(java.lang.String):void, org.jhotdraw.app.AbstractApplicationModel::java.lang.String version, org.jhotdraw.app.AbstractApplicationModel::setVersion(java.lang.String):void]
org.jhotdraw.app.osx.OSXAdapter	[org.jhotdraw.app.osx.OSXAdapter::java.awt.event.ActionListener targetAction, org.jhotdraw.app.osx.OSXAdapter::callTarget(java.lang.Object):boolean, org.jhotdraw.app.osx.OSXAdapter::java.lang.Object targetObject, org.jhotdraw.app.osx.OSXAdapter::java.lang.reflect.Method targetMethod]
org.jhotdraw.draw.DefaultDrawingView	[org.jhotdraw.draw.DefaultDrawingView::java.awt.Dimension cachedPreferredSize, org.jhotdraw.draw.DefaultDrawingView::invalidateDimension():void, org.jhotdraw.draw.DefaultDrawingView::java.awt.geom.Rectangle2D.Double cachedDrawingArea, org.jhotdraw.draw.DefaultDrawingView::getDrawingArea():java.awt.geom.Rectangle2D.Double]
org.jhotdraw.geom.BezierPath	[org.jhotdraw.geom.BezierPath::java.awt.geom.Rectangle2D.Double bounds, org.jhotdraw.geom.BezierPath::invalidatePath():void, org.jhotdraw.geom.BezierPath::int outer]
org.jhotdraw.samples.svg.SVGDrawingPanel	[org.jhotdraw.samples.svg.SVGDrawingPanel::createDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.samples.svg.SVGDrawingPanel::read(java.net.URI):void, org.jhotdraw.samples.svg.SVGDrawingPanel::read(java.net.URI, org.jhotdraw.draw.io.InputFormat):void]
org.jhotdraw.xml.JavaxDOMOutput	[org.jhotdraw.xml.JavaxDOMOutput::java.lang.String doctype, org.jhotdraw.xml.JavaxDOMOutput::save(java.io.OutputStream):void, org.jhotdraw.xml.JavaxDOMOutput::save(java.io.Writer):void, org.jhotdraw.xml.JavaxDOMOutput::org.w3c.dom.Document document]
org.jhotdraw.samples.draw.DrawingPanel	[org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.draw.DrawingPanel::initComponents():void, org.jhotdraw.samples.draw.DrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.net.NetPanel	[org.jhotdraw.samples.net.NetPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.net.NetPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.net.NetPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.net.NetPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.net.NetPanel::initComponents():void, org.jhotdraw.samples.net.NetPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.odg.ODGDrawingPanel	[org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.odg.ODGDrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.odg.ODGDrawingPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.odg.ODGDrawingPanel::initComponents():void, org.jhotdraw.samples.odg.ODGDrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.pert.PertPanel	[org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.pert.PertPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.pert.PertPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.pert.PertPanel::initComponents():void, org.jhotdraw.samples.pert.PertPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.teddy.regex.Matcher	[org.jhotdraw.samples.teddy.regex.Matcher::javax.swing.text.Document document, org.jhotdraw.samples.teddy.regex.Matcher::isWordChar(int):boolean, org.jhotdraw.samples.teddy.regex.Matcher::org.jhotdraw.samples.teddy.regex.MatchType matchType, org.jhotdraw.samples.teddy.regex.Matcher::char[] matchLowerCase, org.jhotdraw.samples.teddy.regex.Matcher::char[] matchUpperCase, org.jhotdraw.samples.teddy.regex.Matcher::isMatchCase():boolean, org.jhotdraw.samples.teddy.regex.Matcher::findNext():int, org.jhotdraw.samples.teddy.regex.Matcher::findPrevious():int]
org.jhotdraw.color.JColorWheel	[org.jhotdraw.color.JColorWheel::boolean isFlipX, org.jhotdraw.color.JColorWheel::setFlipX(boolean):void, org.jhotdraw.color.JColorWheel::boolean isFlipY, org.jhotdraw.color.JColorWheel::setFlipY(boolean):void, org.jhotdraw.color.JColorWheel::org.jhotdraw.color.JColorWheel.Type type, org.jhotdraw.color.JColorWheel::setType(org.jhotdraw.color.JColorWheel.Type):void]
org.jhotdraw.gui.plaf.palette.MultiIcon	[org.jhotdraw.gui.plaf.palette.MultiIcon::java.awt.Image tiledImage, org.jhotdraw.gui.plaf.palette.MultiIcon::int tileCount, org.jhotdraw.gui.plaf.palette.MultiIcon::boolean isTiledHorizontaly, org.jhotdraw.gui.plaf.palette.MultiIcon::generateIconsFromTiledImage():void]
