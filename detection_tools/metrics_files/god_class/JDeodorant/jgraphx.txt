com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.String,java.lang.reflect.Method> accessors, com.mxgraph.io.mxObjectCodec::getAccessor(java.lang.Object, java.lang.reflect.Field, boolean):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getMethod(java.lang.Object, java.lang.String, java.lang.Class[]):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field):java.lang.Object, com.mxgraph.io.mxObjectCodec::convertValueFromXml(java.lang.Class<?>, java.lang.Object):java.lang.Object, com.mxgraph.io.mxObjectCodec::setFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::getFieldValue(java.lang.Object, java.lang.String):java.lang.Object, com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.Class,java.util.Map<java.lang.String,java.lang.reflect.Field>> fields, com.mxgraph.io.mxObjectCodec::getField(java.lang.Object, java.lang.String):java.lang.reflect.Field, com.mxgraph.io.mxObjectCodec::setFieldValue(java.lang.Object, java.lang.String, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::getFieldTemplate(java.lang.Object, java.lang.String, org.w3c.dom.Node):java.lang.Object]
com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.String,java.lang.reflect.Method> accessors, com.mxgraph.io.mxObjectCodec::getAccessor(java.lang.Object, java.lang.reflect.Field, boolean):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getMethod(java.lang.Object, java.lang.String, java.lang.Class[]):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field):java.lang.Object]
com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.String,java.lang.reflect.Method> accessors, com.mxgraph.io.mxObjectCodec::getAccessor(java.lang.Object, java.lang.reflect.Field, boolean):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getMethod(java.lang.Object, java.lang.String, java.lang.Class[]):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field):java.lang.Object, com.mxgraph.io.mxObjectCodec::convertValueFromXml(java.lang.Class<?>, java.lang.Object):java.lang.Object, com.mxgraph.io.mxObjectCodec::setFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::getFieldValue(java.lang.Object, java.lang.String):java.lang.Object, com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.Class,java.util.Map<java.lang.String,java.lang.reflect.Field>> fields, com.mxgraph.io.mxObjectCodec::getField(java.lang.Object, java.lang.String):java.lang.reflect.Field, com.mxgraph.io.mxObjectCodec::setFieldValue(java.lang.Object, java.lang.String, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::getFieldTemplate(java.lang.Object, java.lang.String, org.w3c.dom.Node):java.lang.Object, com.mxgraph.io.mxObjectCodec::encodeFields(com.mxgraph.io.mxCodec, java.lang.Object, org.w3c.dom.Node):void, com.mxgraph.io.mxObjectCodec::encodeElements(com.mxgraph.io.mxCodec, java.lang.Object, org.w3c.dom.Node):void, com.mxgraph.io.mxObjectCodec::addObjectValue(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::encodeObject(com.mxgraph.io.mxCodec, java.lang.Object, org.w3c.dom.Node):void]
com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::java.util.Map<java.lang.String,java.lang.reflect.Method> accessors, com.mxgraph.io.mxObjectCodec::getAccessor(java.lang.Object, java.lang.reflect.Field, boolean):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getMethod(java.lang.Object, java.lang.String, java.lang.Class[]):java.lang.reflect.Method, com.mxgraph.io.mxObjectCodec::getFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field):java.lang.Object, com.mxgraph.io.mxObjectCodec::convertValueFromXml(java.lang.Class<?>, java.lang.Object):java.lang.Object, com.mxgraph.io.mxObjectCodec::setFieldValueWithAccessor(java.lang.Object, java.lang.reflect.Field, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::getFieldValue(java.lang.Object, java.lang.String):java.lang.Object]
com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::isPrimitiveValue(java.lang.Object):boolean, com.mxgraph.io.mxObjectCodec::writeAttribute(com.mxgraph.io.mxCodec, java.lang.Object, java.lang.String, java.lang.Object, org.w3c.dom.Node):void, com.mxgraph.io.mxObjectCodec::convertValueToXml(java.lang.Object):java.lang.Object, com.mxgraph.io.mxObjectCodec::writePrimitiveAttribute(com.mxgraph.io.mxCodec, java.lang.Object, java.lang.String, java.lang.Object, org.w3c.dom.Node):void]
com.mxgraph.io.mxObjectCodec	[com.mxgraph.io.mxObjectCodec::decodeNode(com.mxgraph.io.mxCodec, org.w3c.dom.Node, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::decodeAttributes(com.mxgraph.io.mxCodec, org.w3c.dom.Node, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::decodeChildren(com.mxgraph.io.mxCodec, org.w3c.dom.Node, java.lang.Object):void, com.mxgraph.io.mxObjectCodec::processInclude(com.mxgraph.io.mxCodec, org.w3c.dom.Node, java.lang.Object):boolean]
com.mxgraph.shape.mxStencilShape	[com.mxgraph.shape.mxStencilShape::createElement(org.w3c.dom.Node):com.mxgraph.shape.mxStencilShape.svgShape, com.mxgraph.shape.mxStencilShape::isRectangle(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isPath(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isEllipse(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isLine(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isPolyline(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isCircle(java.lang.String):boolean, com.mxgraph.shape.mxStencilShape::isPolygon(java.lang.String):boolean]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::float[] chromaticity, com.mxgraph.util.png.mxPngEncodeParam::boolean chromaticitySet, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float[]):void, com.mxgraph.util.png.mxPngEncodeParam::getChromaticity():float[], com.mxgraph.util.png.mxPngEncodeParam::unsetChromaticity():void, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float, float, float, float, float, float, float, float):void, com.mxgraph.util.png.mxPngEncodeParam::int SRGBIntent, com.mxgraph.util.png.mxPngEncodeParam::setSRGBIntent(int):void, com.mxgraph.util.png.mxPngEncodeParam::getSRGBIntent():int, com.mxgraph.util.png.mxPngEncodeParam::boolean SRGBIntentSet, com.mxgraph.util.png.mxPngEncodeParam::unsetSRGBIntent():void, com.mxgraph.util.png.mxPngEncodeParam::float gamma, com.mxgraph.util.png.mxPngEncodeParam::setGamma(float):void, com.mxgraph.util.png.mxPngEncodeParam::getGamma():float, com.mxgraph.util.png.mxPngEncodeParam::boolean gammaSet, com.mxgraph.util.png.mxPngEncodeParam::unsetGamma():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::float[] chromaticity, com.mxgraph.util.png.mxPngEncodeParam::boolean chromaticitySet, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float[]):void, com.mxgraph.util.png.mxPngEncodeParam::getChromaticity():float[], com.mxgraph.util.png.mxPngEncodeParam::unsetChromaticity():void, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float, float, float, float, float, float, float, float):void, com.mxgraph.util.png.mxPngEncodeParam::int SRGBIntent, com.mxgraph.util.png.mxPngEncodeParam::setSRGBIntent(int):void, com.mxgraph.util.png.mxPngEncodeParam::getSRGBIntent():int, com.mxgraph.util.png.mxPngEncodeParam::boolean SRGBIntentSet, com.mxgraph.util.png.mxPngEncodeParam::unsetSRGBIntent():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::float[] chromaticity, com.mxgraph.util.png.mxPngEncodeParam::boolean chromaticitySet, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float[]):void, com.mxgraph.util.png.mxPngEncodeParam::getChromaticity():float[], com.mxgraph.util.png.mxPngEncodeParam::unsetChromaticity():void, com.mxgraph.util.png.mxPngEncodeParam::setChromaticity(float, float, float, float, float, float, float, float):void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::int[] physicalDimension, com.mxgraph.util.png.mxPngEncodeParam::boolean physicalDimensionSet, com.mxgraph.util.png.mxPngEncodeParam::setPhysicalDimension(int[]):void, com.mxgraph.util.png.mxPngEncodeParam::getPhysicalDimension():int[], com.mxgraph.util.png.mxPngEncodeParam::unsetPhysicalDimension():void, com.mxgraph.util.png.mxPngEncodeParam::setPhysicalDimension(int, int, int):void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::com.mxgraph.util.png.mxPngSuggestedPaletteEntry[] suggestedPalette, com.mxgraph.util.png.mxPngEncodeParam::boolean suggestedPaletteSet, com.mxgraph.util.png.mxPngEncodeParam::setSuggestedPalette(com.mxgraph.util.png.mxPngSuggestedPaletteEntry[]):void, com.mxgraph.util.png.mxPngEncodeParam::getSuggestedPalette():com.mxgraph.util.png.mxPngSuggestedPaletteEntry[], com.mxgraph.util.png.mxPngEncodeParam::unsetSuggestedPalette():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::java.util.Date modificationTime, com.mxgraph.util.png.mxPngEncodeParam::boolean modificationTimeSet, com.mxgraph.util.png.mxPngEncodeParam::setModificationTime(java.util.Date):void, com.mxgraph.util.png.mxPngEncodeParam::getModificationTime():java.util.Date, com.mxgraph.util.png.mxPngEncodeParam::unsetModificationTime():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::int[] significantBits, com.mxgraph.util.png.mxPngEncodeParam::boolean significantBitsSet, com.mxgraph.util.png.mxPngEncodeParam::setSignificantBits(int[]):void, com.mxgraph.util.png.mxPngEncodeParam::getSignificantBits():int[], com.mxgraph.util.png.mxPngEncodeParam::unsetSignificantBits():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::java.lang.String[] zText, com.mxgraph.util.png.mxPngEncodeParam::boolean zTextSet, com.mxgraph.util.png.mxPngEncodeParam::setCompressedText(java.lang.String[]):void, com.mxgraph.util.png.mxPngEncodeParam::getCompressedText():java.lang.String[], com.mxgraph.util.png.mxPngEncodeParam::unsetCompressedText():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::byte[] ICCProfileData, com.mxgraph.util.png.mxPngEncodeParam::boolean ICCProfileDataSet, com.mxgraph.util.png.mxPngEncodeParam::setICCProfileData(byte[]):void, com.mxgraph.util.png.mxPngEncodeParam::getICCProfileData():byte[], com.mxgraph.util.png.mxPngEncodeParam::unsetICCProfileData():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::int SRGBIntent, com.mxgraph.util.png.mxPngEncodeParam::setSRGBIntent(int):void, com.mxgraph.util.png.mxPngEncodeParam::getSRGBIntent():int, com.mxgraph.util.png.mxPngEncodeParam::boolean SRGBIntentSet, com.mxgraph.util.png.mxPngEncodeParam::unsetSRGBIntent():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::int[] paletteHistogram, com.mxgraph.util.png.mxPngEncodeParam::boolean paletteHistogramSet, com.mxgraph.util.png.mxPngEncodeParam::setPaletteHistogram(int[]):void, com.mxgraph.util.png.mxPngEncodeParam::getPaletteHistogram():int[], com.mxgraph.util.png.mxPngEncodeParam::unsetPaletteHistogram():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::java.lang.String[] text, com.mxgraph.util.png.mxPngEncodeParam::boolean textSet, com.mxgraph.util.png.mxPngEncodeParam::setText(java.lang.String[]):void, com.mxgraph.util.png.mxPngEncodeParam::getText():java.lang.String[], com.mxgraph.util.png.mxPngEncodeParam::unsetText():void]
com.mxgraph.util.png.mxPngEncodeParam	[com.mxgraph.util.png.mxPngEncodeParam::float gamma, com.mxgraph.util.png.mxPngEncodeParam::setGamma(float):void, com.mxgraph.util.png.mxPngEncodeParam::getGamma():float, com.mxgraph.util.png.mxPngEncodeParam::boolean gammaSet, com.mxgraph.util.png.mxPngEncodeParam::unsetGamma():void]
com.mxgraph.analysis.mxFibonacciHeap	[com.mxgraph.analysis.mxFibonacciHeap::com.mxgraph.analysis.mxFibonacciHeap.Node min, com.mxgraph.analysis.mxFibonacciHeap::int size, com.mxgraph.analysis.mxFibonacciHeap::decreaseKey(com.mxgraph.analysis.mxFibonacciHeap.Node, double):void, com.mxgraph.analysis.mxFibonacciHeap::cascadingCut(com.mxgraph.analysis.mxFibonacciHeap.Node):void, com.mxgraph.analysis.mxFibonacciHeap::insert(com.mxgraph.analysis.mxFibonacciHeap.Node, double):void, com.mxgraph.analysis.mxFibonacciHeap::union(com.mxgraph.analysis.mxFibonacciHeap, com.mxgraph.analysis.mxFibonacciHeap):com.mxgraph.analysis.mxFibonacciHeap, com.mxgraph.analysis.mxFibonacciHeap::consolidate():void, com.mxgraph.analysis.mxFibonacciHeap::removeMin():com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap::cut(com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap.Node):void, com.mxgraph.analysis.mxFibonacciHeap::link(com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap.Node):void]
com.mxgraph.analysis.mxFibonacciHeap	[com.mxgraph.analysis.mxFibonacciHeap::decreaseKey(com.mxgraph.analysis.mxFibonacciHeap.Node, double):void, com.mxgraph.analysis.mxFibonacciHeap::cascadingCut(com.mxgraph.analysis.mxFibonacciHeap.Node):void, com.mxgraph.analysis.mxFibonacciHeap::insert(com.mxgraph.analysis.mxFibonacciHeap.Node, double):void, com.mxgraph.analysis.mxFibonacciHeap::union(com.mxgraph.analysis.mxFibonacciHeap, com.mxgraph.analysis.mxFibonacciHeap):com.mxgraph.analysis.mxFibonacciHeap, com.mxgraph.analysis.mxFibonacciHeap::consolidate():void, com.mxgraph.analysis.mxFibonacciHeap::removeMin():com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap::cut(com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap.Node):void, com.mxgraph.analysis.mxFibonacciHeap::link(com.mxgraph.analysis.mxFibonacciHeap.Node, com.mxgraph.analysis.mxFibonacciHeap.Node):void]
com.mxgraph.layout.hierarchical.mxHierarchicalLayout	[com.mxgraph.layout.hierarchical.mxHierarchicalLayout::double intraCellSpacing, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::double interRankCellSpacing, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::double interHierarchySpacing, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::double parallelEdgeSpacing, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::int orientation, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::boolean fineTuning, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::placementStage(double, java.lang.Object):double]
com.mxgraph.layout.hierarchical.mxHierarchicalLayout	[com.mxgraph.layout.hierarchical.mxHierarchicalLayout::boolean traverseAncestors, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::findRoots(java.lang.Object, java.util.Set<java.lang.Object>):java.util.List<java.lang.Object>, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::getEdges(java.lang.Object):java.lang.Object[], com.mxgraph.layout.hierarchical.mxHierarchicalLayout::filterDescendants(java.lang.Object):java.util.Set<java.lang.Object>, com.mxgraph.layout.hierarchical.mxHierarchicalLayout::traverse(java.lang.Object, boolean, java.lang.Object, java.util.Set<java.lang.Object>, java.util.Set<java.lang.Object>, java.util.List<java.util.Set<java.lang.Object>>, java.util.Set<java.lang.Object>):void]
com.mxgraph.view.mxSwimlaneManager	[com.mxgraph.view.mxSwimlaneManager::com.mxgraph.view.mxGraph graph, com.mxgraph.view.mxSwimlaneManager::cellsAdded(java.lang.Object[]):void, com.mxgraph.view.mxSwimlaneManager::boolean horizontal, com.mxgraph.view.mxSwimlaneManager::swimlaneAdded(java.lang.Object):void, com.mxgraph.view.mxSwimlaneManager::cellsResized(java.lang.Object[]):void, com.mxgraph.view.mxSwimlaneManager::resizeSwimlane(java.lang.Object, double, double, boolean):void, com.mxgraph.view.mxSwimlaneManager::isSwimlaneIgnored(java.lang.Object):boolean, com.mxgraph.view.mxSwimlaneManager::isCellHorizontal(java.lang.Object):boolean]
com.mxgraph.view.mxSwimlaneManager	[com.mxgraph.view.mxSwimlaneManager::com.mxgraph.util.mxEventSource.mxIEventListener addHandler, com.mxgraph.view.mxSwimlaneManager::com.mxgraph.util.mxEventSource.mxIEventListener resizeHandler, com.mxgraph.view.mxSwimlaneManager::setGraph(com.mxgraph.view.mxGraph):void]
com.mxgraph.layout.mxFastOrganicLayout	[com.mxgraph.layout.mxFastOrganicLayout::double initialTemp, com.mxgraph.layout.mxFastOrganicLayout::double maxIterations, com.mxgraph.layout.mxFastOrganicLayout::double iteration, com.mxgraph.layout.mxFastOrganicLayout::double temperature, com.mxgraph.layout.mxFastOrganicLayout::reduceTemperature():void]
com.mxgraph.swing.view.mxCellEditor	[com.mxgraph.swing.view.mxCellEditor::javax.swing.JTextArea textArea, com.mxgraph.swing.view.mxCellEditor::javax.swing.JEditorPane editorPane, com.mxgraph.swing.view.mxCellEditor::boolean extractHtmlBody, com.mxgraph.swing.view.mxCellEditor::boolean replaceLinefeeds, com.mxgraph.swing.view.mxCellEditor::getCurrentValue():java.lang.String]
com.mxgraph.swing.view.mxCellEditor	[com.mxgraph.swing.view.mxCellEditor::int minimumWidth, com.mxgraph.swing.view.mxCellEditor::int minimumHeight, com.mxgraph.swing.view.mxCellEditor::useLabelBounds(com.mxgraph.view.mxCellState):boolean, com.mxgraph.swing.view.mxCellEditor::getEditorBounds(com.mxgraph.view.mxCellState, double):java.awt.Rectangle]
com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel	[com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel::int dfsCount, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel::visit(com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel.CellVisitor, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode[], boolean, java.util.Set<com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode>):void, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel::dfs(com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyEdge, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel.CellVisitor, java.util.Set<com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode>, int):void, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel::dfs(com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyEdge, com.mxgraph.layout.hierarchical.model.mxGraphHierarchyModel.CellVisitor, java.util.Set<com.mxgraph.layout.hierarchical.model.mxGraphHierarchyNode>, int[], int, int):void]
com.mxgraph.shape.mxCurveLabelShape	[com.mxgraph.shape.mxCurveLabelShape::com.mxgraph.shape.mxCurveLabelShape.LabelGlyphCache[] labelGlyphs, com.mxgraph.shape.mxCurveLabelShape::com.mxgraph.util.mxRectangle labelBounds, com.mxgraph.shape.mxCurveLabelShape::int centerVisibleIndex, com.mxgraph.shape.mxCurveLabelShape::getCenterVisiblePosition():com.mxgraph.util.mxRectangle, com.mxgraph.shape.mxCurveLabelShape::intersectsRect(java.awt.Rectangle):boolean]
com.mxgraph.shape.mxStencil	[com.mxgraph.shape.mxStencil::java.lang.String aspect, com.mxgraph.shape.mxStencil::double w0, com.mxgraph.shape.mxStencil::double h0, com.mxgraph.shape.mxStencil::computeAspect(com.mxgraph.view.mxCellState, com.mxgraph.util.mxRectangle, java.lang.String):com.mxgraph.util.mxRectangle]
com.mxgraph.shape.mxStencil	[com.mxgraph.shape.mxStencil::org.w3c.dom.Element bgNode, com.mxgraph.shape.mxStencil::org.w3c.dom.Element fgNode, com.mxgraph.shape.mxStencil::double lastMoveX, com.mxgraph.shape.mxStencil::double lastMoveY, com.mxgraph.shape.mxStencil::drawShape(com.mxgraph.canvas.mxGraphicsCanvas2D, com.mxgraph.view.mxCellState, com.mxgraph.util.mxRectangle, com.mxgraph.util.mxRectangle, boolean):boolean]
com.mxgraph.shape.mxStencil	[com.mxgraph.shape.mxStencil::org.w3c.dom.Element desc, com.mxgraph.shape.mxStencil::setDescription(org.w3c.dom.Element):void, com.mxgraph.shape.mxStencil::java.lang.String aspect, com.mxgraph.shape.mxStencil::double w0, com.mxgraph.shape.mxStencil::double h0, com.mxgraph.shape.mxStencil::computeAspect(com.mxgraph.view.mxCellState, com.mxgraph.util.mxRectangle, java.lang.String):com.mxgraph.util.mxRectangle]
com.mxgraph.view.mxCellState	[com.mxgraph.view.mxCellState::com.mxgraph.view.mxCellState visibleSourceState, com.mxgraph.view.mxCellState::com.mxgraph.view.mxCellState visibleTargetState, com.mxgraph.view.mxCellState::getVisibleTerminalState(boolean):com.mxgraph.view.mxCellState, com.mxgraph.view.mxCellState::setVisibleTerminalState(com.mxgraph.view.mxCellState, boolean):void, com.mxgraph.view.mxCellState::getVisibleTerminal(boolean):java.lang.Object]
com.mxgraph.canvas.mxSvgCanvas	[com.mxgraph.canvas.mxSvgCanvas::isImageResource(java.lang.String):boolean, com.mxgraph.canvas.mxSvgCanvas::createDataUrl(java.lang.String):java.lang.String, com.mxgraph.canvas.mxSvgCanvas::getResource(java.lang.String):java.io.InputStream]
com.mxgraph.canvas.mxSvgCanvas	[com.mxgraph.canvas.mxSvgCanvas::java.util.Map<java.lang.String,org.w3c.dom.Element> gradients, com.mxgraph.canvas.mxSvgCanvas::getGlassGradientElement():org.w3c.dom.Element, com.mxgraph.canvas.mxSvgCanvas::org.w3c.dom.Element defs, com.mxgraph.canvas.mxSvgCanvas::getDefsElement():org.w3c.dom.Element]
com.mxgraph.generatorfunction.mxGeneratorRandomFunction	[com.mxgraph.generatorfunction.mxGeneratorRandomFunction::double maxWeight, com.mxgraph.generatorfunction.mxGeneratorRandomFunction::double minWeight, com.mxgraph.generatorfunction.mxGeneratorRandomFunction::setWeightRange(double, double):void]
com.mxgraph.model.mxGeometry	[com.mxgraph.model.mxGeometry::com.mxgraph.util.mxPoint sourcePoint, com.mxgraph.model.mxGeometry::com.mxgraph.util.mxPoint targetPoint, com.mxgraph.model.mxGeometry::getTerminalPoint(boolean):com.mxgraph.util.mxPoint, com.mxgraph.model.mxGeometry::setTerminalPoint(com.mxgraph.util.mxPoint, boolean):com.mxgraph.util.mxPoint]
com.mxgraph.swing.handler.mxCellMarker	[com.mxgraph.swing.handler.mxCellMarker::java.awt.Color validColor, com.mxgraph.swing.handler.mxCellMarker::getMarkerColor(java.awt.event.MouseEvent, com.mxgraph.view.mxCellState, boolean):java.awt.Color, com.mxgraph.swing.handler.mxCellMarker::java.awt.Color invalidColor]
com.mxgraph.swing.handler.mxCellMarker	[com.mxgraph.swing.handler.mxCellMarker::double hotspot, com.mxgraph.swing.handler.mxCellMarker::intersects(com.mxgraph.view.mxCellState, java.awt.event.MouseEvent):boolean, com.mxgraph.swing.handler.mxCellMarker::boolean hotspotEnabled]
com.mxgraph.swing.handler.mxCellMarker	[com.mxgraph.swing.handler.mxCellMarker::boolean enabled, com.mxgraph.swing.handler.mxCellMarker::process(java.awt.event.MouseEvent):com.mxgraph.view.mxCellState, com.mxgraph.swing.handler.mxCellMarker::isValidState(com.mxgraph.view.mxCellState):boolean, com.mxgraph.swing.handler.mxCellMarker::java.awt.Color validColor, com.mxgraph.swing.handler.mxCellMarker::getMarkerColor(java.awt.event.MouseEvent, com.mxgraph.view.mxCellState, boolean):java.awt.Color, com.mxgraph.swing.handler.mxCellMarker::java.awt.Color invalidColor]
com.mxgraph.swing.handler.mxSelectionCellsHandler	[com.mxgraph.swing.handler.mxSelectionCellsHandler::com.mxgraph.util.mxEventSource.mxIEventListener refreshHandler, com.mxgraph.swing.handler.mxSelectionCellsHandler::java.beans.PropertyChangeListener labelMoveHandler, com.mxgraph.swing.handler.mxSelectionCellsHandler::addGraphListeners(com.mxgraph.view.mxGraph):void, com.mxgraph.swing.handler.mxSelectionCellsHandler::removeGraphListeners(com.mxgraph.view.mxGraph):void]
com.mxgraph.util.png.mxPngEncodeParam.Gray	[com.mxgraph.util.png.mxPngEncodeParam.Gray::int bitShift, com.mxgraph.util.png.mxPngEncodeParam.Gray::setBitShift(int):void, com.mxgraph.util.png.mxPngEncodeParam.Gray::getBitShift():int, com.mxgraph.util.png.mxPngEncodeParam.Gray::boolean bitShiftSet, com.mxgraph.util.png.mxPngEncodeParam.Gray::unsetBitShift():void]
com.mxgraph.util.png.mxPngEncodeParam.Palette	[com.mxgraph.util.png.mxPngEncodeParam.Palette::int[] palette, com.mxgraph.util.png.mxPngEncodeParam.Palette::boolean paletteSet, com.mxgraph.util.png.mxPngEncodeParam.Palette::setPalette(int[]):void, com.mxgraph.util.png.mxPngEncodeParam.Palette::getPalette():int[], com.mxgraph.util.png.mxPngEncodeParam.Palette::unsetPalette():void]
com.mxgraph.canvas.mxBasicCanvas	[com.mxgraph.canvas.mxBasicCanvas::java.util.Hashtable<java.lang.String,java.awt.image.BufferedImage> imageCache, com.mxgraph.canvas.mxBasicCanvas::loadImage(java.lang.String):java.awt.image.BufferedImage, com.mxgraph.canvas.mxBasicCanvas::flushImageCache():void]
com.mxgraph.model.mxCell	[com.mxgraph.model.mxCell::java.lang.Object value, com.mxgraph.model.mxCell::getAttribute(java.lang.String, java.lang.String):java.lang.String, com.mxgraph.model.mxCell::setAttribute(java.lang.String, java.lang.String):void, com.mxgraph.model.mxCell::cloneValue():java.lang.Object]
com.mxgraph.swing.handler.mxConnectionHandler	[com.mxgraph.swing.handler.mxConnectionHandler::com.mxgraph.util.mxEventSource.mxIEventListener resetHandler, com.mxgraph.swing.handler.mxConnectionHandler::addGraphListeners(com.mxgraph.view.mxGraph):void, com.mxgraph.swing.handler.mxConnectionHandler::removeGraphListeners(com.mxgraph.view.mxGraph):void]
com.mxgraph.swing.handler.mxConnectionHandler	[com.mxgraph.swing.handler.mxConnectionHandler::javax.swing.ImageIcon connectIcon, com.mxgraph.swing.handler.mxConnectionHandler::boolean handleEnabled, com.mxgraph.swing.handler.mxConnectionHandler::isHighlighting():boolean, com.mxgraph.swing.handler.mxConnectionHandler::paint(java.awt.Graphics):void, com.mxgraph.swing.handler.mxConnectionHandler::java.awt.Rectangle bounds, com.mxgraph.swing.handler.mxConnectionHandler::setBounds(java.awt.Rectangle):void]
com.mxgraph.swing.handler.mxMovePreview	[com.mxgraph.swing.handler.mxMovePreview::com.mxgraph.view.mxCellState startState, com.mxgraph.swing.handler.mxMovePreview::isActive():boolean, com.mxgraph.swing.handler.mxMovePreview::isCellOpaque(java.lang.Object):boolean]
com.mxgraph.util.mxEventSource	[com.mxgraph.util.mxEventSource::java.util.List<java.lang.Object> eventListeners, com.mxgraph.util.mxEventSource::addListener(java.lang.String, com.mxgraph.util.mxEventSource.mxIEventListener):void, com.mxgraph.util.mxEventSource::removeListener(com.mxgraph.util.mxEventSource.mxIEventListener, java.lang.String):void]
com.mxgraph.view.mxMultiplicity	[com.mxgraph.view.mxMultiplicity::java.lang.String max, com.mxgraph.view.mxMultiplicity::isUnlimited():boolean, com.mxgraph.view.mxMultiplicity::getMaxValue():int]
com.mxgraph.layout.mxCompactTreeLayout	[com.mxgraph.layout.mxCompactTreeLayout::moveNode(com.mxgraph.layout.mxCompactTreeLayout.TreeNode, double, double):void, com.mxgraph.layout.mxCompactTreeLayout::horizontalLayout(com.mxgraph.layout.mxCompactTreeLayout.TreeNode, double, double, com.mxgraph.util.mxRectangle):com.mxgraph.util.mxRectangle, com.mxgraph.layout.mxCompactTreeLayout::verticalLayout(com.mxgraph.layout.mxCompactTreeLayout.TreeNode, java.lang.Object, double, double, com.mxgraph.util.mxRectangle):com.mxgraph.util.mxRectangle]
com.mxgraph.swing.mxGraphComponent	[com.mxgraph.swing.mxGraphComponent::java.util.Hashtable<java.lang.Object,com.mxgraph.swing.util.mxICellOverlay[]> overlays, com.mxgraph.swing.mxGraphComponent::removeCellOverlay(java.lang.Object, com.mxgraph.swing.util.mxICellOverlay):com.mxgraph.swing.util.mxICellOverlay, com.mxgraph.swing.mxGraphComponent::removeCellOverlays(java.lang.Object):com.mxgraph.swing.util.mxICellOverlay[], com.mxgraph.swing.mxGraphComponent::getCellOverlays(java.lang.Object):com.mxgraph.swing.util.mxICellOverlay[], com.mxgraph.swing.mxGraphComponent::removeAllOverlays(java.util.Hashtable<java.lang.Object,com.mxgraph.swing.util.mxICellOverlay[]>):void]
com.mxgraph.swing.mxGraphComponent	[com.mxgraph.swing.mxGraphComponent::int horizontalPageCount, com.mxgraph.swing.mxGraphComponent::setHorizontalPageCount(int):void, com.mxgraph.swing.mxGraphComponent::int verticalPageCount, com.mxgraph.swing.mxGraphComponent::setVerticalPageCount(int):void]
com.mxgraph.swing.mxGraphComponent	[com.mxgraph.swing.mxGraphComponent::boolean keepSelectionVisibleOnZoom, com.mxgraph.swing.mxGraphComponent::setKeepSelectionVisibleOnZoom(boolean):void, com.mxgraph.swing.mxGraphComponent::boolean centerZoom, com.mxgraph.swing.mxGraphComponent::setCenterZoom(boolean):void]
com.mxgraph.swing.handler.mxCellHandler	[com.mxgraph.swing.handler.mxCellHandler::isLabel(int):boolean, com.mxgraph.swing.handler.mxCellHandler::getHandleCount():int, com.mxgraph.swing.handler.mxCellHandler::getHandleFillColor(int):java.awt.Color]
com.mxgraph.view.mxGraph	[com.mxgraph.view.mxGraph::double defaultOverlap, com.mxgraph.view.mxGraph::getOverlap(java.lang.Object):double, com.mxgraph.view.mxGraph::setDefaultOverlap(double):void, com.mxgraph.view.mxGraph::isAllowOverlapParent(java.lang.Object):boolean]
com.mxgraph.view.mxGraph	[com.mxgraph.view.mxGraph::cellDrawn(com.mxgraph.canvas.mxICanvas, com.mxgraph.view.mxCellState, java.lang.Object, java.lang.Object):void, com.mxgraph.view.mxGraph::getLinkForCell(java.lang.Object):java.lang.String, com.mxgraph.view.mxGraph::getTargetForCell(java.lang.Object):java.lang.String]
com.mxgraph.view.mxGraph	[com.mxgraph.view.mxGraph::boolean resetEdgesOnResize, com.mxgraph.view.mxGraph::setResetEdgesOnResize(boolean):void, com.mxgraph.view.mxGraph::setResetEdgesOnConnect(boolean):void, com.mxgraph.view.mxGraph::boolean resetEdgesOnConnect]
com.mxgraph.view.mxGraph	[com.mxgraph.view.mxGraph::com.mxgraph.view.mxStylesheet stylesheet, com.mxgraph.view.mxGraph::setStylesheet(com.mxgraph.view.mxStylesheet):void, com.mxgraph.view.mxGraph::addPropertyChangeListener(java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::removePropertyChangeListener(java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::boolean gridEnabled, com.mxgraph.view.mxGraph::snap(double):double, com.mxgraph.view.mxGraph::setGridEnabled(boolean):void, com.mxgraph.view.mxGraph::boolean portsEnabled, com.mxgraph.view.mxGraph::setPortsEnabled(boolean):void, com.mxgraph.view.mxGraph::double defaultOverlap, com.mxgraph.view.mxGraph::getOverlap(java.lang.Object):double, com.mxgraph.view.mxGraph::setDefaultOverlap(double):void, com.mxgraph.view.mxGraph::isAllowOverlapParent(java.lang.Object):boolean]
com.mxgraph.view.mxGraph	[com.mxgraph.view.mxGraph::com.mxgraph.view.mxStylesheet stylesheet, com.mxgraph.view.mxGraph::setStylesheet(com.mxgraph.view.mxStylesheet):void, com.mxgraph.view.mxGraph::addPropertyChangeListener(java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::removePropertyChangeListener(java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, com.mxgraph.view.mxGraph::boolean gridEnabled, com.mxgraph.view.mxGraph::snap(double):double, com.mxgraph.view.mxGraph::setGridEnabled(boolean):void, com.mxgraph.view.mxGraph::boolean portsEnabled, com.mxgraph.view.mxGraph::setPortsEnabled(boolean):void]
com.mxgraph.view.mxLayoutManager	[com.mxgraph.view.mxLayoutManager::com.mxgraph.util.mxEventSource.mxIEventListener undoHandler, com.mxgraph.view.mxLayoutManager::com.mxgraph.util.mxEventSource.mxIEventListener moveHandler, com.mxgraph.view.mxLayoutManager::setGraph(com.mxgraph.view.mxGraph):void]
com.mxgraph.util.mxCurve	[com.mxgraph.util.mxCurve::java.util.Map<java.lang.String,com.mxgraph.util.mxPoint[]> points, com.mxgraph.util.mxCurve::getCurvePoints(java.lang.String):com.mxgraph.util.mxPoint[], com.mxgraph.util.mxCurve::getIntervals(java.lang.String):double[], com.mxgraph.util.mxCurve::getCurveLength(java.lang.String):double, com.mxgraph.util.mxCurve::java.util.Map<java.lang.String,double[]> intervals, com.mxgraph.util.mxCurve::java.util.Map<java.lang.String,java.lang.Double> curveLengths]
