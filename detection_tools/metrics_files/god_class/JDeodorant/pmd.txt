net.sourceforge.pmd.util.database.DBURI	[net.sourceforge.pmd.util.database.DBURI::net.sourceforge.pmd.util.database.DBType dbType, net.sourceforge.pmd.util.database.DBURI::java.lang.String url, net.sourceforge.pmd.util.database.DBURI::java.lang.String subprotocol, net.sourceforge.pmd.util.database.DBURI::java.lang.String subnamePrefix, net.sourceforge.pmd.util.database.DBURI::java.lang.String driverClass, net.sourceforge.pmd.util.database.DBURI::java.lang.String characterSet, net.sourceforge.pmd.util.database.DBURI::java.lang.String sourceCodeTypes, net.sourceforge.pmd.util.database.DBURI::java.lang.String sourceCodeNames, net.sourceforge.pmd.util.database.DBURI::java.lang.String languages, net.sourceforge.pmd.util.database.DBURI::int sourceCodeType, net.sourceforge.pmd.util.database.DBURI::java.util.List<java.lang.String> schemasList, net.sourceforge.pmd.util.database.DBURI::java.util.List<java.lang.String> sourceCodeTypesList, net.sourceforge.pmd.util.database.DBURI::java.util.List<java.lang.String> sourceCodeNamesList, net.sourceforge.pmd.util.database.DBURI::java.util.List<java.lang.String> languagesList, net.sourceforge.pmd.util.database.DBURI::setFields():void]
net.sourceforge.pmd.RuleSet	[net.sourceforge.pmd.RuleSet::java.util.List<java.lang.String> excludePatterns, net.sourceforge.pmd.RuleSet::addExcludePattern(java.lang.String):void, net.sourceforge.pmd.RuleSet::addExcludePatterns(java.util.Collection<java.lang.String>):void, net.sourceforge.pmd.RuleSet::setExcludePatterns(java.util.Collection<java.lang.String>):void, net.sourceforge.pmd.RuleSet::net.sourceforge.pmd.util.filter.Filter<java.io.File> filter, net.sourceforge.pmd.RuleSet::patternsChanged():void, net.sourceforge.pmd.RuleSet::applies(java.io.File):boolean, net.sourceforge.pmd.RuleSet::java.util.List<java.lang.String> includePatterns, net.sourceforge.pmd.RuleSet::addIncludePattern(java.lang.String):void, net.sourceforge.pmd.RuleSet::addIncludePatterns(java.util.Collection<java.lang.String>):void, net.sourceforge.pmd.RuleSet::setIncludePatterns(java.util.Collection<java.lang.String>):void]
net.sourceforge.pmd.RuleSet	[net.sourceforge.pmd.RuleSet::java.util.List<java.lang.String> excludePatterns, net.sourceforge.pmd.RuleSet::addExcludePattern(java.lang.String):void, net.sourceforge.pmd.RuleSet::addExcludePatterns(java.util.Collection<java.lang.String>):void, net.sourceforge.pmd.RuleSet::setExcludePatterns(java.util.Collection<java.lang.String>):void, net.sourceforge.pmd.RuleSet::net.sourceforge.pmd.util.filter.Filter<java.io.File> filter, net.sourceforge.pmd.RuleSet::patternsChanged():void, net.sourceforge.pmd.RuleSet::applies(java.io.File):boolean]
net.sourceforge.pmd.cpd.CPDTask	[net.sourceforge.pmd.cpd.CPDTask::java.lang.String language, net.sourceforge.pmd.cpd.CPDTask::setLanguage(net.sourceforge.pmd.cpd.CPDTask.LanguageAttribute):void, net.sourceforge.pmd.cpd.CPDTask::boolean ignoreLiterals, net.sourceforge.pmd.cpd.CPDTask::boolean ignoreIdentifiers, net.sourceforge.pmd.cpd.CPDTask::boolean ignoreAnnotations, net.sourceforge.pmd.cpd.CPDTask::createLanguage():net.sourceforge.pmd.cpd.Language]
net.sourceforge.pmd.cpd.CPDTask	[net.sourceforge.pmd.cpd.CPDTask::java.lang.String format, net.sourceforge.pmd.cpd.CPDTask::createRenderer():net.sourceforge.pmd.cpd.Renderer, net.sourceforge.pmd.cpd.CPDTask::setFormat(net.sourceforge.pmd.cpd.CPDTask.FormatAttribute):void]
net.sourceforge.pmd.cpd.CPDTask	[net.sourceforge.pmd.cpd.CPDTask::boolean ignoreLiterals, net.sourceforge.pmd.cpd.CPDTask::boolean ignoreIdentifiers, net.sourceforge.pmd.cpd.CPDTask::boolean ignoreAnnotations, net.sourceforge.pmd.cpd.CPDTask::createLanguage():net.sourceforge.pmd.cpd.Language]
net.sourceforge.pmd.util.database.DBMSMetadata	[net.sourceforge.pmd.util.database.DBMSMetadata::java.sql.Connection connection, net.sourceforge.pmd.util.database.DBMSMetadata::java.lang.String returnSourceCodeStatement, net.sourceforge.pmd.util.database.DBMSMetadata::getSourceCode(java.lang.String, java.lang.String, java.lang.String):java.io.Reader, net.sourceforge.pmd.util.database.DBMSMetadata::java.sql.CallableStatement callableStatement, net.sourceforge.pmd.util.database.DBMSMetadata::int returnType]
net.sourceforge.pmd.util.database.DBMSMetadata	[net.sourceforge.pmd.util.database.DBMSMetadata::net.sourceforge.pmd.util.database.DBURI dburi, net.sourceforge.pmd.util.database.DBMSMetadata::getSourceObjectList():java.util.List<net.sourceforge.pmd.util.database.SourceObject>, net.sourceforge.pmd.util.database.DBMSMetadata::getSourceObjectList(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>):java.util.List<net.sourceforge.pmd.util.database.SourceObject>, net.sourceforge.pmd.util.database.DBMSMetadata::java.lang.String returnSourceCodeObjectsStatement]
net.sourceforge.pmd.cpd.GUI	[net.sourceforge.pmd.cpd.GUI::javax.swing.JButton goButton, net.sourceforge.pmd.cpd.GUI::setProgressControls(boolean):void, net.sourceforge.pmd.cpd.GUI::javax.swing.JButton cancelButton, net.sourceforge.pmd.cpd.GUI::javax.swing.JPanel progressPanel]
net.sourceforge.pmd.cpd.MatchCollector	[net.sourceforge.pmd.cpd.MatchCollector::java.util.List<net.sourceforge.pmd.cpd.Match> matchList, net.sourceforge.pmd.cpd.MatchCollector::getMatches():java.util.List<net.sourceforge.pmd.cpd.Match>, net.sourceforge.pmd.cpd.MatchCollector::addNewMatch(net.sourceforge.pmd.cpd.TokenEntry, net.sourceforge.pmd.cpd.TokenEntry, int, java.util.Map<java.lang.Integer,net.sourceforge.pmd.cpd.Match>):void, net.sourceforge.pmd.cpd.MatchCollector::java.util.Map<java.lang.Integer,java.util.Map<java.lang.Integer,net.sourceforge.pmd.cpd.Match>> matchTree, net.sourceforge.pmd.cpd.MatchCollector::reportMatch(net.sourceforge.pmd.cpd.TokenEntry, net.sourceforge.pmd.cpd.TokenEntry, int):void]
net.sourceforge.pmd.cpd.MatchCollector	[net.sourceforge.pmd.cpd.MatchCollector::java.util.List<net.sourceforge.pmd.cpd.Match> matchList, net.sourceforge.pmd.cpd.MatchCollector::getMatches():java.util.List<net.sourceforge.pmd.cpd.Match>, net.sourceforge.pmd.cpd.MatchCollector::addNewMatch(net.sourceforge.pmd.cpd.TokenEntry, net.sourceforge.pmd.cpd.TokenEntry, int, java.util.Map<java.lang.Integer,net.sourceforge.pmd.cpd.Match>):void]
net.sourceforge.pmd.cpd.MatchCollector	[net.sourceforge.pmd.cpd.MatchCollector::net.sourceforge.pmd.cpd.MatchAlgorithm ma, net.sourceforge.pmd.cpd.MatchCollector::collect(java.util.List<net.sourceforge.pmd.cpd.TokenEntry>):void, net.sourceforge.pmd.cpd.MatchCollector::hasPreviousDupe(net.sourceforge.pmd.cpd.TokenEntry, net.sourceforge.pmd.cpd.TokenEntry):boolean, net.sourceforge.pmd.cpd.MatchCollector::countDuplicateTokens(net.sourceforge.pmd.cpd.TokenEntry, net.sourceforge.pmd.cpd.TokenEntry):int]
net.sourceforge.pmd.dcd.graph.ClassNode	[net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode> fieldNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getFieldNodes():java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineField(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.FieldNode, net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode> constructorNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getConstructorNodes():java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineConstructor(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.ConstructorNode, net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.MethodNode> methodNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getMethodNodes():java.util.List<net.sourceforge.pmd.dcd.graph.MethodNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineMethod(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.MethodNode]
net.sourceforge.pmd.dcd.graph.ClassNode	[net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode> fieldNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getFieldNodes():java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineField(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.FieldNode, net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode> constructorNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getConstructorNodes():java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineConstructor(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.ConstructorNode]
net.sourceforge.pmd.dcd.graph.ClassNode	[net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode> fieldNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getFieldNodes():java.util.List<net.sourceforge.pmd.dcd.graph.FieldNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineField(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.FieldNode]
net.sourceforge.pmd.dcd.graph.ClassNode	[net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode> constructorNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getConstructorNodes():java.util.List<net.sourceforge.pmd.dcd.graph.ConstructorNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineConstructor(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.ConstructorNode]
net.sourceforge.pmd.dcd.graph.ClassNode	[net.sourceforge.pmd.dcd.graph.ClassNode::java.util.List<net.sourceforge.pmd.dcd.graph.MethodNode> methodNodes, net.sourceforge.pmd.dcd.graph.ClassNode::getMethodNodes():java.util.List<net.sourceforge.pmd.dcd.graph.MethodNode>, net.sourceforge.pmd.dcd.graph.ClassNode::defineMethod(java.lang.String, java.lang.String):net.sourceforge.pmd.dcd.graph.MethodNode]
net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator	[net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator::net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator.MethodWrapper[] methodWrappers, net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator::int position, net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator::net.sourceforge.pmd.lang.ast.Node node, net.sourceforge.pmd.lang.ast.xpath.AttributeAxisIterator::getNextAttribute():net.sourceforge.pmd.lang.ast.xpath.Attribute]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.CodeEditorTextPane codeEditorPane, net.sourceforge.pmd.util.designer.Designer::javax.swing.JTextArea xpathQueryArea, net.sourceforge.pmd.util.designer.Designer::javax.swing.ButtonGroup xpathVersionButtonGroup, net.sourceforge.pmd.util.designer.Designer::createRuleXML():void, net.sourceforge.pmd.util.designer.Designer::createXPathVersionPanel():javax.swing.JPanel]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.Designer.TreeWidget astTreeWidget, net.sourceforge.pmd.util.designer.Designer::loadASTTreeData(javax.swing.tree.TreeNode):void, net.sourceforge.pmd.util.designer.Designer::createASTPanel():javax.swing.JComponent, net.sourceforge.pmd.util.designer.Designer::createNoImageTreeCellRenderer():javax.swing.tree.TreeCellRenderer, net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.Designer.TreeWidget symbolTableTreeWidget, net.sourceforge.pmd.util.designer.Designer::loadSymbolTableTreeData(javax.swing.tree.TreeNode):void, net.sourceforge.pmd.util.designer.Designer::createSymbolTableResultPanel():javax.swing.JComponent]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.Designer.TreeWidget astTreeWidget, net.sourceforge.pmd.util.designer.Designer::loadASTTreeData(javax.swing.tree.TreeNode):void, net.sourceforge.pmd.util.designer.Designer::createASTPanel():javax.swing.JComponent, net.sourceforge.pmd.util.designer.Designer::createNoImageTreeCellRenderer():javax.swing.tree.TreeCellRenderer]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::javax.swing.DefaultListModel xpathResults, net.sourceforge.pmd.util.designer.Designer::javax.swing.JList xpathResultList, net.sourceforge.pmd.util.designer.Designer::createXPathResultPanel():javax.swing.JComponent]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.CodeEditorTextPane codeEditorPane, net.sourceforge.pmd.util.designer.Designer::javax.swing.JTextArea xpathQueryArea, net.sourceforge.pmd.util.designer.Designer::javax.swing.ButtonGroup xpathVersionButtonGroup, net.sourceforge.pmd.util.designer.Designer::createRuleXML():void, net.sourceforge.pmd.util.designer.Designer::createXPathVersionPanel():javax.swing.JPanel, net.sourceforge.pmd.util.designer.Designer::loadSettings():void, net.sourceforge.pmd.util.designer.Designer::saveSettings():void, net.sourceforge.pmd.util.designer.Designer::createCodeEditorPanel():javax.swing.JComponent, net.sourceforge.pmd.util.designer.Designer::setCodeEditPaneText(java.lang.String):void, net.sourceforge.pmd.util.designer.Designer::createXPathQueryPanel():javax.swing.JPanel, net.sourceforge.pmd.util.designer.Designer::getXmlTreeCode():java.lang.String, net.sourceforge.pmd.util.designer.Designer::copyXmlToClipboard():void, net.sourceforge.pmd.util.designer.Designer::getCompilationUnit():net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.util.designer.Designer::javax.swing.JRadioButtonMenuItem[] languageVersionMenuItems, net.sourceforge.pmd.util.designer.Designer::setLanguageVersion(net.sourceforge.pmd.lang.LanguageVersion):void, net.sourceforge.pmd.util.designer.Designer::selectedLanguageVersionIndex():int, net.sourceforge.pmd.util.designer.Designer::getLanguageVersion():net.sourceforge.pmd.lang.LanguageVersion, net.sourceforge.pmd.util.designer.Designer::createMenuBar():javax.swing.JMenuBar, net.sourceforge.pmd.util.designer.Designer::getLanguageVersionHandler():net.sourceforge.pmd.lang.LanguageVersionHandler, net.sourceforge.pmd.util.designer.Designer::createGoButton():javax.swing.JButton, net.sourceforge.pmd.util.designer.Designer::getTextContext(org.w3c.dom.Element):java.lang.String, net.sourceforge.pmd.util.designer.Designer::javax.swing.DefaultListModel xpathResults, net.sourceforge.pmd.util.designer.Designer::javax.swing.JList xpathResultList, net.sourceforge.pmd.util.designer.Designer::createXPathResultPanel():javax.swing.JComponent]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::net.sourceforge.pmd.util.designer.CodeEditorTextPane codeEditorPane, net.sourceforge.pmd.util.designer.Designer::javax.swing.JTextArea xpathQueryArea, net.sourceforge.pmd.util.designer.Designer::javax.swing.ButtonGroup xpathVersionButtonGroup, net.sourceforge.pmd.util.designer.Designer::createRuleXML():void, net.sourceforge.pmd.util.designer.Designer::createXPathVersionPanel():javax.swing.JPanel, net.sourceforge.pmd.util.designer.Designer::loadSettings():void, net.sourceforge.pmd.util.designer.Designer::saveSettings():void, net.sourceforge.pmd.util.designer.Designer::createCodeEditorPanel():javax.swing.JComponent, net.sourceforge.pmd.util.designer.Designer::setCodeEditPaneText(java.lang.String):void, net.sourceforge.pmd.util.designer.Designer::createXPathQueryPanel():javax.swing.JPanel, net.sourceforge.pmd.util.designer.Designer::getXmlTreeCode():java.lang.String, net.sourceforge.pmd.util.designer.Designer::copyXmlToClipboard():void, net.sourceforge.pmd.util.designer.Designer::getCompilationUnit():net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.util.designer.Designer::javax.swing.JRadioButtonMenuItem[] languageVersionMenuItems, net.sourceforge.pmd.util.designer.Designer::setLanguageVersion(net.sourceforge.pmd.lang.LanguageVersion):void, net.sourceforge.pmd.util.designer.Designer::selectedLanguageVersionIndex():int, net.sourceforge.pmd.util.designer.Designer::getLanguageVersion():net.sourceforge.pmd.lang.LanguageVersion, net.sourceforge.pmd.util.designer.Designer::createMenuBar():javax.swing.JMenuBar, net.sourceforge.pmd.util.designer.Designer::getLanguageVersionHandler():net.sourceforge.pmd.lang.LanguageVersionHandler, net.sourceforge.pmd.util.designer.Designer::createGoButton():javax.swing.JButton, net.sourceforge.pmd.util.designer.Designer::getTextContext(org.w3c.dom.Element):java.lang.String]
net.sourceforge.pmd.util.designer.Designer	[net.sourceforge.pmd.util.designer.Designer::javax.swing.JRadioButtonMenuItem[] languageVersionMenuItems, net.sourceforge.pmd.util.designer.Designer::setLanguageVersion(net.sourceforge.pmd.lang.LanguageVersion):void, net.sourceforge.pmd.util.designer.Designer::selectedLanguageVersionIndex():int, net.sourceforge.pmd.util.designer.Designer::getLanguageVersion():net.sourceforge.pmd.lang.LanguageVersion, net.sourceforge.pmd.util.designer.Designer::createMenuBar():javax.swing.JMenuBar, net.sourceforge.pmd.util.designer.Designer::getLanguageVersionHandler():net.sourceforge.pmd.lang.LanguageVersionHandler]
net.sourceforge.pmd.Report	[net.sourceforge.pmd.Report::java.util.Set<net.sourceforge.pmd.stat.Metric> metrics, net.sourceforge.pmd.Report::hasMetrics():boolean, net.sourceforge.pmd.Report::metrics():java.util.Iterator<net.sourceforge.pmd.stat.Metric>, net.sourceforge.pmd.Report::addMetric(net.sourceforge.pmd.stat.Metric):void, net.sourceforge.pmd.Report::java.util.List<net.sourceforge.pmd.SynchronizedReportListener> listeners, net.sourceforge.pmd.Report::createReport(net.sourceforge.pmd.RuleContext, java.lang.String):net.sourceforge.pmd.Report]
net.sourceforge.pmd.Report	[net.sourceforge.pmd.Report::long start, net.sourceforge.pmd.Report::start():void, net.sourceforge.pmd.Report::getElapsedTimeInMillis():long, net.sourceforge.pmd.Report::long end, net.sourceforge.pmd.Report::end():void]
net.sourceforge.pmd.Report	[net.sourceforge.pmd.Report::java.util.List<net.sourceforge.pmd.Report.ProcessingError> errors, net.sourceforge.pmd.Report::addError(net.sourceforge.pmd.Report.ProcessingError):void, net.sourceforge.pmd.Report::hasErrors():boolean, net.sourceforge.pmd.Report::errors():java.util.Iterator<net.sourceforge.pmd.Report.ProcessingError>]
net.sourceforge.pmd.Report	[net.sourceforge.pmd.Report::java.util.List<net.sourceforge.pmd.Report.RuleConfigurationError> configErrors, net.sourceforge.pmd.Report::addConfigError(net.sourceforge.pmd.Report.RuleConfigurationError):void, net.sourceforge.pmd.Report::hasConfigErrors():boolean, net.sourceforge.pmd.Report::configErrors():java.util.Iterator<net.sourceforge.pmd.Report.RuleConfigurationError>]
net.sourceforge.pmd.ant.PMDTask	[net.sourceforge.pmd.ant.PMDTask::boolean failOnRuleViolation, net.sourceforge.pmd.ant.PMDTask::int maxRuleViolations, net.sourceforge.pmd.ant.PMDTask::setMaxRuleViolations(int):void]
net.sourceforge.pmd.ant.PMDTask	[net.sourceforge.pmd.ant.PMDTask::org.apache.tools.ant.types.Path auxClasspath, net.sourceforge.pmd.ant.PMDTask::createAuxClasspath():org.apache.tools.ant.types.Path, net.sourceforge.pmd.ant.PMDTask::setAuxClasspathRef(org.apache.tools.ant.types.Reference):void]
net.sourceforge.pmd.cpd.GridBagHelper	[net.sourceforge.pmd.cpd.GridBagHelper::int x, net.sourceforge.pmd.cpd.GridBagHelper::int y, net.sourceforge.pmd.cpd.GridBagHelper::nextRow():void]
net.sourceforge.pmd.cpd.GridBagHelper	[net.sourceforge.pmd.cpd.GridBagHelper::java.awt.GridBagLayout gridbag, net.sourceforge.pmd.cpd.GridBagHelper::java.awt.Container container, net.sourceforge.pmd.cpd.GridBagHelper::java.awt.GridBagConstraints c, net.sourceforge.pmd.cpd.GridBagHelper::double[] weights, net.sourceforge.pmd.cpd.GridBagHelper::add(java.awt.Component, int):void]
net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder	[net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::boolean isAnnotation, net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::boolean discardingSuppressing, net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::skipCPDSuppression(net.sourceforge.pmd.lang.java.ast.Token):void]
net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder	[net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::boolean nextTokenEndsAnnotation, net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::detectAnnotations(net.sourceforge.pmd.lang.java.ast.Token):void, net.sourceforge.pmd.cpd.JavaTokenizer.TokenDiscarder::int annotationStack]
net.sourceforge.pmd.lang.dfa.Structure	[net.sourceforge.pmd.lang.dfa.Structure::java.util.Stack<net.sourceforge.pmd.lang.dfa.StackObject> braceStack, net.sourceforge.pmd.lang.dfa.Structure::java.util.Stack<net.sourceforge.pmd.lang.dfa.StackObject> continueBreakReturnStack, net.sourceforge.pmd.lang.dfa.Structure::dump():java.lang.String, net.sourceforge.pmd.lang.dfa.Structure::pushOnStack(int, net.sourceforge.pmd.lang.dfa.DataFlowNode):void]
net.sourceforge.pmd.lang.dfa.Structure	[net.sourceforge.pmd.lang.dfa.Structure::java.util.List<net.sourceforge.pmd.lang.dfa.DataFlowNode> dataFlow, net.sourceforge.pmd.lang.dfa.Structure::createStartNode(int):net.sourceforge.pmd.lang.dfa.DataFlowNode, net.sourceforge.pmd.lang.dfa.Structure::createEndNode(int):net.sourceforge.pmd.lang.dfa.DataFlowNode, net.sourceforge.pmd.lang.dfa.Structure::getLast():net.sourceforge.pmd.lang.dfa.DataFlowNode, net.sourceforge.pmd.lang.dfa.Structure::getFirst():net.sourceforge.pmd.lang.dfa.DataFlowNode]
net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule	[net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule::isLatinDigit(char):boolean, net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule::isHexCharacter(char):boolean, net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule::isIPv4(char, java.lang.String):boolean, net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule::isIPv6(char, java.lang.String, boolean, boolean):boolean]
net.sourceforge.pmd.lang.java.rule.coupling.LawOfDemeterRule.MethodCall	[net.sourceforge.pmd.lang.java.rule.coupling.LawOfDemeterRule.MethodCall::java.lang.String baseTypeName, net.sourceforge.pmd.lang.java.rule.coupling.LawOfDemeterRule.MethodCall::java.lang.Class<?> baseType, net.sourceforge.pmd.lang.java.rule.coupling.LawOfDemeterRule.MethodCall::isNotBuilder():boolean, net.sourceforge.pmd.lang.java.rule.coupling.LawOfDemeterRule.MethodCall::isIterator():boolean]
net.sourceforge.pmd.lang.java.rule.design.GodClassRule	[net.sourceforge.pmd.lang.java.rule.design.GodClassRule::isForeignGetterSetterCall(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression):boolean, net.sourceforge.pmd.lang.java.rule.design.GodClassRule::isForeignAttributeOrMethod(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression):boolean, net.sourceforge.pmd.lang.java.rule.design.GodClassRule::getNameImage(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression):java.lang.String, net.sourceforge.pmd.lang.java.rule.design.GodClassRule::getVariableName(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression):java.lang.String, net.sourceforge.pmd.lang.java.rule.design.GodClassRule::getMethodOrAttributeName(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression):java.lang.String]
net.sourceforge.pmd.lang.java.rule.strings.UseStringBufferLengthRule	[net.sourceforge.pmd.lang.java.rule.strings.UseStringBufferLengthRule::isViolation(net.sourceforge.pmd.lang.java.ast.ASTName):boolean, net.sourceforge.pmd.lang.java.rule.strings.UseStringBufferLengthRule::isEqualsViolation(net.sourceforge.pmd.lang.ast.Node):boolean, net.sourceforge.pmd.lang.java.rule.strings.UseStringBufferLengthRule::isLengthViolation(net.sourceforge.pmd.lang.ast.Node):boolean]
net.sourceforge.pmd.lang.vm.directive.Directive	[net.sourceforge.pmd.lang.vm.directive.Directive::int line, net.sourceforge.pmd.lang.vm.directive.Directive::setLocation(int, int):void, net.sourceforge.pmd.lang.vm.directive.Directive::int column]
net.sourceforge.pmd.processor.PmdRunnable	[net.sourceforge.pmd.processor.PmdRunnable::java.util.concurrent.ExecutorService executor, net.sourceforge.pmd.processor.PmdRunnable::addErrorAndShutdown(net.sourceforge.pmd.Report, java.lang.Exception, java.lang.String):void, net.sourceforge.pmd.processor.PmdRunnable::java.lang.String fileName]
net.sourceforge.pmd.PMDConfiguration	[net.sourceforge.pmd.PMDConfiguration::net.sourceforge.pmd.lang.LanguageVersionDiscoverer languageVersionDiscoverer, net.sourceforge.pmd.PMDConfiguration::setDefaultLanguageVersions(java.util.List<net.sourceforge.pmd.lang.LanguageVersion>):void, net.sourceforge.pmd.PMDConfiguration::getLanguageVersionOfFile(java.lang.String):net.sourceforge.pmd.lang.LanguageVersion]
net.sourceforge.pmd.cpd.CPD	[net.sourceforge.pmd.cpd.CPD::java.util.Map<java.lang.String,net.sourceforge.pmd.cpd.SourceCode> source, net.sourceforge.pmd.cpd.CPD::getSourcePaths():java.util.List<java.lang.String>, net.sourceforge.pmd.cpd.CPD::getSources():java.util.List<net.sourceforge.pmd.cpd.SourceCode>]
net.sourceforge.pmd.cpd.CPD	[net.sourceforge.pmd.cpd.CPD::net.sourceforge.pmd.cpd.CPDConfiguration configuration, net.sourceforge.pmd.cpd.CPD::add(net.sourceforge.pmd.cpd.SourceCode):void, net.sourceforge.pmd.cpd.CPD::java.util.Set<java.lang.String> current, net.sourceforge.pmd.cpd.CPD::add(java.util.List<java.io.File>):void, net.sourceforge.pmd.cpd.CPD::add(java.io.File):void]
net.sourceforge.pmd.lang.ast.xpath.NodeIterator	[net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getPreviousSibling(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getPositionFromParent(net.sourceforge.pmd.lang.ast.Node):int, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getNextSibling(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getFirstChild(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getLastChild(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node]
net.sourceforge.pmd.lang.ast.xpath.NodeIterator	[net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getPreviousSibling(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getPositionFromParent(net.sourceforge.pmd.lang.ast.Node):int, net.sourceforge.pmd.lang.ast.xpath.NodeIterator::getNextSibling(net.sourceforge.pmd.lang.ast.Node):net.sourceforge.pmd.lang.ast.Node]
net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor	[net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor::java.util.Map<java.lang.String,java.util.List<net.sourceforge.pmd.lang.ast.Node>> nodeNameToNodes, net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor::indexNode(net.sourceforge.pmd.lang.ast.Node):void, net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor::clear():void]
net.sourceforge.pmd.util.viewer.model.ViewerModel	[net.sourceforge.pmd.util.viewer.model.ViewerModel::java.util.List<net.sourceforge.pmd.util.viewer.model.ViewerModelListener> listeners, net.sourceforge.pmd.util.viewer.model.ViewerModel::removeViewerModelListener(net.sourceforge.pmd.util.viewer.model.ViewerModelListener):void, net.sourceforge.pmd.util.viewer.model.ViewerModel::fireViewerModelEvent(net.sourceforge.pmd.util.viewer.model.ViewerModelEvent):void]
net.sourceforge.pmd.util.viewer.model.ViewerModel	[net.sourceforge.pmd.util.viewer.model.ViewerModel::net.sourceforge.pmd.lang.ast.Node rootNode, net.sourceforge.pmd.util.viewer.model.ViewerModel::hasCompiledTree():boolean, net.sourceforge.pmd.util.viewer.model.ViewerModel::java.util.List<net.sourceforge.pmd.lang.ast.Node> evaluationResults, net.sourceforge.pmd.util.viewer.model.ViewerModel::evaluateXPathExpression(java.lang.String, java.lang.Object):void, net.sourceforge.pmd.util.viewer.model.ViewerModel::commitSource(java.lang.String, net.sourceforge.pmd.lang.LanguageVersion):void]
net.sourceforge.pmd.lang.java.symboltable.TypeSet	[net.sourceforge.pmd.lang.java.symboltable.TypeSet::net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader pmdClassLoader, net.sourceforge.pmd.lang.java.symboltable.TypeSet::buildResolvers():void, net.sourceforge.pmd.lang.java.symboltable.TypeSet::java.lang.String pkg, net.sourceforge.pmd.lang.java.symboltable.TypeSet::java.util.Set<java.lang.String> imports, net.sourceforge.pmd.lang.java.symboltable.TypeSet::getImportsCount():int]
net.sourceforge.pmd.lang.LanguageVersionDiscoverer	[net.sourceforge.pmd.lang.LanguageVersionDiscoverer::getDefaultLanguageVersionForFile(java.lang.String):net.sourceforge.pmd.lang.LanguageVersion, net.sourceforge.pmd.lang.LanguageVersionDiscoverer::getLanguagesForFile(java.lang.String):java.util.List<net.sourceforge.pmd.lang.Language>, net.sourceforge.pmd.lang.LanguageVersionDiscoverer::getExtension(java.lang.String):java.lang.String]
net.sourceforge.pmd.lang.ast.xpath.Attribute	[net.sourceforge.pmd.lang.ast.xpath.Attribute::java.lang.Object value, net.sourceforge.pmd.lang.ast.xpath.Attribute::getStringValue():java.lang.String, net.sourceforge.pmd.lang.ast.xpath.Attribute::java.lang.String stringValue]
net.sourceforge.pmd.lang.ecmascript.ast.EcmascriptParser	[net.sourceforge.pmd.lang.ecmascript.ast.EcmascriptParser::java.util.Map<java.lang.Integer,java.lang.String> suppressMap, net.sourceforge.pmd.lang.ecmascript.ast.EcmascriptParser::java.lang.String suppressMarker, net.sourceforge.pmd.lang.ecmascript.ast.EcmascriptParser::parse(java.io.Reader):net.sourceforge.pmd.lang.ecmascript.ast.EcmascriptNode<org.mozilla.javascript.ast.AstRoot>]
net.sourceforge.pmd.lang.plsql.symboltable.TypeSet	[net.sourceforge.pmd.lang.plsql.symboltable.TypeSet::java.lang.String pkg, net.sourceforge.pmd.lang.plsql.symboltable.TypeSet::buildResolvers():void, net.sourceforge.pmd.lang.plsql.symboltable.TypeSet::java.util.Set<java.lang.String> imports, net.sourceforge.pmd.lang.plsql.symboltable.TypeSet::getImportsCount():int]
net.sourceforge.pmd.renderers.XSLTRenderer	[net.sourceforge.pmd.renderers.XSLTRenderer::javax.xml.transform.Transformer transformer, net.sourceforge.pmd.renderers.XSLTRenderer::prepareTransformer(java.io.InputStream):void, net.sourceforge.pmd.renderers.XSLTRenderer::transform(org.w3c.dom.Document):void, net.sourceforge.pmd.renderers.XSLTRenderer::java.io.Writer outputWriter]
net.sourceforge.pmd.util.designer.Designer.ASTTreeNode	[net.sourceforge.pmd.util.designer.Designer.ASTTreeNode::net.sourceforge.pmd.lang.ast.Node node, net.sourceforge.pmd.util.designer.Designer.ASTTreeNode::getToolTipText():java.lang.String, net.sourceforge.pmd.util.designer.Designer.ASTTreeNode::label():java.lang.String]
